<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[jade语法实践]]></title>
      <url>http://bysonline.github.io/2016/07/18/jade%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<p>jade是一个模板引擎，可以通过node.js来使用。本来对前端技术了解不多，接触jade源于搭建hexo博客系统。maupassant主题模板是基于jade的，所以想按自己的想法来定制maupassant主题简单了解了一下jade。</p>
<p>hexo的maupassant主题是一个极简主题模板，安装也很简单，用起来不错，但是有些小地方还是想按照自己的想法改一改：</p>
<ol>
<li>默认只有归档，没有tags和categories。而且添加了tags和categories后不能显示tags和categories的列表；</li>
<li>每篇文章tags标签在文章末尾，希望categories一样在文章开头显示；</li>
</ol>
<h3 id="增加tags列表"><a href="#增加tags列表" class="headerlink" title="增加tags列表"></a>增加tags列表</h3><p>安装hexo和maupassant主题后在themes/maupassant/_ config.yml中添加tags和categories两个menu，重启服务界面能看到tags和categories的菜单导航。但是点击会报找不到页面错误，所以还需要生成tags/index和categories/index。执行<br><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> page <span class="keyword">tags</span></div><div class="line">hexo <span class="keyword">new</span> page categories</div></pre></td></tr></table></figure></p>
<p>会生成tags/index.md和categories/index.md文件，重启后不会再报找不到页面的错误。<br>但index.md默认是空白页面，内容需要自己写，所以想参考archive来写一些内容。想显示的内容也很简单，首先就是列出所有tags或categories，然后能显示每个tag或category下的文章数量。<br>网站的tags和categories不是固定的，所以在index.md中写死是不行的，需要利用模板来实现。看了看maupassant主题的layout结构，首先先参考archive.jade创建了一个tags.jade文件,只保留大的结构。<br><figure class="highlight xl"><table><tr><td class="code"><pre><div class="line">extends base</div><div class="line"></div><div class="line"><span class="keyword">block</span> <span class="built_in">title</span></div><div class="line">  <span class="built_in">title</span>= <span class="built_in">page</span>.tag + <span class="string">' | '</span> + config.<span class="built_in">title</span></div><div class="line"><span class="keyword">block</span> content</div><div class="line"></div><div class="line">  include _partial/paginator.jade</div></pre></td></tr></table></figure></p>
<p>参考archive.jade代码，对网站所有tag进行分组，然后遍历显示。<br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">each tags <span class="keyword">in</span> _.groupBy(site<span class="selector-class">.tags</span><span class="selector-class">.toArray</span>(), function(p)&#123;return page.tag&#125;)</div><div class="line">  <span class="selector-tag">ul</span><span class="selector-class">.listing</span></div><div class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags</div><div class="line">      <span class="selector-tag">li</span></div><div class="line">        <span class="selector-tag">h4</span></div><div class="line">          a(href=url_for(tag.path))= _.split(tag<span class="selector-class">.path</span>,<span class="string">'\/'</span>)[<span class="number">1</span>]</div></pre></td></tr></table></figure></p>
<p>最后一行代码等号后边是tag的名字，原本以为tag.name就可以了，但是重建之后发现不能正常显示。不明白原因，查看了hexo的文档，在hexo的变量声明中tag的名字是page.tag，猜测是在post页面中才能引用tag属性。查了文档也没找到正确的打开方式，忽然发现tag.path可以正常显示tag的路径，所以是否可以在path中将tag的name提取出来呢？于是查了一下<a href="https://lodash.com/docs" target="_blank" rel="external">https://lodash.com/docs</a>(archive.jade里注释中有让看的，就看看喽)，还真有spilt的函数。改完重新生成，显示正常了(别忘了把tag/index.md的layout改成tags哈)。</p>
<h3 id="改变文章中tags的显示位置"><a href="#改变文章中tags的显示位置" class="headerlink" title="改变文章中tags的显示位置"></a>改变文章中tags的显示位置</h3><p>默认界面tags在文章结束坐下位置，但我期望在界面文章开始位置增加tags的显示，即在点击量统计的后边再增加显示tags内容。结合模板代码和界面的显示效果，可以大致定位到具体代码位置。文章正文默认使用的post模板，位于themes/maupassant/layout/post.jade。在文件15-19行是点击量统计的代码，所以在后面可添加tags显示代码。<br><figure class="highlight xl"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="built_in">page</span>.tags.length &gt; <span class="number">0</span></div><div class="line">  span= <span class="string">' | '</span></div><div class="line">  span.tag</div><div class="line">    <span class="keyword">for</span> tag <span class="built_in">in</span> <span class="built_in">page</span>.tags.toArray()</div><div class="line">      i(class=[<span class="string">'fa'</span>,<span class="string">'fa-paperclip'</span>]) &amp;nbsp;</div><div class="line">      a(href=url_for(tag.<span class="built_in">path</span>))= tag.<span class="keyword">name</span> + <span class="string">''</span></div></pre></td></tr></table></figure></p>
<p>jade模板的语法有严格缩进要求，所以和上边的代码位置一致即可。<br>代码看起来很简单，但是改的时候还是费了一些周折。<br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">page<span class="selector-class">.tags</span><span class="selector-class">.toArray</span>()</div></pre></td></tr></table></figure></p>
<p>的写法参考上文<br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">page<span class="selector-class">.categories</span><span class="selector-class">.toArray</span>()</div></pre></td></tr></table></figure></p>
<p>很容易写出来。<br><figure class="highlight cs"><table><tr><td class="code"><pre><div class="line">i(<span class="keyword">class</span>=[<span class="string">'fa'</span>,<span class="string">'fa-paperclip'</span>]) &amp;nbsp;</div></pre></td></tr></table></figure></p>
<p>是一个i标签，用于显示图标，渲染成html是<br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-paperclip"</span>&gt;&amp;nbsp;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>如果不看jade的语法，只根据post.jade文件中的代码可以大致推测jade的语法规则比如<br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">span</span>.category</div></pre></td></tr></table></figure></p>
<p>渲染成html后是<figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"category"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>但是单class属性图标无法正常显示，也试过<br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">i</span><span class="selector-class">.fa</span><span class="selector-class">.fa-paperclip</span></div><div class="line">或</div><div class="line"><span class="selector-tag">i</span><span class="selector-class">.fa</span> <span class="selector-tag">i</span>.fa-paperclip</div></pre></td></tr></table></figure></p>
<p>等等写法，均不能达到效果，只好去看jade的文档。在<a href="http://jade-lang.com/reference/attributes/" target="_blank" rel="external">http://jade-lang.com/reference/attributes/</a>中<strong>Class Attributes</strong>找到了多个class的语法说明，问题至此得以解决。</p>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://bysonline.github.io/2016/07/18/hbase%20%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>hbase 伪分布模式安装</p>
<h2 id=""><a href="#" class="headerlink" title="="></a>=</h2><p>title: hbase shell 操作<br>toc: true<br>date: 2016-07-16 15:49:44<br>tags:</p>
<h2 id="categories"><a href="#categories" class="headerlink" title="categories:"></a>categories:</h2><blockquote>
<p>version hbase-0.94.26.tar.gz</p>
<p>####1. 解压缩<br>    tar -zxvf hbase-0.94.26.tar.gz</p>
</blockquote>
<p>####2. 修改配置文件</p>
<p>#####hbase-env.sh</p>
<pre><code># The java implementation to use.  Java 1.6 required.
export JAVA_HOME=/usr/java/jdk1.6.0_45/
# Extra Java CLASSPATH elements.  Optional.
export HBASE_CLASSPATH=/user/hadoop/hadoop-1.2.1/conf
# Tell HBase whether it should manage it&apos;s own instance of Zookeeper or not.
export HBASE_MANAGES_ZK=true
</code></pre><p>#####hbase-site.xml<br>    <configuration><br>        <property><br>            <name>hbase.rootdir</name><br>            <value>hdfs://localhost:9000/hbase</value><br>          </property><br>        <property><br>            <name>hbase.cluster.distributed</name><br>            <value>true</value><br>          </property><br>           <property><br>            <name>hbase.zookeeper.quorum</name><br>            <value>localhost</value><br>          </property><br>    </configuration></p>
<p>####3. 运行<br>     /usr/hadoop/hadoop-1.2.1/bin<br>     [rolex@node2 bin]$ ./start-all.sh （先运行hdfs）<br>     /usr/hbase/hbase-0.94.27/bin<br>     [rolex@node2 bin]$ ./start-hbase.sh （启动hbase）<br>     [rolex@node2 bin]$ ./local-master-backup.sh start 1  （启动master备份）<br>     [rolex@node2 bin]$ ./local-regionservers.sh start 1  （启动regionserver）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Client SDK (Java 版)]]></title>
      <url>http://bysonline.github.io/2016/07/16/Client%20SDK%20(Java%20%E7%89%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<figure class="highlight gauss"><table><tr><td class="code"><pre><div class="line">ChinadaasClient client = <span class="keyword">new</span> ChinadaasClient(url, clientId, appId, <span class="built_in">token</span>);</div><div class="line">PersonCheckRequest request1 = <span class="keyword">new</span> PersonCheckRequest(name, identity, <span class="built_in">type</span>);</div><div class="line"><span class="keyword">String</span> result = client.get(request1);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[电信数据核验接口]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%94%B5%E4%BF%A1%E6%95%B0%E6%8D%AE%E6%A0%B8%E9%AA%8C%E6%8E%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<p>信息核查是一系列查询api接口，以REST服务方式提供。用户按照指定规则开发接口程序或引入SDK后，可通过程序调用接口。使用前请先申请客户账号和令牌。令牌由客户保存，用于生成签名。为使该服务的使用者详细了解服务接口调用方法和规范，特编制此接口使用说明文档。</p>
<h3 id="公共参数"><a href="#公共参数" class="headerlink" title="公共参数"></a>公共参数</h3><table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>是否必需</th>
<th>示例值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>clientId</td>
<td>string</td>
<td>必须</td>
<td>guest</td>
<td>用户唯一标识</td>
</tr>
<tr>
<td>signatrue</td>
<td>string</td>
<td>必须</td>
<td>123</td>
<td>用户请求的数据签名，由用户令牌，timestamp，nonce加密获得</td>
</tr>
<tr>
<td>timestamp</td>
<td>string</td>
<td>必须</td>
<td>2016-07-05 13:42:10</td>
<td>时间戳，服务器允许最大10分钟误差</td>
</tr>
<tr>
<td>nonce</td>
<td>string</td>
<td>必须</td>
<td>-1200534598</td>
<td>随机数</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>可选</td>
<td>xml</td>
<td>默认为json</td>
</tr>
</tbody>
</table>
<h3 id="1-电信数据身份核验"><a href="#1-电信数据身份核验" class="headerlink" title="1. 电信数据身份核验"></a>1. 电信数据身份核验</h3><p>根据提供的手机号，姓名，身份证号，由系统针对信息的一致性进行核查，并返回结果。</p>
<h4 id="1-1-URL"><a href="#1-1-URL" class="headerlink" title="1.1 URL"></a>1.1 URL</h4><p><a href="http://ip:port/drink/greenTea" target="_blank" rel="external">http://ip:port/drink/greenTea</a></p>
<h4 id="1-2-请求参数"><a href="#1-2-请求参数" class="headerlink" title="1.2 请求参数"></a>1.2 请求参数</h4><table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>是否必需</th>
<th>示例值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>string</td>
<td>必须</td>
<td>张三</td>
<td>人员姓名</td>
<td></td>
</tr>
<tr>
<td>phone</td>
<td>string</td>
<td>必须</td>
<td>18610011001</td>
<td>手机号码</td>
</tr>
<tr>
<td>identity</td>
<td>string</td>
<td>必须</td>
<td>210219197101011246</td>
<td>身份证</td>
</tr>
</tbody>
</table>
<h4 id="1-3-响应参数"><a href="#1-3-响应参数" class="headerlink" title="1.3 响应参数"></a>1.3 响应参数</h4><table>
<thead>
<tr>
<th>参数</th>
<th>类</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>data</td>
<td>Object</td>
<td>返回消息数据结构</td>
</tr>
<tr>
<td>&nbsp;&nbsp;&nbsp;&nbsp;├ errorCode</td>
<td>string</td>
<td>错误码，0表示成功</td>
</tr>
<tr>
<td>&nbsp;&nbsp;&nbsp;&nbsp;└ result</td>
<td>Object</td>
<td>核验结果数据结构</td>
</tr>
<tr>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├ code</td>
<td>string</td>
<td>消息码</td>
</tr>
<tr>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├ message</td>
<td>string</td>
<td>消息说明</td>
</tr>
</tbody>
</table>
<h4 id="1-4-响应示例"><a href="#1-4-响应示例" class="headerlink" title="1.4 响应示例"></a>1.4 响应示例</h4><p><strong><em>xml</em></strong><br><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> standalone=<span class="string">"yes"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">errorCode</span>&gt;</span>0<span class="tag">&lt;/<span class="name">errorCode</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">result</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>2<span class="tag">&lt;/<span class="name">code</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">message</span>&gt;</span>核验不一致<span class="tag">&lt;/<span class="name">message</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">result</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">data</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong><em>json</em></strong><br><figure class="highlight json"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"errorCode"</span>: <span class="string">"0"</span>,</div><div class="line">    <span class="attr">"result"</span>:&#123;</div><div class="line">        <span class="attr">"code"</span>:<span class="string">"2"</span>,</div><div class="line">        <span class="attr">"message"</span>:<span class="string">"核验不一致"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="1-5-异常"><a href="#1-5-异常" class="headerlink" title="1.5 异常"></a>1.5 异常</h4><p><strong><em>xml</em></strong><br><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> standalone=<span class="string">"yes"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">errorCode</span>&gt;</span>9995<span class="tag">&lt;/<span class="name">errorCode</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">data</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong><em>json</em></strong><br><figure class="highlight json"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"errorCode"</span>: <span class="string">"9995"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="1-6-消息码描述"><a href="#1-6-消息码描述" class="headerlink" title="1.6 消息码描述"></a>1.6 消息码描述</h4><table>
<thead>
<tr>
<th>类型</th>
<th>代码值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>code</td>
<td>1</td>
<td>一致</td>
</tr>
<tr>
<td></td>
<td></td>
<td>2</td>
<td>不一致</td>
</tr>
</tbody>
</table>
<h3 id="返回消息代码解释"><a href="#返回消息代码解释" class="headerlink" title="返回消息代码解释"></a>返回消息代码解释</h3><table>
<thead>
<tr>
<th>类型</th>
<th>代码值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>errorCode</td>
<td>0</td>
<td>成功</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9999</td>
<td>用户身份信息错误</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9998</td>
<td>账户状态异常</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9997</td>
<td>账户类型异常</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9996</td>
<td>没有订购该产品</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9995</td>
<td>没有查询权限</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9994</td>
<td>请求参数格式不正确</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9993</td>
<td>系统内部错误</td>
</tr>
<tr>
<td></td>
<td></td>
<td>9992</td>
<td>请求过期</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[zookeeper-3.4.6 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/zookeeper-3.4.6%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 环境变量</p>
<blockquote>
<p>sudo echo “ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.6”&gt;/etc/profile.d/zookeeper.sh</p>
<p>sudo echo ‘PATH=\$PATH :$ZOOKEEPER_HOME/bin’&gt;&gt;/etc/profile.d/zookeeper.sh</p>
<p>. /etc/profile</p>
</blockquote>
<p>###2. 配置文件</p>
<blockquote>
<p>cp /usr/zookeeper/zookeeper-3.4.6/conf/zoo_sample.cfd /usr/zookeeper/zookeeper-3.4.6/conf/zoo.cfd</p>
</blockquote>
<p>###3. 启动zookeeper</p>
<blockquote>
<p>/usr/zookeeper/zookeeper-3.4.6/bin/zkServer.sh start</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jQuery常用操作操作]]></title>
      <url>http://bysonline.github.io/2016/07/16/jQuery%20%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="1-遍历json-map"><a href="#1-遍历json-map" class="headerlink" title="1. 遍历json map"></a>1. 遍历json map</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$.each(map,<span class="function"><span class="keyword">function</span>(<span class="params">key,values</span>)</span>&#123;     </div><div class="line">    <span class="built_in">console</span>.log(key);     </div><div class="line">    $(values).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;     </div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"/t"</span> + <span class="keyword">this</span>);     </div><div class="line">    &#125;);     </div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<h1 id="windows-安装compass-and-scss"><a href="#windows-安装compass-and-scss" class="headerlink" title="windows 安装compass and scss"></a>windows 安装compass and scss</h1><p>标签（空格分隔）： web</p>
<hr>
<p>###1. 安装ruby</p>
<p>compass是ruby的插件，需要先安装ruby环境。</p>
<p>####1.1 下载ruby</p>
<p><a href="http://rubyinstaller.org/" target="_blank" rel="external">http://rubyinstaller.org/</a></p>
<p>####1.2 添加环境变量<br>安装完成后添加环境变量</p>
<pre><code>RUBY_HOME=D:\Ruby23-x64
path=$path;%RUBY_HOME%\bin
</code></pre><p>执行ruby -v 显示版本号则安装成功。</p>
<p>###2. 添加证书</p>
<p>####2.1 下载证书</p>
<p>从<a href="http://curl.haxx.se/ca/cacert.pem" target="_blank" rel="external">http://curl.haxx.se/ca/cacert.pem</a>下载证书，保存到ruby安装目录。</p>
<p>####2.2 添加环境变量</p>
<pre><code>SSL_CERT_FILE=D:\Ruby23-x64\cacert.pem
</code></pre><p>###3. 修改源</p>
<blockquote>
<p>gem sources –remove <a href="https://rubygems.org/" target="_blank" rel="external">https://rubygems.org/</a><br>    gem sources -a <a href="https://ruby.taobao.org/" target="_blank" rel="external">https://ruby.taobao.org/</a><br>    gem sources -l</p>
</blockquote>
<p>###4. 安装compass</p>
<blockquote>
<p>gem install compass</p>
</blockquote>
<p>sass -v显示版本号则安装成功。正常情况compass和scss都会安装。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sqlplus执行文件]]></title>
      <url>http://bysonline.github.io/2016/07/16/sqlplus%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>#####1. 连接数据库<br>    sqlplus user/password@192.168.11.15:1521/orcl</p>
<p>#####2. 执行文件<br>    SQL&gt;@D:\a.sql</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring boot 使用]]></title>
      <url>http://bysonline.github.io/2016/07/16/spring%20boot%20%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>spring boot可使用Main运行一个web程序，对于简单的web应用还是比较方便的。</p>
<h3 id="1-工程目录"><a href="#1-工程目录" class="headerlink" title="1. 工程目录"></a>1. 工程目录</h3><pre><code>project
    src/main/assembly/assembly.xml
    src/main/java/com/rolex/samples/
        bean/
        controller/
        dao/
        service/
        util/
        Main.java
    src/main/resources/
        static/  (相当于webcontent)
            css/
            html/
            js/
            index.html
        application.properties    
    test/
    target/
    pom.xml
    README.md
</code></pre><h3 id="2-程序主要文件"><a href="#2-程序主要文件" class="headerlink" title="2. 程序主要文件"></a>2. 程序主要文件</h3><p><strong><em>Main.java</em></strong><br><figure class="highlight actionscript"><table><tr><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.SpringApplication;</span></div><div class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created with IntelliJ IDEA.</div><div class="line"> * User: rolex</div><div class="line"> * Date: 2016/05/06</div><div class="line"> * Version: 1.0</div><div class="line"> */</div><div class="line">@SpringBootApplication</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</div><div class="line">        SpringApplication.run(Main.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Main是程序的入口类，程序启动时会扫描Main所在目录子目录的所有文件进行spring注入（对声明了spring注解的类有效）。</p>
<p><strong><em>pom.xml</em></strong><br><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line"></div><div class="line">    ...     </div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0.BUILD-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/libs-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="2-启动"><a href="#2-启动" class="headerlink" title="2. 启动"></a>2. 启动</h3><p>执行命令</p>
<blockquote>
<p>java -jar app.jar –spring.config.name=app</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring boot cache （redis）使用]]></title>
      <url>http://bysonline.github.io/2016/07/16/spring%20boot%20cache%20%EF%BC%88redis%EF%BC%89%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="1. pom.xml"></a>1. pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2-cachemanager"><a href="#2-cachemanager" class="headerlink" title="2. cachemanager"></a>2. cachemanager</h3><figure class="highlight less"><table><tr><td class="code"><pre><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.cache</span><span class="selector-class">.CacheManager</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.cache</span><span class="selector-class">.annotation</span><span class="selector-class">.EnableCaching</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.cache</span><span class="selector-class">.interceptor</span><span class="selector-class">.KeyGenerator</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Bean</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Configuration</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.data</span><span class="selector-class">.redis</span><span class="selector-class">.cache</span><span class="selector-class">.RedisCacheManager</span>;</div><div class="line">import org<span class="selector-class">.springframework</span><span class="selector-class">.data</span><span class="selector-class">.redis</span><span class="selector-class">.core</span><span class="selector-class">.RedisTemplate</span>;</div><div class="line"></div><div class="line">import java<span class="selector-class">.lang</span><span class="selector-class">.reflect</span><span class="selector-class">.Method</span>;</div><div class="line"></div><div class="line"><span class="variable">@Configuration</span></div><div class="line"><span class="variable">@EnableCaching</span></div><div class="line">public class RedisCache &#123;</div><div class="line">    <span class="variable">@Bean</span></div><div class="line">    public CacheManager cacheManager(</div><div class="line">            <span class="variable">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>) RedisTemplate redisTemplate) &#123;</div><div class="line">        return new RedisCacheManager(redisTemplate);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 自定义key的生成策略</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    <span class="variable">@Bean</span></div><div class="line">    public KeyGenerator myKeyGenerator()&#123;</div><div class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">KeyGenerator</span>() &#123;</div><div class="line">            <span class="variable">@Override</span></div><div class="line">            public Object generate(Object target, Method method, Object... params) &#123;</div><div class="line">                StringBuilder sb = new StringBuilder();</div><div class="line">                <span class="selector-tag">for</span> (Object <span class="attribute">obj </span>: params) &#123;</div><div class="line">                    sb<span class="selector-class">.append</span>(obj.toString());</div><div class="line">                &#125;</div><div class="line">                return sb.toString();</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-方法上添加注解"><a href="#3-方法上添加注解" class="headerlink" title="3. 方法上添加注解"></a>3. 方法上添加注解</h3><figure class="highlight less"><table><tr><td class="code"><pre><div class="line"><span class="variable">@Cacheable</span>(value = <span class="string">"entInfo"</span>, keyGenerator = <span class="string">"myKeyGenerator"</span>)</div><div class="line">public EntMultipleInfo findEntInfo(String entName) &#123;</div><div class="line">    looger<span class="selector-class">.info</span>(<span class="string">"no cache"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>在调用方法前会先去查询是否有缓存。<br>对象需要能够序列化</p>
</blockquote>
<h3 id="4-application-properties"><a href="#4-application-properties" class="headerlink" title="4. application.properties"></a>4. application.properties</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.database</span>= <span class="number">3</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.host</span>=<span class="number">192.168</span>.<span class="number">11.21</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.port</span>=<span class="number">6379</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.pool</span><span class="selector-class">.max-idle</span>=<span class="number">8</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.pool</span><span class="selector-class">.min-idle</span>=<span class="number">0</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.pool</span><span class="selector-class">.max-active</span>=<span class="number">8</span></div><div class="line">spring<span class="selector-class">.redis</span><span class="selector-class">.pool</span><span class="selector-class">.max-wait</span>=-<span class="number">1</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spark standalone 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/spark%20standalone%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>spark standalone即伪分布式部署,即在单击部署spark,部署方式比较简单.</p>
<h3 id="1-下载spark安装包"><a href="#1-下载spark安装包" class="headerlink" title="1. 下载spark安装包"></a>1. 下载spark安装包</h3><p><a href="http://www.apache.org/dyn/closer.lua/spark/spark-1.6.1/spark-1.6.1-bin-hadoop2.6.tgz" target="_blank" rel="external">http://www.apache.org/dyn/closer.lua/spark/spark-1.6.1/spark-1.6.1-bin-hadoop2.6.tgz</a></p>
<h3 id="2-解压"><a href="#2-解压" class="headerlink" title="2. 解压"></a>2. 解压</h3><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxf</span> <span class="selector-tag">spark-1</span><span class="selector-class">.6</span><span class="selector-class">.1-bin-hadoop2</span><span class="selector-class">.6</span><span class="selector-class">.tgz</span></div></pre></td></tr></table></figure>
<h3 id="3-启动"><a href="#3-启动" class="headerlink" title="3. 启动"></a>3. 启动</h3><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">./sbin/start-<span class="keyword">all</span>.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
<p>启动后可访问<a href="http://node1:8080" target="_blank" rel="external">http://node1:8080</a>查看信息</p>
<h3 id="4-安装客户端"><a href="#4-安装客户端" class="headerlink" title="4. 安装客户端"></a>4. 安装客户端</h3><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxf</span> <span class="selector-tag">spark-1</span><span class="selector-class">.6</span><span class="selector-class">.1-bin-hadoop2</span><span class="selector-class">.6</span><span class="selector-class">.tgz</span></div></pre></td></tr></table></figure>
<h3 id="5-启动客户端"><a href="#5-启动客户端" class="headerlink" title="5. 启动客户端"></a>5. 启动客户端</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><div class="line">./bin/spark-shell --<span class="keyword">master</span> <span class="title">spark</span>://node1:<span class="number">7077</span></div></pre></td></tr></table></figure>
<h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h3><figure class="highlight maxima"><table><tr><td class="code"><pre><div class="line"><span class="built_in">var</span> rdd1 = sc.textFile(<span class="string">"hdfs://192.168.1.11:9000/user/sparkone/input/NOTICE.txt"</span>)</div><div class="line">val rdd2 = rdd1.flatMap(<span class="symbol">_</span>.<span class="built_in">split</span>(<span class="string">" "</span>)).<span class="built_in">map</span>(x=&gt;(x,<span class="number">1</span>)).reduceByKey(<span class="symbol">_</span>+<span class="symbol">_</span>)</div><div class="line">rdd2.take(<span class="number">10</span>)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一个shell脚本示例]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC%E7%A4%BA%E4%BE%8B/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="comment">#``倒引号中是需要执行命令</span></div><div class="line"><span class="comment">#找到文件名字，/opt/demo/current/bin/start.sh</span></div><div class="line">SCRIPT_PATH=`readlink <span class="_">-f</span> <span class="string">"<span class="variable">$0</span>"</span>`</div><div class="line"><span class="comment">#可用于定位路径，不用写绝对路径，增加可移植性</span></div><div class="line"><span class="built_in">cd</span> `dirname <span class="variable">$&#123;SCRIPT_PATH&#125;</span>`</div><div class="line"><span class="comment">#定位到/opt/demo/current/</span></div><div class="line"><span class="built_in">cd</span> ..</div><div class="line"><span class="comment">#创建目录</span></div><div class="line">mkdir -p logs</div><div class="line"></div><div class="line">PID_FILE=logs/web.pid</div><div class="line">PID=<span class="string">""</span></div><div class="line"><span class="comment">#如果文件存在，则读文件</span></div><div class="line"><span class="keyword">if</span> [ <span class="_">-f</span> <span class="variable">$PID_FILE</span> ]</div><div class="line">    <span class="keyword">then</span></div><div class="line">    PID=`cat <span class="variable">$PID_FILE</span>`</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment">#如果pid不为空，使用ps查进程</span></div><div class="line"><span class="keyword">if</span> [ ! <span class="string">"<span class="variable">$PID</span>"</span> = <span class="string">""</span> ]</div><div class="line">    <span class="keyword">then</span></div><div class="line">    <span class="comment">#查到任何信息都丢弃，如果查到信息返回0，输出提示消息，没查到返回1</span></div><div class="line">    <span class="keyword">if</span> ( /bin/ps -p <span class="variable">$PID</span> &gt;/dev/null 2&gt;&amp;1 )</div><div class="line">        <span class="keyword">then</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"already started, pid = <span class="variable">$PID</span>"</span></div><div class="line">        <span class="built_in">exit</span> 1</div><div class="line">    <span class="keyword">fi</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">CP=<span class="string">"etc"</span></div><div class="line"><span class="comment">#将target/classes加到classpath</span></div><div class="line"><span class="keyword">if</span> [ <span class="_">-d</span> target/classes ]</div><div class="line">    <span class="keyword">then</span></div><div class="line">    CP=<span class="variable">$CP</span>:target/classes</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment">#将lib目录下的所有jar包加到classpath</span></div><div class="line"><span class="keyword">for</span> jar <span class="keyword">in</span> `/bin/ls -1 lib/*.jar`</div><div class="line"><span class="keyword">do</span></div><div class="line">    CP=<span class="variable">$CP</span>:<span class="variable">$jar</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment">#执行java命令,$@表示所有的参数列表</span></div><div class="line">java -cp <span class="variable">$CP</span> com.daas.cfg.Main <span class="variable">$@</span> &amp;</div><div class="line"></div><div class="line"><span class="comment">#记录最后运行的后台Process的PID</span></div><div class="line">PID=$!</div><div class="line"><span class="comment">#记录最后运行的命令的结束代码（返回值）</span></div><div class="line">CODE=$?</div><div class="line"><span class="comment">#0 表示成功</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$CODE</span>"</span> = <span class="string">"0"</span> ]</div><div class="line">    <span class="keyword">then</span></div><div class="line">    <span class="comment">#将pid写到文件</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$PID</span> &gt;<span class="variable">$PID_FILE</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"started, PID=<span class="variable">$PID</span>"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Oracle分页sql模板]]></title>
      <url>http://bysonline.github.io/2016/07/16/Oracle%E5%88%86%E9%A1%B5sql%E6%A8%A1%E6%9D%BF/</url>
      <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span></div><div class="line">        A.*,</div><div class="line">        <span class="keyword">ROWNUM</span> RN</div><div class="line">      <span class="keyword">FROM</span> (</div><div class="line">        <span class="keyword">SELECT</span> * <span class="keyword">FORM</span> t</div><div class="line">      ) A</div><div class="line">      <span class="keyword">WHERE</span> <span class="keyword">ROWNUM</span> &lt;= <span class="number">100</span>)</div><div class="line"><span class="keyword">WHERE</span> RN &gt;= <span class="number">0</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Oracle日期转换]]></title>
      <url>http://bysonline.github.io/2016/07/16/Oracle%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h3 id="1-英语日期格式转换"><a href="#1-英语日期格式转换" class="headerlink" title="1. 英语日期格式转换"></a>1. 英语日期格式转换</h3><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">  <span class="keyword">TO_DATE</span>(<span class="keyword">SUBSTR</span>(<span class="string">'29-JAN-16 03.09.31.030943000 PM'</span>, <span class="number">0</span>, <span class="number">9</span>), <span class="string">'dd-MON-yy'</span>, <span class="string">'NLS_DATE_LANGUAGE = American'</span>) d1,</div><div class="line">  TO_CHAR(<span class="keyword">sysdate</span>, <span class="string">'DD-MON-YY'</span>, <span class="string">'NLS_DATE_LANGUAGE = American'</span>) d2,</div><div class="line">  TO_CHAR(<span class="keyword">sysdate</span>, <span class="string">'DD-MON-YY'</span>) d3</div><div class="line"><span class="keyword">FROM</span> dual</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>d1</th>
<th>d2</th>
<th>d3</th>
</tr>
</thead>
<tbody>
<tr>
<td>2016-01-29 00:00:00</td>
<td>01-JUL-16</td>
<td>01-7月 -16</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Oracle Clob 格式处理]]></title>
      <url>http://bysonline.github.io/2016/07/16/Oracle%20Clob%20%E6%A0%BC%E5%BC%8F%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    Clob clob = resultSet.getClob(<span class="string">"FCT_PARTY"</span>);</div><div class="line">    <span class="keyword">if</span> (clob != <span class="keyword">null</span> &amp;&amp; clob.length() &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">char</span>[] c = <span class="keyword">new</span> <span class="keyword">char</span>[(<span class="keyword">int</span>) clob.length()];</div><div class="line">        Reader reader = clob.getCharacterStream();</div><div class="line">        reader.read(c);</div><div class="line">        fygg.setParty(<span class="keyword">new</span> String(c));</div><div class="line">        reader.close();</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">    logger.error(<span class="string">"column &#123;&#125;.FCT_PARTY read failed."</span>, tableName, e);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nexus私服搭建]]></title>
      <url>http://bysonline.github.io/2016/07/16/nexus%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>###1. 下载</p>
<p>下载最新的Nexus OSS<br><a href="http://www.sonatype.org/downloads/nexus-latest-bundle.tar.gz" target="_blank" rel="external">http://www.sonatype.org/downloads/nexus-latest-bundle.tar.gz</a></p>
<p>###2. 解压</p>
<blockquote>
<p>tar -zxf nexus-latest-bundle.tar.gz<br>mv nexus-2.11.1-01 nexus2</p>
<p>chown -R nexus2<br>chown -R sonatype-work</p>
</blockquote>
<p>###3. 启动</p>
<blockquote>
<p>./bin/nexus start</p>
</blockquote>
<p>###4. 安装服务</p>
<blockquote>
<p>vi ./bin/nexus</p>
</blockquote>
<pre><code>PIDDIR=&quot;/home/rolex/piddir&quot;
</code></pre><blockquote>
<p>sudo ln -s /home/soft/nexus/nexus-2.11.2-06/bin/nexus /etc/init.d/nexus<br>chkconfig –add nexus<br>chkconfig –levels 345 nexus on  </p>
<p>service nexus start</p>
</blockquote>
<p>###5. 访问</p>
<p>在浏览器中输入<a href="http://192.168.1.201:8081/nexus/" target="_blank" rel="external">http://192.168.1.201:8081/nexus/</a><br><img src="http://7xqgix.com1.z0.glb.clouddn.com/9.png" alt="img"></p>
<p>###6. 配置</p>
<p>管理员账号admin，默认密码admin123，通过右上角登录。</p>
<p>####6.1 添加代理仓库</p>
<p>点击左侧的Repositories，然后再点击右侧的Add，会弹出下拉菜单，选择Proxy Repository，如下配置。<br><img src="http://7xqgix.com1.z0.glb.clouddn.com/10.png" alt="http://7xqgix.com1.z0.glb.clouddn.com/10.png"><br>选中Public Repositories，将新建的Proxy Repository加入到Public Repositories组，并Update Index。<br><img src="http://7xqgix.com1.z0.glb.clouddn.com/11.png" alt="http://7xqgix.com1.z0.glb.clouddn.com/11.png"></p>
<p>####6.2 配置maven</p>
<p>修改maven的<strong>settings.xml</strong>文件</p>
<pre><code>&lt;mirrors&gt;
    &lt;mirror&gt;
      &lt;id&gt;nexus&lt;/id&gt;
      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;     
      &lt;url&gt;http://192.168.1.201:8081/nexus/content/groups/public/&lt;/url&gt;
    &lt;/mirror&gt;
&lt;/mirrors&gt;

&lt;profiles&gt;
    &lt;profile&gt;
      &lt;id&gt;nexus&lt;/id&gt;
      &lt;repositories&gt;
        &lt;repository&gt;
          &lt;id&gt;nexus&lt;/id&gt;
          &lt;name&gt;Nexus&lt;/name&gt;
          &lt;url&gt;http://192.168.1.201:8081/nexus/content/groups/public/&lt;/url&gt;
          &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
          &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/repository&gt;
      &lt;/repositories&gt;
      &lt;pluginRepositories&gt;
        &lt;pluginRepository&gt;
          &lt;id&gt;nexus&lt;/id&gt;
            &lt;name&gt;Nexus&lt;/name&gt;
            &lt;url&gt;http://192.168.1.201:8081/nexus/content/groups/public/&lt;/url&gt;
            &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
            &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/pluginRepository&gt;
      &lt;/pluginRepositories&gt;
    &lt;/profile&gt;
&lt;/profiles&gt;

&lt;activeProfiles&gt;
    &lt;activeProfile&gt;nexus&lt;/activeProfile&gt;
  &lt;/activeProfiles&gt;
</code></pre><p>第一次安装后，nexus私服仓库是空的，通过maven下载jar包显示从私服仓库下载，实际还是从公网下载，然后保存到本地,以后再下载相同的jar包就直接从本地下载了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Maven打包专题]]></title>
      <url>http://bysonline.github.io/2016/07/16/Maven%E6%89%93%E5%8C%85%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>###1. 可执行jar包</p>
<p><strong><em>pom.xml</em></strong></p>
<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
                &lt;descriptorRefs&gt;
                    &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;
                &lt;/descriptorRefs&gt;
                &lt;archive&gt;
                    &lt;manifest&gt;
                        &lt;mainClass&gt;com.rolex.tools.Ashbringer&lt;/mainClass&gt;
                    &lt;/manifest&gt;
                &lt;/archive&gt;
            &lt;/configuration&gt;

        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre><p>使用命令</p>
<blockquote>
<p>mvn assembly:assembly</p>
</blockquote>
<p>可生成可执行jar包。配置文件是打在jar包里边的，所以想灵活的使用外部配置文件，此方法并不合适。</p>
<p>###2. jar包</p>
<p><strong><em>jar-with-dependencies</em></strong><br><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"</span></span></div><div class="line">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd"</span>&gt;</div><div class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> a jarjar format would be better --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">formats</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">format</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">format</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">formats</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">includeBaseDirectory</span>&gt;</span>false<span class="tag">&lt;/<span class="name">includeBaseDirectory</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencySets</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependencySet</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">useProjectArtifact</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useProjectArtifact</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">unpack</span>&gt;</span>true<span class="tag">&lt;/<span class="name">unpack</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependencySet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencySets</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>###3. war包</p>
<p>###4. ear包</p>
<p>###5. tar.gz<br>针对开发、测试、生产环境各自有一套配置文件是，可将工程打tgz包部署，解压后使用软连接引用不同环境的配置。<br>文件目录如下：</p>
<pre><code>project
    bin/
    etc/
    lib/
    sql/
    src/main/assembly/assembly.xml
    src/main/java
    src/main/resources
    target/
    pom.xml
    README.md
</code></pre><p><strong><em>pom.xml</em></strong><br><figure class="highlight dust"><table><tr><td class="code"><pre><div class="line"><span class="xml"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span></div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.rolex.maven.samples<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-samples<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">maven.build.timestamp.format</span>&gt;</span>yyyyMMddHHmm<span class="tag">&lt;/<span class="name">maven.build.timestamp.format</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">java-version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java-version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 防止idea每次更新pom都重置jdk设置 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span></div><div class="line">                <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span></div><div class="line">                <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        ...</div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 编译插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">source</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$<span class="template-variable">&#123;java-version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 解决依赖jar包插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                            <span class="comment">&lt;!-- 将jar拷贝到lib目录 --&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$<span class="template-variable">&#123;project.basedir&#125;</span><span class="xml">/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span></div><div class="line">                            <span class="tag">&lt;<span class="name">overWriteReleases</span>&gt;</span>false<span class="tag">&lt;/<span class="name">overWriteReleases</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">overWriteSnapshots</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overWriteSnapshots</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 打tgz包插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$<span class="template-variable">&#123;project.artifactId&#125;</span><span class="xml">-$</span><span class="template-variable">&#123;maven.build.timestamp&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">descriptors</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">descriptor</span>&gt;</span>src/main/assembly/assembly.xml<span class="tag">&lt;/<span class="name">descriptor</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">descriptors</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 设置中央仓库 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/libs-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong><em>assembly.xml</em></strong><br><figure class="highlight dust"><table><tr><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"</span></span></span></div><div class="line">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>distribution<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">formats</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">format</span>&gt;</span>tgz<span class="tag">&lt;/<span class="name">format</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">formats</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$<span class="template-variable">&#123;project.basedir&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- 需要打进tgz包的文件和目录 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>lib/**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>bin/**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>sql/**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>etc/**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>README*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$<span class="template-variable">&#123;project.basedir&#125;</span><span class="xml">/target/classes<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/target/classes<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.class<span class="tag">&lt;/<span class="name">include</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>assembly的详细属性说明参考<a href="http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html" target="_blank" rel="external">http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html</a></p>
<p>使用命令</p>
<blockquote>
<p>mvn clean package</p>
</blockquote>
<p>可生成tgz包。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编译源代码安装node.js和gulp]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%BC%96%E8%AF%91%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85node.js%E5%92%8Cgulp/</url>
      <content type="html"><![CDATA[<h3 id="1-下载最新版本源代码"><a href="#1-下载最新版本源代码" class="headerlink" title="1. 下载最新版本源代码"></a>1. 下载最新版本源代码</h3><h3 id="2-解压安装"><a href="#2-解压安装" class="headerlink" title="2. 解压安装"></a>2. 解压安装</h3><pre><code>$ sudo cp ~/Downloads/node-v5.11.0.tar.gz /usr/local/src/
$ cd node-v5.11.0
$ sudo ./configure
$ sudo make
$ sudo make install
$ node -v
</code></pre><h3 id="3-安装gulp"><a href="#3-安装gulp" class="headerlink" title="3. 安装gulp"></a>3. 安装gulp</h3><h4 id="3-1-全局安装gulp命令行工具"><a href="#3-1-全局安装gulp命令行工具" class="headerlink" title="3.1 全局安装gulp命令行工具"></a>3.1 全局安装gulp命令行工具</h4><pre><code>$ npm install -g gulp
</code></pre><h4 id="3-2-项目下安装开发环境"><a href="#3-2-项目下安装开发环境" class="headerlink" title="3.2 项目下安装开发环境"></a>3.2 项目下安装开发环境</h4><pre><code>$ sudo npm install -save-dev gulp
$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org
$ sudo npm install
$ gulp
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 6.5 minimal安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/CentOS%206.5%20minimal%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 安装eth0</p>
<blockquote>
<p>vi /etc/sysconfig/network-scripts/ifcfg-eth0</p>
</blockquote>
<pre><code>ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.1.64
GATEWAY=192.168.1.1
</code></pre><p>###2. 创建用户和组</p>
<blockquote>
<p>groupadd rolex<br>useradd -g rolex rolex<br>passwd rolex</p>
</blockquote>
<p>###3. 添加sudo权限</p>
<blockquote>
<p>visudo</p>
</blockquote>
<pre><code>rolex    ALL=(ALL)    ALL
rolex    ALL=NOPASSWD:    ALL
</code></pre><p>###4. 安装ftp</p>
<p>参考 <strong>CentOS 6.5 安装ftp.md</strong></p>
<p>###5. 安装JDK</p>
<p>参考 <strong>CentOS 6.5 安装JDK.md</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 6.5 minimal安装ftp]]></title>
      <url>http://bysonline.github.io/2016/07/16/CentOS%206.5%20minimal%E5%AE%89%E8%A3%85ftp/</url>
      <content type="html"><![CDATA[<p>###1. 配置DNS</p>
<blockquote>
<p>vi /etc/resolv.conf</p>
</blockquote>
<pre><code>nameserver 8.8.8.8
nameserver 4.4.4.4
</code></pre><p>###2. 安装ftp</p>
<blockquote>
<p>yum install vsftpd</p>
</blockquote>
<p>###3. 放开home路径权限</p>
<blockquote>
<p>setsebool -P  ftp_home_dir  on</p>
</blockquote>
<p>###4. 虚拟机ftp配置</p>
<p>系统装完，可以ping通，但是ftp不通，错误消息如下：</p>
<blockquote>
<p>状态:      尝试连接“ECONNREFUSED - Connection refused by server”失败</p>
</blockquote>
<p>google说可能是端口没开或占用</p>
<p>所以检查一下</p>
<pre><code>#netstat -na --ip
</code></pre><p>21端口果然没有，打开ftp</p>
<pre><code># service vsftpd start
</code></pre><p>再连ftp，错误消息如下：</p>
<blockquote>
<p>命令:      USER root<br>响应:      530 Permission denied.</p>
</blockquote>
<p>用的root用户，vsftp默认关闭root用户，所以打开root用户<br>修改文件 <strong><code>/etc/vsftpd.ftpusers</code></strong> 和 <strong><code>/etc/vsftpd.user_list</code></strong></p>
<blockquote>
<p>响应: 553 Could not create file.<br>错误: 严重文件传输错误</p>
</blockquote>
<p>执行命令</p>
<pre><code>setsebool allow_ftpd_full_access 1
setsebool allow_ftpd_use_cifs 1
setsebool allow_ftpd_use_nfs 1
setsebool ftp_home_dir 1
setsebool httpd_enable_ftp_server 1
setsebool tftp_anon_write 1
service vsftpd restart
</code></pre><p>###5. vsftp上传文件限制</p>
<blockquote>
<p>553 Could not create file.</p>
</blockquote>
<pre><code>[root@node3 vsftpd]# /usr/sbin/setsebool -P ftp_home_dir 1
[root@node3 vsftpd]# setsebool allow_ftpd_full_access 1
[root@node3 vsftpd]# setsebool allow_ftpd_use_cifs 1
[root@node3 vsftpd]# setsebool allow_ftpd_use_nfs 1
[root@node3 vsftpd]# setsebool -P ftp_home_dir 1
[root@node3 vsftpd]# setsebool httpd_enable_ftp_server 1
[root@node3 vsftpd]# setsebool tftp_anon_write 1
[root@node3 vsftpd]# service vsftpd restart
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 6.5 安装JDK]]></title>
      <url>http://bysonline.github.io/2016/07/16/CentOS%206.5%20%E5%AE%89%E8%A3%85JDK/</url>
      <content type="html"><![CDATA[<p>###1. 下载</p>
<p>####1.1 安装wget</p>
<blockquote>
<p>yum install -y wget</p>
</blockquote>
<p>####1.2 下载JDK</p>
<blockquote>
<p>wget “<a href="http://download.oracle.com/otn-pub/java/jdk/8u20-b26/jdk-8u20-linux-x64.tar.gz" target="_blank" rel="external">http://download.oracle.com/otn-pub/java/jdk/8u20-b26/jdk-8u20-linux-x64.tar.gz</a>“</p>
</blockquote>
<p>###2. 解压</p>
<blockquote>
<p>tar -zxf jdk-8u20-linux-x64.tar.gz</p>
</blockquote>
<p>###3. 配置环境变量</p>
<blockquote>
<p>echo “JAVA_HOME=/usr/java/jdk1.8.0_20” &gt; /etc/profile.d/java.sh<br>echo ‘\$JAVA_HOME/bin:$PATH’ &gt;&gt; /etc/profile.d/java.sh<br>echo ‘export JAVA_HOME PATH’ &gt;&gt; /etc/profile.d/java.sh</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[/etc/profile和/etc/profile.d的区别]]></title>
      <url>http://bysonline.github.io/2016/07/16/profile%E5%92%8Cprofile.d%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<ol>
<li><p>两个文件都是设置环境变量文件的，/etc/profile是永久性的环境变量,是全局变量，/etc/profile.d/设置所有用户生效  </p>
</li>
<li><p>/etc/profile.d/比/etc/profile好维护，不想要什么变量直接删除/etc/profile.d/下对应的shell脚本即可，不用像/etc/profile需要改动此文件</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux安装图形界面]]></title>
      <url>http://bysonline.github.io/2016/07/16/linux%E5%AE%89%E8%A3%85%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>yum -y groupinstall Desktop<br>    yum -y groupinstall “X Window System”<br>    yum install libXfont-1.4.5-*<br>    yum install libX11<br>    startx  </p>
</blockquote>
<p>切换界面失败</p>
<blockquote>
<p>chkconfig –level 35 haldaemon on<br>    chkconfig –level 35 messagebus on</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[查找文件中abc出现的次数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E4%B8%ADabc%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><pre><code>grep -o abc file | wc -l
</code></pre><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><pre><code>awk -v RS=&apos;abc&apos; &apos;END {print --NR}&apos; file
</code></pre><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><pre><code>awk -v RS=&quot;@#$j&quot; &apos;{print gsub(/abc/,&quot;&amp;&quot;)}&apos; NOTICE
</code></pre><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><pre><code>grep -c &quot;abc&quot; NOTICE
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：文件操作]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<pre><code>/**
 * 文件操作
 *
 * @author Rolex
 * @date 2011-9-28
 */
public class FileUtil {

      /**
       *
       * 将内容保存到SD卡上的文件中，如果文件不存在，则新建
       *
       * @param content
       * @return
       */
      public static boolean writeFile(String content)
      {     
            boolean isWrite=false;
            try
            {
                  DataOutputStream os = null;
                  FileConnection file = null;            

                file = (FileConnection) Connector.open(&quot;file:///SDCard/config.xml&quot; , Connector.READ_WRITE);
                if(!file.exists()){
                  file.create();
                }
                os = file.openDataOutputStream();
                os.write(content.getBytes());

                os.close();
                file.close();
                isWrite = true;
            }
            catch (Exception e)
            {
                  e.printStackTrace();
            }
            return isWrite;
      }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：监听浏览器]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E7%9B%91%E5%90%AC%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      <content type="html"><![CDATA[<pre><code>public final class PackageManager
{
    /**
     * Entry point for this application
     * @param args Command line arguments (not used)
     */
    public static void main(String[] args)
    {
        try
        {
            HttpFilterRegistry.registerFilter(&quot;com.unionpay.m.p&quot;, &quot;com.rim.samples.device.httpfilterdemo.filter&quot;);
        }
        catch(ControlledAccessException cae)
        {
            // Re-throw exception with explicit message
            throw new ControlledAccessException( cae + &quot; Http Filter Demo attempted to access API governed by Interactions/Browser Filtering &quot; +
                &quot;application permission.  Please set this permission to &apos;allow&apos; under Options/Security Options/Application Permissions&quot;);
        }
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：自定义图片背景的button]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E7%89%87%E8%83%8C%E6%99%AF%E7%9A%84button/</url>
      <content type="html"><![CDATA[<pre><code>/**
 * 自定义图片背景的button
 *
 * @author Rolex
 * @date 2011-9-23
 */
public class BitmapBackgroundButtonField extends Field {      
    private String _label;
    private int _labelHeight;
    private int _labelWidth;
    private Font _font;

    private Bitmap _currentBitmap;
    private Bitmap _onBitmap;
    private Bitmap _offBitmap;

    /**
     * Constructor.
     * @param text The text to be displayed on the button
     * @param style Combination of field style bits to specify display attributes
     */
    public BitmapBackgroundButtonField(String text, long style,Bitmap bitmap1, Bitmap bitmap2)
    {
        super(style);

        _font = getFont();
        _label = text;
        _labelHeight = _font.getHeight();
        _labelWidth = _font.getAdvance(_label);
        _onBitmap = bitmap1;
        _offBitmap = bitmap2;
        _currentBitmap = _offBitmap;
    }

    /**
     * @return The text on the button
     */
    String getText()
    {
        return _label;
    }

    /**
     * Field implementation.
     * @see net.rim.device.api.ui.Field#getPreferredHeight()
     */
    public int getPreferredHeight()
    {
        return 90;
    }

    /**
     * Field implementation.
     * @see net.rim.device.api.ui.Field#getPreferredWidth()
     */
    public int getPreferredWidth()
    {
        return 70;
    }

    /**
     * Field implementation.  Changes the picture when focus is gained.
     * @see net.rim.device.api.ui.Field#onFocus(int)
     */
    protected void onFocus(int direction)
    {
      _currentBitmap = _onBitmap;
        invalidate();
    }

    /**
     * Field implementation.  Changes picture back when focus is lost.
     * @see net.rim.device.api.ui.Field#onUnfocus()
     */
    protected void onUnfocus()
    {
      _currentBitmap = _offBitmap;
        invalidate();
    }

    /**
     * Field implementation.
     * @see net.rim.device.api.ui.Field#drawFocus(Graphics, boolean)
     */
    protected void drawFocus(Graphics graphics, boolean on)
    {
    }

    /**
     * Field implementation.
     * @see net.rim.device.api.ui.Field#layout(int, int)
     */
    protected void layout(int width, int height)
    {
        setExtent(Math.min( width, getPreferredWidth()),
        Math.min( height, getPreferredHeight()));
    }

    /**
     * Field implementation.
     * @see net.rim.device.api.ui.Field#paint(Graphics)
     */
    protected void paint(Graphics graphics)
    {      
        // First draw the background colour and picture
        graphics.setColor(Color.WHITE);
        graphics.fillRect(0, 0, getWidth(), getHeight());
        graphics.drawBitmap(0, 0, getWidth(), getHeight(), _currentBitmap, 0, 0);

        // Then draw the text
        graphics.setColor(Color.BLACK);
        graphics.setFont(_font.derive(Font.BOLD, 13));

//        graphics.drawText(_label, 4, 70,
//            (int)( getStyle() &amp; DrawStyle.ELLIPSIS | DrawStyle.HALIGN_MASK ),
//            getWidth() - 6 );
        graphics.drawText(_label, 0, _currentBitmap.getHeight() + 4, graphics.HCENTER);
    }

    /**
     * Overridden so that the Event Dispatch thread can catch this event
     * instead of having it be caught here..
     * @see net.rim.device.api.ui.Field#navigationClick(int, int)
     */
    protected boolean navigationClick(int status, int time)
    {
        fieldChangeNotify(1);
        return true;
    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：自定义输入框]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BE%93%E5%85%A5%E6%A1%86/</url>
      <content type="html"><![CDATA[<pre><code>public InputBoxField(int boxWigth,int boxHeight,String boxText){
                super(Manager.NO_VERTICAL_SCROLL);//禁用垂直滚动
                this._boxHeight = boxHeight;
                this._boxWigth = boxWigth;
                        this._boxText = boxText;
        _vfm = new VerticalFieldManager(Manager.NO_VERTICAL_SCROLL);
        //EditField.NO_NEWLINE    设置输入框不可换行
                _ef = new EditField(&quot;&quot;,&quot;&quot;,10,EditField.NO_NEWLINE){
        //创建一个EditedField，并设置其中字符的显示颜色。
                        public void paint(Graphics g){
                                //getManager().invalidate();
                                g.setColor(Color.WHITE);
                                super.paint(g);
                        }
                };
                _ef.setBackground(BackgroundFactory.createSolidBackground(Color.BLACK));//设置EditedField的背景颜色
                _vfm.add(_ef);
                _vfm.setPadding((_boxHeight-_ef.getFont().getHeight())/2, 10, 10, 5);//设置输入区域和外边框的间距
                add(_vfm);
                }
        然后我们需要覆写sublayout方法，告诉布局管理器该组件的大小
protected void sublayout(int maxWidth, int maxHeight) {
                if(_boxWigth == 0){
                        _boxWigth = maxWidth;
                }
                if(_boxHeight == 0){
                        _boxHeight = maxHeight;
                }
                //super.sublayout(maxWidth, maxHeight);
                setPositionChild(_vfm, 2, 0);
                layoutChild(_vfm, _boxWigth, _boxHeight);
                setExtent(_boxWigth, _boxHeight);
                }
        覆写paint方法，在原有的EditedField的四周换上我们想要的边框。并处理焦点事件。
protected void paint(Graphics g) {
                super.paint(g);
                int oldColor = g.getColor();
                if(this.isFocus()){
                        if(_ef.getText().equals(_boxText)){
                                _ef.setText(&quot;&quot;);
                        }
                        g.setColor(Color.BLUE);
                        for(int i =0;i&lt;4;i++){

                                g.drawRoundRect(i,i,getWidth()-i*2,getHeight()-i*2,15,15);
                        }       

                }else{
                        if(_ef.getText().equals(&quot;&quot;)){
                                _ef.setText(_boxText);
                        }

                        g.setColor(Color.BLUE);
                        g.drawRoundRect(3, 3, getWidth()-6, getHeight()-6,15,15);                }
                g.setColor(oldColor);
                }接下来覆写onFocus和onUnfocus方法
protected void onFocus(int direction) {
                super.onFocus(direction);
                _ef.setCursorPosition(_ef.getTextLength());
                invalidate();
        }

        protected void onUnfocus() {
                super.onUnfocus();
                invalidate();
                }
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：读系统参数]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E8%AF%BB%E7%B3%BB%E7%BB%9F%E5%8F%82%E6%95%B0/</url>
      <content type="html"><![CDATA[<pre><code>String deviceId = DeviceInfo.getDeviceId() + &quot;&quot;;
String deviceName = DeviceInfo.getDeviceName();
String softName = DeviceInfo.getSoftwareVersion();
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：虚拟键盘]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E8%99%9A%E6%8B%9F%E9%94%AE%E7%9B%98/</url>
      <content type="html"><![CDATA[<pre><code>import java.io.InputStream;

import javax.microedition.media.Player;
import javax.microedition.media.control.VolumeControl;

import net.rim.device.api.system.Application;
import net.rim.device.api.system.Display;
import net.rim.device.api.system.KeyListener;
import net.rim.device.api.ui.Color;
import net.rim.device.api.ui.Field;
import net.rim.device.api.ui.FieldChangeListener;
import net.rim.device.api.ui.FocusChangeListener;
import net.rim.device.api.ui.Graphics;
import net.rim.device.api.ui.Keypad;
import net.rim.device.api.ui.Manager;
import net.rim.device.api.ui.VirtualKeyboard;
import net.rim.device.api.ui.component.EditField;
import net.rim.device.api.ui.component.LabelField;
import net.rim.device.api.ui.component.PasswordEditField;
import net.rim.device.api.ui.container.HorizontalFieldManager;
import net.rim.device.api.ui.container.PopupScreen;
import net.rim.device.api.ui.container.VerticalFieldManager;

public class TestScreen extends PopupScreen implements FieldChangeListener,KeyListener {


     PasswordEditField passwd;//输入框
     VerticalFieldManager vfm;//密码键盘的布局
     HorizontalFieldManager buttonHfm;//按钮的水平布局
     VerticalFieldManager numVfm;//数字键盘的垂直布局
     VerticalFieldManager charVfm;//字母键盘垂直布局
     VerticalFieldManager bcharVfm;//字母键盘垂直布局
     VerticalFieldManager signVfm;//符号键盘的水平布局
     CustomButtonField button1;
     CustomButtonField button2;
     CustomButtonField button3;
     VirtualKeyboard virtKbd;//虚拟键盘
     CustomButtonField cbf;

     EditField _edit;
     EditField _edit1;

     public TestScreen(EditField edit,EditField edit1) {
            super(new VerticalFieldManager()
            {
            }
            );
            _edit = edit;
            _edit1 = edit1;
            virtKbd = this.getVirtualKeyboard();//获得当前屏幕的虚拟键盘

            vfm = new VerticalFieldManager();
            LabelField label = new LabelField(&quot;密码键盘&quot;);
            passwd = new PasswordEditField();
            passwd.setFocusListener(new FocusChangeListener() {
                 public void focusChanged(Field field, int eventType) {
                         if(eventType == FOCUS_GAINED){
                              //virtKbd.setVisibility(VirtualKeyboard.HIDE_FORCE);
                         }
                    }
          });
            buttonHfm = new HorizontalFieldManager();
            button1 = new CustomButtonField(&quot;数字&quot;, CustomButtonField.BUTTON, Field.FOCUSABLE);
            button1.setChangeListener(this);
            button2 = new CustomButtonField(&quot;字母&quot;, CustomButtonField.BUTTON, Field.FOCUSABLE);
            button2.setChangeListener(this);
            button3 = new CustomButtonField(&quot;符号&quot;, CustomButtonField.BUTTON, Field.FOCUSABLE);
            button3.setChangeListener(this);
            buttonHfm.add(button1);
            buttonHfm.add(button2);
            buttonHfm.add(button3);
            numVfm = new VerticalFieldManager(Manager.FIELD_HCENTER);
            charVfm = new VerticalFieldManager(Manager.FIELD_HCENTER);
            bcharVfm = new VerticalFieldManager(Manager.FIELD_HCENTER);
            signVfm = new VerticalFieldManager(Manager.FIELD_HCENTER);

            String num[] = KeyboardUtil.randomArray(new String[] { &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;,
                         &quot;9&quot;, &quot;0&quot;, &quot;确定&quot;, &quot;←&quot; });
            HorizontalFieldManager h1 = new HorizontalFieldManager();
            HorizontalFieldManager h2 = new HorizontalFieldManager();
            HorizontalFieldManager h3 = new HorizontalFieldManager();
            cbf = new CustomButtonField(num[0], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h1.add(cbf);
            cbf = new CustomButtonField(num[1], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h1.add(cbf);
            cbf = new CustomButtonField(num[2], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h1.add(cbf);
            cbf = new CustomButtonField(num[3], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h1.add(cbf);
            cbf = new CustomButtonField(num[4], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h2.add(cbf);
            cbf = new CustomButtonField(num[5], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h2.add(cbf);
            cbf = new CustomButtonField(num[6], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h2.add(cbf);
            cbf = new CustomButtonField(num[7], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h2.add(cbf);
            cbf = new CustomButtonField(num[8], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h3.add(cbf);
            cbf = new CustomButtonField(num[9], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h3.add(cbf);
            cbf = new CustomButtonField(num[10], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            h3.add(cbf);
            cbf = new CustomButtonField(num[11], CustomButtonField.SIGN, Field.FOCUSABLE);
           cbf.setChangeListener(this);
           h3.add(cbf);
            numVfm.add(h1);
            numVfm.add(h2);
            numVfm.add(h3);
           //字母键盘
           HorizontalFieldManager hfm = new HorizontalFieldManager(Manager.FIELD_HCENTER);

             // Rectangular button
           cbf = new CustomButtonField(&quot;q&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
           cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;w&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;e&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;r&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;t&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;y&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;u&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;i&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;o&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);
             cbf = new CustomButtonField(&quot;p&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm.add(cbf);

             HorizontalFieldManager hfm1 = new HorizontalFieldManager(Manager.FIELD_HCENTER);

             // Rectangular button
             cbf = new CustomButtonField(&quot;a&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;s&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;d&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;f&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;g&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;h&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;j&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;k&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;l&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);
             cbf = new CustomButtonField(&quot;←&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm1.add(cbf);

             HorizontalFieldManager hfm2 = new HorizontalFieldManager(Manager.FIELD_HCENTER);
             cbf = new CustomButtonField(&quot;↑&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             // Rectangular button
             cbf = new CustomButtonField(&quot;z&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;x&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;d&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;v&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;b&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;n&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;m&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);
             cbf = new CustomButtonField(&quot;确定&quot;, CustomButtonField.RECTANGLE, Field.FOCUSABLE);
             cbf.setChangeListener(this);
             hfm2.add(cbf);

             charVfm.add(hfm);
             charVfm.add(hfm1);
             charVfm.add(hfm2);



             /***********************************/
             //大写字母键盘
                HorizontalFieldManager bhfm = new HorizontalFieldManager(Manager.FIELD_HCENTER);

                  // Rectangular button
                cbf = new CustomButtonField(&quot;Q&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;W&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;E&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;R&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;T&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;Y&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;U&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;I&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;O&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);
                  cbf = new CustomButtonField(&quot;P&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm.add(cbf);

                  HorizontalFieldManager bhfm1 = new HorizontalFieldManager(Manager.FIELD_HCENTER);

                  // Rectangular button
                  cbf = new CustomButtonField(&quot;A&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;S&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;D&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;F&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;G&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;H&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;J&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;K&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;L&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);
                  cbf = new CustomButtonField(&quot;←&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm1.add(cbf);

                  HorizontalFieldManager bhfm2 = new HorizontalFieldManager(Manager.FIELD_HCENTER);
                  cbf = new CustomButtonField(&quot;↓&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  // Rectangular button
                  cbf = new CustomButtonField(&quot;Z&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;X&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;C&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;V&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;B&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;N&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;M&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);
                  cbf = new CustomButtonField(&quot;确定&quot;, CustomButtonField.BIG, Field.FOCUSABLE);
                  cbf.setChangeListener(this);
                  bhfm2.add(cbf);

                  bcharVfm.add(bhfm);
                  bcharVfm.add(bhfm1);
                  bcharVfm.add(bhfm2);
             /***********************************/
           //符号键盘
           String sign[] = new String[] { &quot;!&quot;, &quot;@&quot;, &quot;#&quot;, &quot;$&quot;, &quot;%&quot;, &quot;^&quot;, &quot;&amp;&quot;, &quot;←&quot;,
                         &quot;(&quot;, &quot;)&quot;, &quot;*&quot;, &quot;确定&quot; };
           HorizontalFieldManager sh1 = new HorizontalFieldManager();
           HorizontalFieldManager sh2 = new HorizontalFieldManager();
           HorizontalFieldManager sh3 = new HorizontalFieldManager();
            cbf = new CustomButtonField(sign[0], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh1.add(cbf);
            cbf = new CustomButtonField(sign[1], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh1.add(cbf);
            cbf = new CustomButtonField(sign[2], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh1.add(cbf);
            cbf = new CustomButtonField(sign[3], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh1.add(cbf);
            cbf = new CustomButtonField(sign[4], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh2.add(cbf);
            cbf = new CustomButtonField(sign[5], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh2.add(cbf);
            cbf = new CustomButtonField(sign[6], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh2.add(cbf);
            cbf = new CustomButtonField(sign[7], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh2.add(cbf);
            cbf = new CustomButtonField(sign[8], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh3.add(cbf);
            cbf = new CustomButtonField(sign[9], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh3.add(cbf);
            cbf = new CustomButtonField(sign[10], CustomButtonField.SIGN, Field.FOCUSABLE);
            cbf.setChangeListener(this);
            sh3.add(cbf);
            cbf = new CustomButtonField(sign[11], CustomButtonField.SIGN, Field.FOCUSABLE);
           cbf.setChangeListener(this);
           sh3.add(cbf);
           signVfm.add(sh1);
           signVfm.add(sh2);
           signVfm.add(sh3);


            vfm.add(label);
            vfm.add(passwd);
            vfm.add(buttonHfm);
            vfm.add(numVfm);
            add(vfm);
            Application.getApplication().addKeyListener(this);           
     }

     protected void paintBackground(Graphics graphics) {
          graphics.setColor(Color.WHITE);
     }

     int index = 0;//标识显示的键盘
     public void fieldChanged(Field field, int context) {
          play();
          if(field instanceof CustomButtonField){
               //virtKbd.setVisibility(VirtualKeyboard.HIDE_FORCE);
               if(&quot;数字&quot;.equals(((CustomButtonField)field).getText())){
                    if(index == 1){
                         vfm.replace(charVfm, numVfm);
                    }else if(index == 2){
                         vfm.replace(signVfm, numVfm);
                    }else if(index == 3){
                         vfm.replace(bcharVfm, numVfm);
                    }
                    index = 0;
               }else if(&quot;字母&quot;.equals(((CustomButtonField)field).getText())){
                    if(index == 0){
                         vfm.replace(numVfm, charVfm);
                    }else if(index == 2){
                         vfm.replace(signVfm, charVfm);
                    }else if(index == 3){
                         vfm.replace(bcharVfm, charVfm);
                    }
                    index = 1;
               }else if(&quot;符号&quot;.equals(((CustomButtonField)field).getText())){
                    if(index == 0){
                         vfm.replace(numVfm, signVfm);
                    }else if(index == 1){
                         vfm.replace(charVfm, signVfm);
                    }else if(index == 3){
                         vfm.replace(bcharVfm, signVfm);
                    }
                    index = 2;
               }else if(&quot;←&quot;.equals(((CustomButtonField)field).getText())){
                    if(passwd.getText().length()&gt;0){
                         passwd.setText(passwd.getText().substring(0, passwd.getText().length()-1));
                    }
               }else if(&quot;确定&quot;.equals(((CustomButtonField)field).getText())){
                    _edit.setText(passwd.getText());
                    _edit1.setFocus();
                    this.close();
               }else if(&quot;↑&quot;.equals(((CustomButtonField)field).getText())){
                    vfm.replace(charVfm, bcharVfm);
                    index = 3;
               }else if(&quot;↓&quot;.equals(((CustomButtonField)field).getText())){
                    vfm.replace(bcharVfm, charVfm);
                    index = 1;
               }else{
                    passwd.setText(passwd.getText() + ((CustomButtonField)field).getText());
               }
               passwd.setFocus();//设置点击按钮失去焦点
          }
     }

     public void play(){
          // create an instance of the player from the InputStream
          Class clazz;
          try {
               clazz = this.getClass();
              InputStream is = clazz.getResourceAsStream(&quot;notify.wav&quot;);
              //create an instance of the player from the InputStream
              Player player = javax.microedition.media.Manager.createPlayer(is, &quot;audio/mpeg&quot;);

               player.realize();
               player.prefetch();
               VolumeControl volumeControl = (VolumeControl) player.getControl(&quot;VolumeControl&quot;);
               volumeControl.setLevel(100);
               // start the player
               player.start();
          } catch (Exception e) {
               // TODO Auto-generated catch block
               e.printStackTrace();
          }
     }

     protected void sublayout(int width, int height) {
          layoutDelegate(Display.getWidth()-10, 210);
          setPosition(-15, 265);
          setExtent(Display.getWidth()-10, 180);
     }


     public boolean keyChar( char key, int status, int time )
    {
         if(key == Keypad.KEY_ESCAPE){
              _edit1.setFocus();
               this.close();
               return true;
         }

        return false;
    }

    public boolean keyDown(int keycode, int time)
    {
         if(keycode == Keypad.KEY_ESCAPE){
              _edit1.setFocus();
               this.close();
               return true;
         }
        return false;
    }

    public boolean keyRepeat(int keycode, int time)
    {
        return false;
    }

    public boolean keyStatus(int keycode, int time)
    {
        return false;
    }

    public boolean keyUp(int keycode, int time)
    {
        return false;
    }   

}

/**
* CustomButtonField.java
*
* Copyright � 1998-2010 Research In Motion Ltd.
*
* Note: For the sake of simplicity, this sample application may not leverage
* resource bundles and resource strings.  However, it is STRONGLY recommended
* that application developers make use of the localization features available
* within the BlackBerry development platform to ensure a seamless application
* experience across a variety of languages and geographies.  For more information
* on localizing your application, please refer to the BlackBerry Java Development
* Environment Development Guide associated with this release.
*/

import net.rim.device.api.ui.*;
import net.rim.device.api.system.*;

/**
* CustomButtonField - class which creates button fields of various shapes.
* Demonstrates how to create custom ui fields.
*/
public class CustomButtonField extends Field implements DrawStyle {
     static final int RECTANGLE = 1;
     static final int SIGN = 2;
     static final int BIG = 3;
     static final int BUTTON = 4;

     private String _label;
     private int _shape;
     private Font _font;
     private int _labelHeight;
     private int _labelWidth;

     /**
     * Constructs a button with specified label, and default style and shape.
     */
     public CustomButtonField(String label) {
          this(label, RECTANGLE, 0);
     }

     /**
     * Constructs a button with specified label and shape, and default style.
     */
     public CustomButtonField(String label, int shape) {
          this(label, shape, Field.FIELD_BOTTOM);
     }

     /**
     * Constructs a button with specified label and style, and default shape.
     */
     public CustomButtonField(String label, long style) {
          this(label, RECTANGLE, style);
     }

     /**
     * Constructs a button with specified label, shape, and style.
     */
     public CustomButtonField(String label, int shape, long style) {
          super(style);

          _label = label;
          _shape = shape;
          _font = getFont();
          _labelHeight = _font.getHeight();
          _labelWidth = _font.getAdvance(_label);
          setMargin(2, 3, 2, 3);
          // setPadding(2,0,-2,0);
     }

     /**
     * @return The text on the button
     */
     String getText() {
          return _label;
     }

     /**
     * Field implementation.
     *
     * @see net.rim.device.api.ui.Field#getPreferredWidth()
     */
     public int getPreferredWidth() {

          if (_shape == SIGN) {
               return 83;
          }
          if (_shape == BIG) {
               return _labelWidth + 20;
          }
          if (_shape == BUTTON) {
               return _labelWidth + 78;
          }
          return _labelWidth + 22;

     }

     /**
     * Field implementation.
     *
     * @see net.rim.device.api.ui.Field#getPreferredHeight()
     */
     public int getPreferredHeight() {
          if (_shape == SIGN) {
               return 30;
          }

          return _labelHeight + 10;

     }

     /**
     * Field implementation.
     *
     * @see net.rim.device.api.ui.Field#drawFocus(Graphics, boolean)
     */
     protected void drawFocus(Graphics graphics, boolean on) {

          graphics.invert(1, 1, getWidth() - 2, getHeight() - 2);

     }

     /**
     * Field implementation.
     *
     * @see net.rim.device.api.ui.Field#layout(int, int)
     */
     protected void layout(int width, int height) {
          // Update the cached font - in case it has been changed.
          _font = getFont();
          _labelHeight = _font.getHeight();
          _labelWidth = _font.getAdvance(_label);

          // Calc width.
          width = Math.min(width, getPreferredWidth());

          // Calc height.
          height = Math.min(height, getPreferredHeight());

          // Set dimensions.
          setExtent(width, height);
     }

     /**
     * Field implementation.
     *
     * @see net.rim.device.api.ui.Field#paint(Graphics)
     */
     protected void paint(Graphics graphics) {
          int textX, textY, textWidth;
          int w = getWidth();
          int h = getHeight();

          graphics.drawRect(0, 0, w, h);

          textX = 4;
          textY = 2;
          textWidth = w - 6;

          graphics.drawText(_label, textX, textY, (int) (getStyle()
                    &amp; DrawStyle.ELLIPSIS | DrawStyle.HALIGN_MASK), textWidth);
     }

     /**
     * Overridden so that the Event Dispatch thread can catch this event instead
     * of having it be caught here.
     *
     * @see net.rim.device.api.ui.Field#navigationClick(int, int)
     */
     protected boolean navigationClick(int status, int time) {
          fieldChangeNotify(0);
          return true;
     }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：黑莓错误代码及解决方法大全]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E9%BB%91%E8%8E%93%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E5%A4%A7%E5%85%A8/</url>
      <content type="html"><![CDATA[<p>首先，了解几个名词解释以方便对下文的理解。  </p>
<blockquote>
<p>JVM—Java Virtual Machine(Java虚拟机)<br>C++—一种计算机编程语言<br>GC—Gabage Collection JAVA/.NET中的垃圾回收<br>CRC校验—循环冗余校验码（Cyclic Redundancy Check）<br>JIT编译器—（Just-In-Time）JAVA语言编译器</p>
</blockquote>
<p>####101 Previous startup failed<br>当jvm（Java虚拟机）启动过程中，前一个启动的项目失败了，设备已经被重置。这个错误表明jvm在启动时找到“启动进行中”这个标志位已经设置了，当前屏幕信息为：有意停止“系统继续重置”这个死循环，来纠正系统当前不正确的启动操作</p>
<p>####102 Invalid code in filesystem<br>在文件系统中发现无效的代码。手持设备的系统检查.cod文件的变动时，在一些.cod文件中检测到这个问题。他肯可能是表明生成过程中发生了错 误，即在cod文件中存在一个有问题的签名。如果一些用户操作设备导致这个问题的发生，文件系统的代码被破坏，复位的周期将是连续循环的。唯一的恢复方法 是擦去设备并且恢复一个新的系统。</p>
<p>####103 Cannot find starting address<br>找不到启动的地址，用于启动系统的引导cod文件找不到。这个错误表明一个用于引导系统的cod文件没有安装到设备上，或者格式不正确。</p>
<p>####104 Uncaught: <java-type-name><br>非预期：《java模块名》jvm诊断出一个非预期的java代码异常错误抛出，程序可以继续执行，或者手持设备可以用桌面管理器连是USB线安装一个程序调试器来查看这些错误信息。事件日志里应该包含了异常错误的信息</java-type-name></p>
<p>####105 Example, DbRecSize<br>举例，DbRecSize文件系统API已经为一种特定的操作返回一种错误状态码，他可能表明在jvm上存在一个无效的或者错误的文件系统</p>
<p>####106 Graphics system error<br>图形系统错误，在设备的图形系统里一个错误发生并被检测到</p>
<p>####107 operator new () called<br>在jvm里，操作new()回调一个c++类，该函数代码没有被正确的从VMRamObject对象来继承，新操作符需要被正确的继承。提取当前的(-后复位)的BUGDISP</p>
<p>####108 operator delete () called<br>在jvm里，操作delete()回调一个c++类，，该函数代码没有被正确的从VMRamObject对象来继承，新操作符需要被正确的继承。提取当前的(-后复位)的BUGDISP</p>
<p>####109 PriorityMessageCount error: <priority-count><br>优先级统计信息计算错误：&lt;优先级计算&gt;当它应该总大于或者等于零时，RimPriorityMessageCount返回的值是负的。这表明在系统中这是一个错误。<br>提取当前(-后复位)的BUGDISP和查看系统事件记录</priority-count></p>
<p>####110 Non-idle event downtime error: <down-time> <idle-down-time><br>非空闲状态时间事件错误：&lt;时间&gt; &lt;空闲时间&gt;在jvm空闲时间统计时检测到一个错误，代表JVM空闲了很长时间。<br>这通常表明在手持设备或者JVM中发生一个错误。如果计数器空闲了400天以上的设备时间,他也可能出现。</idle-down-time></down-time></p>
<p>####111 Font engine error<br>字体引擎错误：一个系统设备的字体引擎错误检测到。请查看当前的BUGDISP和事件日志</p>
<p>####112 Java Native Assertion Failure<br>Java本地化实例失败。一个本地化代码错误检测到。请查看当前的BUGDISP和事件日志</p>
<p>####200 应用程序管理器抛出一个非预期的线程异常错误，程序无法继续执行。重新复位手持设备。</p>
<p>####201 Crypto initialization code failed<br>Crypto初始化代码失败。Crypto模块初始化失败手持设备无法继续</p>
<p>####202 在密匙存储上检测到一个破解攻击行为，程序无法继续</p>
<p>####203 Console process died<br>控制台进程死亡。应用程序管理器控制台进程已经挂起。这看起来非常象执行程序时发生异常错误的现象</p>
<p>####204 Persistent Content Exception<br>本地内存内容异常。一个应用程序试图提交一个文本对象到本地内存里。这个情况将仅仅发生在：如果内容保护服务打开了，然后一个进程试图保存一些文本 标记数据在本地内存里。当这个异常没有被正确处理过，可能说明本地内存已经处于损坏的状态。我们需要重设和回滚到最后正常状态的提交点。说明：这个jvm 异常反映了在Java代码里有一个错误的地方，Jvm仅仅只是简单的诊断这个错误。如果这不是jvm的问题，那么事件日志将包含足够的Java代码错误信 息。</p>
<p>####300-303 Bad load<br>无效的加载持续，运行应用程序加载器重新给手持设备加载操作系统和应用程序</p>
<p>####310-314 Hardware failure<br>硬件错误。尝试硬复位手持设备：关机，拿掉电池，等待一会儿，换掉电池看看设备重新启动时会出现什么状况，或者运行应用程序加载器重新给手持设备加载操作系统和应用程序。注意：如果这些办法没有解决这个错误，请联系你的服务提供商</p>
<p>####320-325 AMX failure<br>AMX 失败。请运行应用程序加载器重新给手持设备加载操作系统和应用程序</p>
<p>####330-339 Application tasks failure<br>应用程序任务失败。请运行应用程序加载器重新给手持设备加载操作系统和应用程序</p>
<p>####340-343 Memory failure<br>内存错误。您可能看到手持设备报告如下错误代码：<br>Device Error 340<br>Device Error 341<br>Device Error 342<br>Device Error 343<br>原因：内存错误<br>解决：减少你手机里日历约会同步的个数<br>1、在桌面管理器里，双击Intellisync图标，点击配置PIM按钮<br>2、在设备应用程序列表中，选择日历<br>3、点击配置，高级设置，<br>4、在数据范围选项页，完成其中的一个任务来减少你手机里日历约会同步的个数，如果你选择了“调度最佳未来项目选择”的选项，手持设备仅仅只是同步未来的日历约会，如果你点击并输入了一个日期范围的调度项目选项，手持设备仅仅只是同步在选择日期范围内的日历计划约会.<br>5、点击OK保存改变，关闭窗口<br>6、在配置窗口，确定日历程序的复选框选择了，点击OK<br>7、在Intellisync窗口，确认同步PIM复选框已经选择了，然后点击立即同步。设备会减少至少一个以上的日历约会项目。<br>如果你仍然看到这个错误信息。请运行应用程序加载器重新给手持设备加载操作系统和应用程序</p>
<p>####350-359 Software application failure<br>应用程序软件错误，您可能看到手持设备报告如下错误代码：<br>Device Error 350<br>Device Error 352<br>Device Error 353<br>Device Error 354<br>Device Error 355<br>Device Error 356<br>Device Error 357<br>Device Error 358<br>Device Error 359<br>原因：应用程序软件错误<br>解决方案：尝试硬复位手持设备，运行应用程序加载器重新给手持设备加载操作系统和应用程序。在向导窗口，不要选择任何第三方应用程序。在高级选项里，选择清除当前所有已安装的应用程序复选框。</p>
<p>####360-363 Flash memory failure<br>Flash内存错误。尝试硬复位手持设备，运行应用程序加载器重新给手持设备加载操作系统和应用程序。</p>
<p>####365-368 This one is often followed by “OHHH @&amp;#%!!”<br>这是一个经常跟随 “OHHH @&amp;#%!!”出现的错误，请联系服务提供商</p>
<p>####395 Unclassified error code<br>未分类的错误代码<br>原因：<br>设备395代码表明是一个未分类的错误代码。手持设备安装了第三方应用程序可能导致了这个错误产生<br>解决方案1<br>尝试硬复位手持设备：关机，拿掉电池，等待一会儿，换掉电池看看设备重新启动时会出现什么状况<br>解决方案2<br>清除和重新加载手持设备的数据<br>1、在黑莓桌面管理器里，用备份和还原工具创建你的手机的数据备份文件。如需更多信息，请参考桌面管理器在线帮助里的“手持设备备份信息”。警告：下面的步骤可能清除手持设备的数据<br>2、打开桌面管理器，双击应用程序加载器图标<br>3、单击下一步，出现应用程序选择窗口<br>4、确认必须的应用程序已经选择了，点击下一步<br>5、点击“高级”<br>6、选择“清除所有的应用程序数据和当前已经安装的应用程序”玄虚，点击下一步<br>7、点击完成。当手持设备的操作系统和应用程序重新加载时，手持设备的数据被清除，<br>8、使用备份和还原工具从备份的数据文件还原到手持设备中，如需更多信息，请参考桌面管理器在线帮助里的“手持设备还原信息”。</p>
<p>####400-564 Page faults<br>页面文件失效。运行应用程序加载器重新给手持设备加载操作系统和应用程序</p>
<p>####410 Radio failure<br>无线电服务失败。<br>尝试硬复位手持设备，运行应用程序加载器重新给手持设备加载操作系统和应用程序。注意：如果这样都没有解决这个错误，请请联系服务提供商<br>Error:411=电池模块问题,更换电池<br>Error:499=软件问题,重启手持设备.</p>
<p>####501 VM_THREAD_SWITCHED<br>线程已经被切换，内部错误，这是在VM中被内部使用的一个错误返回信息。它应该从会不报告为一个设备错误代码。</p>
<p>####502 VM_PROCESS_DEATH<br>进程已死（挂起），所有的进程已经退出，最后一个java进程已被终止，没有任何程序可以执行</p>
<p>####503 VM_THREAD_DEATH<br>线程已死（挂起），内部错误，这是在VM中被内部使用的一个错误返回信息。它应该从不会报告为一个设备错误代码</p>
<p>####504 VM_THREAD_SWITCH<br>线程已经被切换，内部错误，这是在VM中被内部使用的一个错误返回信息。它应该从不会报告为一个设备错误代码</p>
<p>####505 VM_BAD_CODE5 I<br>无效的代码：无效字节代码，在JIT编译器里发生一个错误</p>
<p>####506 Uncaught Exception<br>未知的异常：在初始化VM的java线程的时候一个未知的java异常被抛出，导致了系统被迫结束了唯一活动的线程。事件日志包含了异常的回滚记录!</p>
<p>####507 Unsatisfied Link<br>在cod文件里有不合适的文件链接关联，可能丢失了cod文件，（原文的英文是如此）<br>Device Error 5059<br>Device Error 5077<br>手持设备没有安装任何应用程序<br>原因1<br>当应用程序加载器工作时，黑莓设备上存在的应用程序已经被清除，但应用程序加载器加载新的应用程序时失败了<br>解决方案<br>1、确认你的电脑上已经正确安装了设备软件<br>2、请直接将您的黑莓设备直接连接到一台笔记本电脑的USB接口处<br>3、如果第三方程序（如：杀毒软件）已经使用了和桌面管理器手持设备的相同的COM端口，关闭第三方程序来释放COM端口<br>4、如果你使用USB数据线链接黑莓设备到你的电脑的串口，请用USB端口直接链接BB<br>5、在桌面管理器里，双击应用程序加载器<br>6、用应用程序加载器安装设备系统软件<br>原因2<br>如果你输入密码错误超过10次，你bb上所有的数据和程序都会被清除<br>解决<br>1、在桌面管理器里，双击应用程序加载器<br>2、用应用程序加载器安装设备系统软件</p>
<p>####508 Invalid object<br>无效的对象，当vm执行一个调试器命令时检测到一个问题：无效的对象</p>
<p>####509 VM_PPO_INFINITE_LOOP<br>在垃圾手机的PPO阶段中发现死循环，在GC的PPO阶段中，最大的迭代总数必须是系统中的文件句柄的最大数字。这个错误表明这个迭代总数已经超过 这个数，因而在PPO循环中或者不正确的文件系统中出现了一个瑕疵。在错误字符串中可以提取到一个特别的16进制整数值，是当前检测到的死循环记录的id 值</p>
<p>####510 Deadlock<br>死锁，所有的线程对象都在等待，但一个线程返回结果时已经死锁了。系统不能从这个死锁状态中恢复，因为所有的线程都被锁定了。</p>
<p>####511 Debug connection died<br>调试器连接已经死锁，当调试的时候，vm的问题或者不正确的调试命令发送给vm时，可能导致这个问题发生</p>
<p>####512 GC Aborted<br>GC（垃圾收集）已经终止，空间垃圾收集器程序被用户操作事件强制终止了，诸如挤压键盘或者移动滚轮操作</p>
<p>####513 <clinit> needs running</clinit></p>
<p><clinit>类需要先运行。此类名<clinit>能继续执行之前要求执行一个opcode，。</clinit></clinit></p>
<p>####514 <init> needs running</init></p>
<p><init>需要运行。一个新的类实例在使用之前必须通过默认构造函数初始化和分配内存空间。</init></p>
<p>####515 Object group too big<br>对象组太大。jvm不能正确的获得对象组，不是因为对象太多就是因为对象组太大</p>
<p>####516 Persistent ids exhausted<br>ids固件设备衰竭。当访问一个固件对象时，jvm发现这个本地内存id计数器已经达到最大限制。对象不能被提交，同时报告一个致命的错误。这个错误可能从不会发生，除非这个设备大量使用了数年之久。</p>
<p>####517 Filesystem corrupt<br>文件系统不正确。在jvm本地内存里检测到一个错误（矛盾）的分配地址</p>
<p>####518 Unexpected longjmp5<br>意外的longjmp指令。一个垃圾收集器指令方面结束了一个longjmp指令。这可能表明当指令没有中断即将完成操作时，这个标记阶段被这个错误中断了。这个情况应该从不会发生，因为当设备非空闲的时候，这些操作会被执行，同时,<br>仅仅当设备空闲时,垃圾收集器的工作才会被中断</p>
<p>####519 Internal Error<br>内部服务器错误。Jvm系统丢失或者被禁止</p>
<p>####520 Internal Return<br>内部返回一个错误，表明一个java方法返回的一种内部的状态需要执行</p>
<p>####521 Dangerous Wait An Object<br>一个危险的等待对象。一个线程执行Wait（）方法时被另外一个对象锁定。这个仅仅在基于jvm的模拟器里控制调试应用程序切换时才会检查</p>
<p>####522 Interlaced synchronization<br>交互式同步错误，对象的线程已经通过一个命令获得了2个锁定，但是，这2个已经取得的锁定类型并不匹配线程被锁定之前的命令。这表明一个即将发生潜在的死锁情况被报告。这个仅仅在基于jvm的模拟器里控制调试应用程序切换时才会检查</p>
<p>####523 System process died<br>系统进程已死（挂起）。一个致命的java程序错误导致系统已经被终止，设备无法继续正常的操作，请复位重新启动手持设备。</p>
<p>####524 LMM error<br>LMM错误。一个对象被低内存管理器作了回收标记，但内存垃圾收集时他没有被正确释放。这个仅仅在基于jvm的模拟器里控制调试应用程序切换时才会检查</p>
<p>####525 Bad persistent object<br>损坏的本地内存对象。当垃圾收集期间，从本地内存根目录检测到一个自动操作提交到了一个非持久本地对象，这个类型的对象已经记录到事件日志里了</p>
<p>####526 java.lang.Object not found<br>类定义java.lang.Object对象未找到。</p>
<p>####527 java.lang.String not found<br>类定义java.lang.String对象未找到</p>
<p>####528 –529 Corrupt filesystem<br>错误的文件系统。不可恢复的错误，继续执行的话将会导致所有数据丢失。这个错误信息包含了内部“错误原因”的数字代码。<br>jvm编译器常见错误代码<br>1.根数组引用不是有效的数组引用<br>2.根数组类型不是Object[]<br>3.根数组大小小于1，如Object[0]</p>
<ol>
<li>root[0]里的内存不是有效的引用</li>
<li>root[0]类型不是一个长整型哈希表<br>6.数组头部段包含一个无效的引用</li>
<li>在本地Object[]的一个项目中包含一个无效的引用<br>8.一个对象类型引用了一个未知的cod文件<br>9.在内存里，一个cod文件中的对象的类型描叙文件大小不匹配</li>
<li>一个对象里面有一个无效的类型字段引用<br>11.对象中一个引用的类型字段链接到了另一对象的无效类型<br>12.在描叙符中一个本地Object[]丢失!<br>13.在本地内存中对象没有被标记为persis表<br>14.根数组被分割，一个分隔段无效<br>####530 VM_PREVENT_GC_OVERFLOW<br>_preventGC 溢出。原始对象的固定值会被保护起来防止被垃圾收集器收走。这个错误表明,<br>数值可能超出了被保护对象的固定的极限。如果设备被重置或者线程回滚事件被记录，这个实际的数值可以提取出来。<br>####531 Flash exhausted<br>内存已经耗尽用完。jvm无法容许超出内存空间的某些操作。如果jvm无法完成分配需要的内存空间大小，将会报告这个错误<br>####532 VM_ASSERTION_FAILED<br>维护任务失败。通常，当设备没有启动允许维护状态时，这个jvm错误一般不会被报告，模拟器在调试状态时可能会报告这个错误，表明一个vm维护操作违反了约定。可以尝试输入BKPT来激活调试器，然后转储这个本地堆栈转交给vm组<br>####533 VM_RUN_METHOD<br><method>方法需要使用国际标准的ECMAScript脚本调用方法才能运行<br>####534 VM_FAST_RESET_DISABLED<br>快速复位被禁止。内部过去经常用这个代码表示快速复位能力是无效的。请经常使用平台制定的代码<br>####535 VM_UNUSED_535<br>未使用的vm错误。错误535意味着内存溢出。导致535错误的一个原因可能是一个运行的线程内存溢出，导致虚拟内存线程计划任务程序终止了。这个错误是已知的，发生在一个启动的队列期间，或如果主事件线程被停止了。<br>解决方案：<br>首先，硬启动手持设备。如果不能解决问题，从你的载体获得并安装最新版的黑莓手持设备ROM软件，然后，运行桌面管理器里的应用程序加载器更新手持设备。或者删除一些铃声和主题文件等等以释放存储空间<br>####536 VM_FAST_RESET_BAD_INSTANCE<br>vm快速复位实例检查失败。内部过去经常用这个代码表示：vm结构跳过了错误的地址空间或者vm已经被破坏了<br>####537 VM_FAST_RESET_BAD_HEAP<br>快速复位错误，堆检查失败。内部过去经常用这个代码表示：vm堆已经无效了，或者指针堆已经无效</method></li>
</ol>
<p>####538 VM_FAST_RESET_BAD_IRAM<br>快速复位IRAM损害，IRAM检查失败。内部过去经常用这个代码表示：vm的IRAM检查中检测到寄存在IRAM中无效的vm数据结构（线程+本地堆栈），或者指针</p>
<p>####539 VM_FAST_RESET_NOT_IDLE<br>快速复位状态非空闲。内部过去经常用这个代码表示：当复位发生时vm正忙，类似这样的问题导致快速复位无法继续</p>
<p>####540 VM_FAST_RESET_MULTIPLE_RESETS<br>多重复位错误。内部过去经常用这个代码表示：最近一次复位的时间小于最小复位时间间隔。由于禁止了短时间内多重复位次数，这个可以防止快速复位的死循环</p>
<p>####541 VM_HEAP_COMPACT_INFINITE_LOOP<br>在堆压缩中检测到死循环。Vm在内存堆里检测到一个问题，表明这个内存块是无效的。当进行内存堆压缩时，在确认一个可能的死循环时这个问题可以被检 测到，当设备包含了这个错误条件时，bugdisp记录和事件日志可以快速提取这个错误信息。如果可能的话，内存映像将会保存下来。</p>
<p>####542 Transient memory leak<br>瞬间内存泄露。Jvm检测到某些内存没有被释放，这表明发生了内存泄露。希望原因能够尽早检测出来，避免这个情况的发生</p>
<p>####543 VM_FS_MISMATCH<br>文件系统不匹配。安装了不兼容的java文件系统。Jvm检测到现有的系统代码和经常用于创建java文件系统的系统代码有不同。这意味着java本地方法可能没有被正确的编译链接，所以，不能肯定系统的完整性。系统无法通过使用vm<br>DLFX和DLPS命令恢复，也不能删除或修理本地内存的错误。这可能清除所有的数据和固件内容，请重新链接编译文件系统，才能匹配新的系统代码。恢复顺序非常<br>重要：1.删除应用程序，2.删除本地内存内容，3.复位设备</p>
<p>####544 VM_SECTION_MAP_OVERFLOW<br>一个模块引用超过了255个其他模块。Vm检测到一个模块试图引用超过了255个其他的模块。当错误检测到的时候，文件系统应该立即获取到该错误</p>
<p>####545 VM_INCOMPATIBLE_FILESYS<br>Vm检测到一个不兼容的或无效的文件系统存在。当错误检测到的时候，文件系统应该立即获取到该错误</p>
<p>####546 VM_UNUSED_546<br>未使用（的内部错误代码）。Vm检测到文件系统中的内存映像是无效的（CRC冗余检查失败），重新复位机器好过复制错误的内存<br>内容</p>
<p>####547 VM_UNUSED_547<br>未使用（的内部错误代码）。Vm错误</p>
<p>####548 VM_UNUSED_548<br>未使用（的内部错误代码）。Vm错误</p>
<p>####549 VM_UNUSED_549<br>未使用（的内部错误代码）。Vm错误</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：字符串2]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B22/</url>
      <content type="html"><![CDATA[<p>输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数</p>
<pre><code>/*
 * @(#)Test1.java     1.0 2015/3/30
 *
 */
package com.rolex.program;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


/**
 *
 * User: rolex
 * Date: 2015/3/30
 * version: 1.0
 */
public class Prog0330 {
    public static void main(String[] args) throws IOException {
        Prog0330 t = new Prog0330();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s = br.readLine();
        t.wordCount(s);
    }

    public void wordCount(String s){
        int wordCount=s.length();
        int digitCount = 0;
        int letterCount = 0;
        int spaceCount = 0;
        int otherCount = 0;
        for(int i=0;i&lt;wordCount;i++){
            char c = s.charAt(i);
            if(Character.isDigit(c)){
                digitCount += 1;
            }else if(Character.isLetter(c)){
                letterCount += 1;
            }else if(Character.isSpaceChar(c)){
                spaceCount += 1;
            }else{
                otherCount += 1;
            }
        }

        System.out.println(&quot;wordCount=&quot;+wordCount);
        System.out.println(&quot;digitCount=&quot;+digitCount);
        System.out.println(&quot;letterCount=&quot;+letterCount);
        System.out.println(&quot;spaceCount=&quot;+spaceCount);
        System.out.println(&quot;otherCount=&quot;+otherCount);
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：分解质因数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>每个合数都可以写成几个质数相乘的形式。其中每个质数都是这个合数的因数，叫做这个合数的分解质因数。如 90 = 2 <em> 3 </em> 5</p>
<p>1.给点数n，求1到n的所有素数。<br>2.如果n不是素数，用第一个质数2开始除，能整除则商继续用从2开始除。<br>3.如果不能整除，换下一个质数，直到商等于质数。</p>
<pre><code>/*
 * @(#)QualityFactor.java     1.0 2015/3/26
 *
 */
package com.rolex.algorithm;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * User: rolex
 * Date: 2015/3/26
 * version: 1.0
 */
public class Algo0326 {

    private boolean flag = false;

    public static void main(String[] args) {
        Algo0326 qf = new Algo0326();
        qf.print(5);

    }

    private void print(int n) {
        List list = prime(n);
        if (list != null &amp;&amp; list.size() &gt; 0) {
            System.out.print(n + &quot; = &quot;);
            decom(n, list);
        }
    }

    private void decom(int n, List list) {
        if (!list.contains(n)) {
            for (int i = 0; i &lt; list.size(); i++) {
                if (!flag) {
                    int p = (Integer) list.get(i);
                    if (n % p == 0) {
                        System.out.print(p + &quot; * &quot;);
                        decom(n / p, list);
                    }
                } else {
                    break;
                }
            }
        } else {
            System.out.print(n);
            flag = true;
        }
    }

    public List prime(int n) {
        List list = new ArrayList();
        for (int i = 2; i &lt;= n; i++) {
            int j;
            for (j = 2; j &lt;= Math.sqrt(i); j++) {
                if (i % j == 0) {
                    break;
                }
            }
            if (j &gt; Math.sqrt(i)) {
                list.add(i);
            }
        }
        return list;
    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：全排列]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%85%A8%E6%8E%92%E5%88%97/</url>
      <content type="html"><![CDATA[<pre><code>public void perm(int[] arr,int start,int end){
     if(start==end){
          for(int i=0;i&lt;arr.length;i++){
               System.out.print(arr[i]);
          }
          System.out.println();
     }else{
          for(int i=start;i&lt;=end;i++){
               swap(arr,start,i);
               perm(arr,start+1;end);
               swap(arr,start,i);
          }
     }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：二叉树的遍历与判断同构]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E4%B8%8E%E5%88%A4%E6%96%AD%E5%90%8C%E6%9E%84/</url>
      <content type="html"><![CDATA[<p>前序遍历（ DLR）也叫做先根遍历，可记做根左右。 前序遍历首先访问根结点然后遍历左子树，最后遍历右子树。在遍历左、右子树时，仍然先访问根结点，然后遍历左子树，最后遍历右子树。<br>中序遍历，也叫中根遍历，遍历顺序为 左子树 -根 -右子树。<br>后序遍历，也叫后根遍历，遍历顺序为 左子树 -右子树 -根。  </p>
<p>同构指两棵树的结构，包括子树的结构相似，节点的值可以不同。</p>
<pre><code>class BinaryTree{
    char value
    BinaryTree left
    BinaryTree right
}

def g = new BinaryTree(value:&apos;G&apos;)
def f = new BinaryTree(value:&apos;F&apos;)
def e = new BinaryTree(value:&apos;E&apos;)
def d = new BinaryTree(value:&apos;D&apos;)
def c = new BinaryTree(value:&apos;C&apos;,left: f,right: g)
def b = new BinaryTree(value:&apos;B&apos;,left: d,right: e)
def a = new BinaryTree(value:&apos;A&apos;,left: b,right: c)

def g1 = new BinaryTree(value:&apos;g&apos;)
def f1 = new BinaryTree(value:&apos;f&apos;)
def e1 = new BinaryTree(value:&apos;e&apos;)
def d1 = new BinaryTree(value:&apos;d&apos;)
def c1 = new BinaryTree(value:&apos;c&apos;,left: f1)
def b1 = new BinaryTree(value:&apos;b&apos;,left: d1,right: e1)
def a1 = new BinaryTree(value:&apos;a&apos;,left: b1,right: c1)

def String preorder(BinaryTree tree){
    String s = &apos;&apos;
    if(tree != null){
        s += tree.value
        s += preorder(tree.left)
        s += preorder(tree.right)
    }
    return s
}

def String postorder(BinaryTree tree){
    String s = &apos;&apos;
    if(tree != null){
        s += postorder(tree.left)
        s += postorder(tree.right)
        s += tree.value
    }
    return s
}

def String middleorder(BinaryTree tree){
    String s = &apos;&apos;
    if(tree != null){
        s += middleorder(tree.left)
        s += tree.value
        s += middleorder(tree.right)
    }
    return s
}

def boolean like(BinaryTree a, BinaryTree b){
    if(a==null &amp;&amp; b==null){
        return true
    }else{
        if(a!=null &amp;&amp; b!=null){
            return like(a.left,b.left) &amp; like(a.right,b.right)
        }else{
            return false
        }
    }
}
println preorder(a)
println postorder(a)
println middleorder(a)
println like(a,a1)
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：最大公约数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/</url>
      <content type="html"><![CDATA[<pre><code>/*
 * @(#)GCD.java     1.0 2015/3/27
 *
 */
package com.rolex.algorithm;

/**
 * 最大公约数(m,n)-碾除法
 *
 * User: rolex
 * Date: 2015/3/27
 * version: 1.0
 */
public class Algo0327 {

    public static void main(String[] args) {
        Algo0327 g = new Algo0327();
        System.out.println(g.gcd(319, 377));
        System.out.println(g.lcm(18, 20));
    }

    public int gcd(int m, int n) {
        int big;
        int small;
        int result;
        if (m &gt; n) {
            big = m;
            small = n;
        } else {
            big = n;
            small = m;
        }
        if (big % small != 0) {
            result = gcd(small, big % small);
        } else {
            result = small;
        }
        return result;

    }

    public int lcm(int m, int n) {
        int g = gcd(m, n);
        return m * n / g;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：选择排序]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>从序列中选择最小元素，放置在起始位置，直到全部排完。</p>
<p>选择排序的时间复杂度为O(n*n)</p>
<pre><code>public class SelectSort {
    public int[] sort(int[] arr) {
        if (arr == null || arr.length == 0) {
            throw new RuntimeException(&quot;can not sort&quot;);
        }

        for (int i = 0; i &lt; arr.length - 1; i++) {
            for (int j = i; j &lt; arr.length - 1; j++) {
                if (arr[i] &gt; arr[j]) {
                    swap(arr, i, j);
                }
            }
        }

        return arr;
    }

    public void swap(int[] arr, int x, int y) {
        int temp = arr[x];
        arr[x] = arr[y];
        arr[y] = temp;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：快速排序]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>快速排序算法是将数组中的一个元素作为基准 P，分别从前后两端进行比较交换，小于 P的放在 P前，大于 P的放在 P后。然后从 P分成两个数组进行递归。</p>
<p>groovy版</p>
<pre><code>def arr = [23,4,56,67,2,38,90,7] as int[]
def int[] quickSort(int[] a,int low,int high){
    if(a != null &amp;&amp; a.length &gt; 0){
        int start = low
        int end = high
        int p = a[start]
        while(start &lt; end){
            if(a[end] &gt; p){
                end--
                continue
            }
            if(a[start] &lt; p){
                start++
                continue
            }
            swap(a,start,end)
        }
        if(start-1&gt;low){
            quickSort(a,low,start-1)
        }
        if(start+1 &lt;= high){
            quickSort(a,start+1,high)
        }
    }
    return a
}
def swap(int[] a,int start,int end){
    if(a != null &amp;&amp; a.length &gt;0 &amp;&amp; start&gt;=0 &amp;&amp; end &gt;=0 &amp;&amp; end &lt;a.length){
        int temp = a[start]
        a[start] = a[end]
        a[end] = temp
    }
    println a
}

println quickSort(arr,0,arr.length-1)
</code></pre><p>java版</p>
<pre><code>public class QuickSort {
    public int[] sort(int[] arr, int low, int high) {
        if (arr == null || arr.length == 0) {
            throw new RuntimeException(&quot;can not sort&quot;);
        }

        int start = low;
        int end = high;
        int p = arr[start];

        while (start &lt; end) {
            if (p &lt; arr[end]) {
                end--;
                continue;
            }
            if (p &gt; arr[start]) {
                start++;
                continue;
            }
            swap(arr, start, end);
        }

        if (start - 1 &gt; low) {
            sort(arr, low, start - 1);
        }

        if (start + 1 &lt; high) {
            sort(arr, start + 1, high);
        }

        return arr;
    }

    public void swap(int[] arr, int x, int y) {
        int temp = arr[x];
        arr[x] = arr[y];
        arr[y] = temp;
    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：冒泡排序]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>比较两个元素，顺序错误则交换，直到将最大放置到末尾，一次排序结束。</p>
<p>冒泡排序的时间复杂度为O(n*n)</p>
<p>java版</p>
<pre><code>public class BubbleSort {
    public int[] sort(int[] arr) {
        if (arr == null || arr.length == 0) {
            throw new RuntimeException(&quot;can not sort&quot;);
        }

        for (int i = 0; i &lt; arr.length; i++) {
            for (int j = 0; j &lt; arr.length - i; j++) {
                if (arr[j] &gt; arr[j + 1]) {
                    swap(arr, j, j + 1);
                }
            }
        }

        return arr;
    }

    public void swap(int arr[], int x, int y) {
        int temp = arr[x];
        arr[x] = arr[y];
        arr[y] = temp;
    }

}
</code></pre><p>groovy版</p>
<pre><code>def int[] bubbleSort(int[] arr){
    if(arr != null &amp;&amp; arr.length &gt; 0){
        for(int i=0;i&lt;arr.length;i++){
            for(int j=0;j&lt;arr.length-i-1;j++){
                if(arr[j]&gt;arr[j+1]){
                    int temp = arr[j]
                    arr[j] = arr[j+1]
                    arr[j+1] = temp
                }
            }

        }
    }
    return arr
}

println bubbleSort(arr)
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：交换两个数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E4%BA%A4%E6%8D%A2%E4%B8%A4%E4%B8%AA%E6%95%B0/</url>
      <content type="html"><![CDATA[<pre><code>a=5,b=10
a=a+b    a=15 b=10
a=b-a     a=-5 b=10
b=a+b    b=5 a=-5
a=b-a     a=10 b=5



a=1,b=10
a=a+b    a=11 b=10
a=b-a     a=-9 b=10
b=a+b    b=1 a=-9
a=b-a     a=10 b=1
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：二叉树遍历]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</url>
      <content type="html"><![CDATA[<pre><code>/*
  * @(#)Algo0402.java     1.0 2015/4/12
 *
 */
package com.rolex.algorithm;

/**
 * 二叉树遍历
 * &lt;p/&gt;
 * User: rolex
 * Date: 2015/4/12
 * version: 1.0
 */
public class Algo0412 {

    public static void main(String[] args) {
        Algo0412 algo = new Algo0412();
        BinaryTree d = new BinaryTree(&apos;D&apos;);
        BinaryTree e = new BinaryTree(&apos;E&apos;);
        BinaryTree f = new BinaryTree(&apos;F&apos;);
        BinaryTree g = new BinaryTree(&apos;G&apos;);
        BinaryTree c = new BinaryTree(&apos;C&apos;, f, g);
        BinaryTree b = new BinaryTree(&apos;B&apos;, d, e);
        BinaryTree a = new BinaryTree(&apos;A&apos;, b, c);

        System.out.println(&quot;preorder : &quot; + algo.preorder(a));
        System.out.println(&quot;inorder : &quot; + algo.inorder(a));
        System.out.println(&quot;postorder : &quot; + algo.postorder(a));
    }

    public String preorder(BinaryTree t) {
        if (t == null) {
            return &quot;&quot;;
        }
        String s = &quot;&quot;;
        s += t.getValue();
        s += preorder(t.getLeft());
        s += preorder(t.getRight());
        return s;
    }

    public String inorder(BinaryTree t) {
        if (t == null) {
            return &quot;&quot;;
        }
        String s = &quot;&quot;;
        s += inorder(t.getLeft());
        s += t.getValue();
        s += inorder(t.getRight());
        return s;
    }

    public String postorder(BinaryTree t) {
        if (t == null) {
            return &quot;&quot;;
        }
        String s = &quot;&quot;;
        s += postorder(t.getLeft());
        s += postorder(t.getRight());
        s += t.getValue();
        return s;
    }
}

class BinaryTree {
    private BinaryTree left;
    private BinaryTree right;
    private char value;

    public BinaryTree(char c, BinaryTree left, BinaryTree right) {
        this.value = c;
        this.left = left;
        this.right = right;
    }

    public BinaryTree(char c) {
        this(c, null, null);
    }

    public void setLeft(BinaryTree left) {
        this.left = left;
    }

    public BinaryTree getLeft() {
        return left;
    }

    public void setRight(BinaryTree right) {
        this.right = right;
    }

    public BinaryTree getRight() {
        return right;
    }

    public void setValue(char c) {
        this.value = c;
    }

    public char getValue() {
        return value;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法：二分查找]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%AE%97%E6%B3%95%EF%BC%9A%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      <content type="html"><![CDATA[<p>二分查找，又叫折半查找，时间复杂度为 O(logn)</p>
<p>groovy版</p>
<pre><code>def s = [1, 2, 3, 4, 5, 6, 7, 8, 9] as int[]

def binarySearch(int[] a, int b) {
    int low = 0;
    int high = a.length - 1
    while (low &lt; high) {
        int middle = (low + high) / 2 as int
        if (b &lt; a[middle]) {
            high = middle - 1
            continue
        }
        if (b &gt; a[middle]) {
            low = middle + 1
            continue
        }
        if (b == a[middle]) {
            return middle
        }
    }
    return -1
}

println binarySearch(s, 80)
</code></pre><p>java版</p>
<p>迭代：</p>
<pre><code>public class BinarySearch {
    public int search(int[] arr, int x) {
        if (arr == null || arr.length == 0) {
            return -1;
        }
        int low = 0;
        int high = arr.length - 1;
        while (low &lt; high) {
            int middle = (low + high) / 2;
            if (x &gt; arr[middle]) {
                low = middle + 1;
                continue;
            }
            if (x &lt; arr[middle]) {
                high = middle - 1;
                continue;
            }
            if (x == arr[middle]) {
                return middle;
            }
        }
        return -1;
    }
}
</code></pre><p>递归：</p>
<pre><code>public class BinarySearch {
    public int search(int[] arr, int start, int end, int x) {
        if (arr == null || arr.length == 0) {
            return -1;
        }
        int low = start;
        int high = end;
        int middle = (low + high) / 2;
        while (low &lt;= high) {
            if (x == arr[middle]) {
                return middle;
            }
            if (x &lt; arr[middle]) {
                return search(arr, start, middle - 1, x);
            }
            if (x &gt; arr[middle]) {
                return search(arr, middle + 1, high, x);
            }
        }
        return -1;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：斐波那契数列]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</url>
      <content type="html"><![CDATA[<p>有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？</p>
<table>
<thead>
<tr>
<th>月份</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
<th>11</th>
<th>12  </th>
</tr>
</thead>
<tbody>
<tr>
<td>小兔子对数</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
<td>13</td>
<td>21</td>
<td>34</td>
<td>55</td>
</tr>
<tr>
<td>中兔子对数</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
<td>13</td>
<td>21</td>
<td>34  </td>
</tr>
<tr>
<td>大兔子对数</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
<td>13</td>
<td>21</td>
<td>34</td>
<td>55</td>
</tr>
<tr>
<td>总对数</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
<td>13</td>
<td>21</td>
<td>34</td>
<td>55</td>
<td>89</td>
<td>144</td>
</tr>
</tbody>
</table>
<pre><code>/*
 * @(#)Fibonacci.java     1.0 2015/3/23
 *
 */
package com.rolex.algorithm;

/**
 *
 * User: rolex
 * Date: 2015/3/23
 * version: 1.0
 */
public class Algo0323 {

    public static void main(String[] args) {
        Algo0323 f = new Algo0323();
        for (int i = 0; i &lt; 20; i++) {
            System.out.print(f.fibonacci(i) + &quot;,&quot;);
        }
    }

    public int fibonacci(int month) {
        if (month == 0) {
            return 0;
        } else if (month == 1 || month == 2) {
            return 1;
        } else {
            return fibonacci(month - 1) + fibonacci(month - 2);
        }
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[生产者消费者（BlockingQueue）]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%88BlockingQueue%EF%BC%89/</url>
      <content type="html"><![CDATA[<pre><code>public class ProducerAndConsumerInBlockingQueue {

    public static void main(String[] args) {
        BlockingQueue&lt;Integer&gt; queue = new ArrayBlockingQueue&lt;Integer&gt;(10);

         new Thread(new ProducerAndConsumerInBlockingQueue().new Producer(queue)).start();
         new Thread(new ProducerAndConsumerInBlockingQueue().new Consumer(queue)).start();

    }

    class Producer implements Runnable {

        BlockingQueue&lt;Integer&gt; queue;

         public Producer(BlockingQueue&lt;Integer&gt; queue) {
            this.queue = queue;
         }

        public void run() {
            while (true) {
                int i = new Random().nextInt();
                 try {
                    queue.put(i);
                     System.out.println(&quot;加入元素：&quot; + i + &quot;queue size=&quot; + queue.size());
                     Thread.sleep(1000);
                 } catch (InterruptedException e) {
                    e.printStackTrace();
                 }
            }
        }
    }

    class Consumer implements Runnable {

        BlockingQueue&lt;Integer&gt; queue;

         public Consumer(BlockingQueue&lt;Integer&gt; queue) {
            this.queue = queue;
         }

        public void run() {
            while (true) {
                try {
                    Integer i = queue.take();
                    System.out.println(&quot;取出元素：&quot; + i + &quot;queue size=&quot; + queue.size());
                    Thread.sleep(1000);
                 } catch (InterruptedException e) {
                    e.printStackTrace();
                 }
            }
        }
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：完数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%AE%8C%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>完数，所有的真因子（即除了自身以外的约数）的和（即因子函数），恰好等于它本身</p>
<pre><code>/*
 * @(#)PerfectNumber.java     1.0 2015/3/28
 *
 */
package com.rolex.algorithm;

import java.util.ArrayList;
import java.util.List;

/**
 * User: rolex
 * Date: 2015/3/28
 * version: 1.0
 */
public class Algo0328 {

    public static void main(String[] args) {
        Algo0328 p = new Algo0328();
        System.out.println(p.perfectNumber(1000));
    }

    public List&lt;Integer&gt; perfectNumber(int n){
        List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
        for(int i=1;i&lt;n;i++){
            if(i == sum(i)){
                list.add(i);
            }
        }
        return list;
    }

    public int sum(int n){
        int sum = 0;
        for(int i=1;i&lt;n;i++){
            if(n % i == 0){
                sum += i;
            }
        }
        return sum;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[添加sudo权限]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E6%B7%BB%E5%8A%A0sudo%E6%9D%83%E9%99%90/</url>
      <content type="html"><![CDATA[<blockquote>
<p>错误消息：xxx is not in the sudoers file</p>
</blockquote>
<pre><code>$su root
#visudo
</code></pre><p>root ALL=(ALL) ALL下添加一行</p>
<pre><code>xxx  ALL=(ALL) ALL
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：完全平方数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</url>
      <content type="html"><![CDATA[<pre><code>/*
 * @(#)Algo0402.java     1.0 2015/4/2
 *
 */
package com.rolex.algorithm;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

/**
 * 完全平方数
 *
 * User: rolex
 * Date: 2015/4/2
 * version: 1.0
 */
public class Algo0402 {

    public static void main(String[] args) {
        Algo0402 algo = new Algo0402();
        List list = algo.fullSquare(1000);
        System.out.println(list);

        System.out.println(algo.isInteger(&quot;-2&quot;));

        for(int i=0;i&lt;=1000;i++){
            if(list.contains(i+100)&amp;&amp;list.contains(i+168)){
                System.out.print(i + &quot;,&quot;);
            }
        }
    }

    public List&lt;Integer&gt; fullSquare(int n){
        List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
        for(int i=0;i&lt;=Math.sqrt(n);i++) {
            list.add(i*i);
        }
        return list;
    }

    public boolean isInteger(String s){
        Pattern p = Pattern.compile(&quot;^[+]?[\\d]*$&quot;);
        return p.matcher(s).matches();
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[排序算法]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>###排序算法复杂度</p>
<p>冒泡排序、直接插入排序、选择排序、交换排序时间复杂度为：O(n*n)<br>快速排序、归并排序、堆排序时间复杂度为：O(nlogn)<br>希尔排序的时间复杂度为：O(nlog2n)</p>
<p>###排序算法的稳定性</p>
<p>排序前2个相等的数其在序列的前后位置顺序和排序后它们两个的前后位置顺序相同。</p>
<p>选择排序、快速排序、希尔排序、堆排序不是稳定的排序算法。<br>冒泡排序、插入排序、归并排序和基数排序是稳定的排序算法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[拷贝vmware文件方式创建虚拟机]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E6%8B%B7%E8%B4%9Dvmware%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      <content type="html"><![CDATA[<h3 id="1-vmware打开文件"><a href="#1-vmware打开文件" class="headerlink" title="1. vmware打开文件"></a>1. vmware打开文件</h3><h3 id="2-查看ifconfig-a发现没有eth0网卡"><a href="#2-查看ifconfig-a发现没有eth0网卡" class="headerlink" title="2. 查看ifconfig -a发现没有eth0网卡"></a>2. 查看ifconfig -a发现没有eth0网卡</h3><p>（1）打开 /etc/udev/rules.d/70-persistent-net.rules文件，将eth1改成eth0。<br>（2）将/etc/sysconfig/network-scripts/ifcfg-eth0中的HWADDR改成当前虚拟机的mac地址。</p>
<h3 id="3-reboot"><a href="#3-reboot" class="headerlink" title="3. reboot"></a>3. reboot</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[字符界面安装vmwaretools]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E5%AD%97%E7%AC%A6%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85vmwaretools/</url>
      <content type="html"><![CDATA[<p>####1. 挂载cdrom<br>     cd /mnt<br>     mkdir cdrom<br>     mount /dev/cdrom /mnt/cdrom</p>
<p>####2. 拷贝vmwaretools<br>     cp /mnt/cdrom/VMwareTools-9.6.1-1378637.tar.gz /tmp<br>     tar -zxvf /tmp/VMwareTools-9.6.1-1378637.tar.gz<br>     cd /tmp/vmware-tools-distrib/<br>     ./vmware-install.pl</p>
<p>####3. 默认一路回车+yes</p>
<blockquote>
<p>少perl包</p>
</blockquote>
<pre><code>yum install perl gcc kernel-devel
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：阶乘]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E9%98%B6%E4%B9%98/</url>
      <content type="html"><![CDATA[<p>求1+2!+3!+…+20!的和</p>
<pre><code>/*
* @(#)Prog0408.java     1.0 2015/4/8
*
*/
package com.rolex.program;

/**
* 求1+2!+3!+...+20!的和
*
* User: rolex
* Date: 2015/4/8
* version: 1.0
*/
public class Prog0408 {

    public static void main(String[] args) {
          Prog0408 prog = new Prog0408();
          System.out.println(prog.print(20));
    }

     public int print(int n){
          int r=0;
          for(int i=1;i&lt;=n;i++){
               r += factorial(i);
          }
          return r;
     }

     public int factorial(int n){
          int r = 1;
          for(int i=1;i&lt;=n;i++){
               r = r * i;
          }
          return r;
     }


}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：字符串处理1]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%861/</url>
      <content type="html"><![CDATA[<p>一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。</p>
<pre><code>/*
* @(#)Prog0408.java     1.0 2015/4/9
*
*/
package com.rolex.program;

/**
* 一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。
*
* User: rolex
* Date: 2015/4/9
* version: 1.0
*/
public class Prog0409 {

    public static void main(String[] args) {
          Prog0409 prog = new Prog0409();
          System.out.println(prog.print(12331));
    }

     public boolean print(int n){
          String s = String.valueOf(n);
          if(s.length() != 5){
               return false;
          }else{
               if((s.charAt(0)==s.charAt(4)) &amp;&amp; (s.charAt(1) == s.charAt(3))){
                    return true;
               }else{
                    return false;
               }
          }
     }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：素数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E7%B4%A0%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>素数：除了1和它本身以外不再有其他的因数。</p>
<pre><code>/*
 * @(#)Prime.java     1.0 2015/3/24
 *
 */
package com.rolex.algorithm;

/**
 *
 *
 * User: rolex
 * Date: 2015/3/24
 * version: 1.0
 */
public class Algo0324 {

    public static void main(String[] args) {
        Algo0324 p = new Algo0324();
        long l1 = System.currentTimeMillis();
        p.print(10, 200);
        long l2 = System.currentTimeMillis();

        System.out.println(&quot;&quot;);
        long l3 = System.currentTimeMillis();
        p.print1(10, 200);
        long l4 = System.currentTimeMillis();
        System.out.println(&quot;&quot;);
        System.out.println(&quot;print用时&quot; + (l2 - l1) + &quot;s&quot;);
        System.out.println(&quot;print1用时&quot; + (l4 - l3) + &quot;s&quot;);
    }

    public void print(int start, int end) {
        int[] arr = new int[end - start + 1];
        int count = 0;
        for (int i = start; i &lt;= end; i++) {
            arr[count] = i;
            count++;
        }
        for (int i = arr[0]; i &lt;= arr[arr.length - 1]; i++) {
            int j;
            for (j = 2; j &lt;= Math.sqrt(i); j++) {
                if (i % j == 0) {
                    break;
                }
            }
            if (j &gt; Math.sqrt(i)) {
                System.out.print(i + &quot;,&quot;);
            }
        }
    }

    public void print1(int start, int end) {
        int[] arr = new int[(end - start + 1) / 2];
        int begin = 0;
        if (start % 2 == 0) {
            begin = start + 1;
        } else {
            begin = start;
        }
        for (int i = 0; i &lt; arr.length; i++) {
            arr[i] = begin + i * 2;
        }


        for (int i = 0; i &lt;= arr.length - 1; i++) {
            int j;
            if (arr[i] &gt; 0) {
                for (j = 2; j &lt;= Math.sqrt(arr[i]); j++) {
                    if (arr[i] % j == 0) {
                        setValue(arr, i);
                        break;
                    }
                }
                if (j &gt; Math.sqrt(arr[i])) {
                    if (arr[i] &gt; 0) {
                        System.out.print(arr[i] + &quot;,&quot;);
                    }
                }
            }
        }
    }

    private void setValue(int[] arr, int currentIndex) {
        int currentValue = arr[currentIndex];
        int count = 2;
        while ((currentIndex + count * currentValue) &lt; arr.length) {
            arr[currentIndex + count * currentValue] = 0;
            count = count + 2;
        }
        arr[currentIndex] = 0;
    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：猴子吃桃问题]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E7%8C%B4%E5%AD%90%E5%90%83%E6%A1%83%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少</p>
<pre><code>/*
* @(#)Prog0405.java     1.0 2015/4/5
*
*/
package com.rolex.program;

/**
*
* User: rolex
* Date: 2015/4/5
* version: 1.0
*/
public class Prog0405 {

    public static void main(String[] args) {
        Prog0405 prog = new Prog0405();
        System.out.println(prog.count(0));
    }

    public int count(int day){
        if(day == 9){
            return 1;
        }else{
            return (count(day+1) + 1) * 2;
        }
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：水仙花数]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>水仙花数是指一个 n 位数 ( n≥3 )，它的每个位上的数字的 n 次幂之和等于它本身。（例如：1^3 + 5^3+ 3^3 = 153）</p>
<pre><code>/*
 * @(#)NarcissisticNumber.java     1.0 2015/3/25
 *
 */
package com.rolex.algorithm;

/**
 *
 *
 * User: rolex
 * Date: 2015/3/25
 * version: 1.0
 */
public class Algo0325 {

    public static void main(String[] args) {
        for (int i = 100; i &lt; 1000; i++) {
            int h = i / 100;
            int t = (i - h * 100) / 10;
            int o = (i - h * 100 - t * 10);
            if ((Math.pow(h, 3) + Math.pow(t, 3) + Math.pow(o, 3)) == i) {
                System.out.print(i + &quot;, &quot;);
            }
        }
    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell:autobak.sh]]></title>
      <url>http://bysonline.github.io/2016/07/16/shell:%20autobak.sh/</url>
      <content type="html"><![CDATA[<pre><code>#!/bin/sh
# backup

DATE=$(date +%F)

# 判断目录是否存在并且有执行权限
if [ ! -x &quot;/test/backup&quot; ]
then
        mkdir /test/backup
fi

# 判断文件是否存在
if [ ! -f &quot;/test/backup/$1.error&quot; ]
then
        touch &quot;/test/backup/$1.error&quot;
fi

/bin/tar -cf /test/backup/$1.$DATE.tar $1 &gt; /dev/null 2&gt;&gt; /test/backup/$1.error
/bin/gzip /test/backup/$1.$DATE.tar

if [ $? -eq 0 ]
then
        echo &quot;$1 backup successfully&quot;
else
        echo &quot;ERROR: $1 $DATE backup&quot; &gt;&gt; /test/backup/$1.error
fi
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试：多线程]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E9%9D%A2%E8%AF%95%EF%BC%9A%E5%A4%9A%E7%BA%BF%E7%A8%8B1/</url>
      <content type="html"><![CDATA[<p>编写一个程序，开启3个线程，这3个线程的ID分别为A、B、C，每个线程将自己的ID在屏幕上打印10遍，要求输出结果必须按ABC的顺序显示；如：ABCABC….依次递推。</p>
<pre><code>public class JoinTest {

    class A extends Thread {
        public void run() {
            System.out.print(&quot;A&quot;);
        }
    }

    class B extends Thread {
        public void run() {
            System.out.print(&quot;B&quot;);
        }
    }

    class C extends Thread {
        public void run() {
            System.out.print(&quot;C&quot;);
        }
    }

    public void run(Thread thread) throws InterruptedException {
        Thread t = new Thread(thread);
        t.start();
        t.join();
    }

    public Thread get(int i) {
        Thread t = null;
        switch (i % 3) {
            case 0:
                t = new A();
                break;
            case 1:
                t = new B();
                break;
            case 2:
                t = new C();
                break;
        }
        return t;

    }

    public void print() throws InterruptedException {
        for (int i = 0; i &lt; 30; i++) {
            run(get(i));
        }
    }

    public static void main(String[] args) throws InterruptedException {
        new JoinTest().print();
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：APP启动APP]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9AAPP%E5%90%AF%E5%8A%A8APP/</url>
      <content type="html"><![CDATA[<pre><code>ApplicationManager.getApplicationManager().launch(&quot;AppName&quot;);
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[单机搭建elk+logback]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E5%8D%95%E6%9C%BA%E6%90%AD%E5%BB%BAelk+logback/</url>
      <content type="html"><![CDATA[<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><p>下载elasticsearch、logstash、kibana</p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><h4 id="2-1-elasticsearch"><a href="#2-1-elasticsearch" class="headerlink" title="2.1 elasticsearch"></a>2.1 elasticsearch</h4><p>解压<br><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxf</span> <span class="selector-tag">elasticsearch-2</span><span class="selector-class">.3</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure></p>
<p><strong><em>elasticsearch-2.3.1/config/elasticsearch.yml</em></strong><br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">cluster<span class="selector-class">.name</span>: es</div><div class="line">node<span class="selector-class">.name</span>: node1</div><div class="line">network<span class="selector-class">.host</span>: node1</div><div class="line">discovery<span class="selector-class">.zen</span><span class="selector-class">.ping</span><span class="selector-class">.unicast</span><span class="selector-class">.hosts</span>: [<span class="string">"node1"</span>]</div></pre></td></tr></table></figure></p>
<p>启动<br><figure class="highlight"><table><tr><td class="code"><pre><div class="line">bin/elasticsearch</div></pre></td></tr></table></figure></p>
<h4 id="2-2-logstash"><a href="#2-2-logstash" class="headerlink" title="2.2 logstash"></a>2.2 logstash</h4><p>解压<br><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">logstash-2</span><span class="selector-class">.3</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure></p>
<p>新建配置文件<br><figure class="highlight dos"><table><tr><td class="code"><pre><div class="line"><span class="built_in">mkdir</span> etc</div><div class="line"><span class="built_in">cd</span> etc</div></pre></td></tr></table></figure></p>
<p><strong><em>my.conf</em></strong><br><figure class="highlight puppet"><table><tr><td class="code"><pre><div class="line"><span class="keyword">input</span> &#123;</div><div class="line"></div><div class="line">    stdin &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">redis</span> &#123;</div><div class="line">        <span class="attr">batch_count</span> =&gt; <span class="number">1</span></div><div class="line">        <span class="attr">data_type</span> =&gt; <span class="string">"list"</span></div><div class="line">        <span class="attr">key</span> =&gt; <span class="string">"logstash"</span></div><div class="line">        <span class="attr">host</span> =&gt; <span class="string">"127.0.0.1"</span></div><div class="line">        <span class="attr">port</span> =&gt; <span class="number">6379</span></div><div class="line">        <span class="attr">db</span> =&gt; <span class="number">0</span></div><div class="line">        <span class="attr">threads</span> =&gt; <span class="number">1</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">#    <span class="keyword">tcp</span> &#123;</div><div class="line"><span class="comment">#        host  =&gt; "127.0.0.1"</span></div><div class="line"><span class="comment">#        port  =&gt; 5678</span></div><div class="line"><span class="comment">#        codec =&gt; "line"</span></div><div class="line"><span class="comment">#    &#125;</span></div><div class="line"></div><div class="line">    log4j &#123;</div><div class="line">        <span class="attr">mode</span> =&gt; <span class="string">"server"</span></div><div class="line">        <span class="attr">host</span>  =&gt; <span class="string">"127.0.0.1"</span></div><div class="line">        <span class="attr">port</span> =&gt; <span class="number">56789</span></div><div class="line">        <span class="attr">type</span> =&gt; <span class="string">"log4j"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">output</span> &#123;</div><div class="line">    stdout &#123;</div><div class="line">        <span class="attr">codec</span> =&gt; rubydebug</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">elasticsearch</span> &#123;</div><div class="line">        <span class="attr">hosts</span> =&gt; [<span class="string">"node1:9200"</span>]</div><div class="line">        <span class="attr">index</span> =&gt; <span class="string">"logstash"</span></div><div class="line">        <span class="attr">document_type</span> =&gt; <span class="string">"log"</span></div><div class="line">        <span class="attr">workers</span> =&gt; <span class="number">1</span></div><div class="line">        <span class="attr">flush_size</span> =&gt; <span class="number">20000</span></div><div class="line">        <span class="attr">idle_flush_time</span> =&gt; <span class="number">10</span></div><div class="line">        <span class="attr">template_overwrite</span> =&gt; <span class="keyword">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>启动<br><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">bin/logstash agent -f ../etc/<span class="keyword">my</span>.conf</div></pre></td></tr></table></figure></p>
<h4 id="2-3-kibana"><a href="#2-3-kibana" class="headerlink" title="2.3 kibana"></a>2.3 kibana</h4><p>解压<br><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxf</span> <span class="selector-tag">kibana-4</span><span class="selector-class">.5</span><span class="selector-class">.1-linux-x64</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure></p>
<p><strong><em>config/kibana.yml</em></strong><br><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">elasticsearch<span class="selector-class">.url</span>: <span class="string">"http://node1:9200"</span></div></pre></td></tr></table></figure></p>
<p>启动<br><figure class="highlight"><table><tr><td class="code"><pre><div class="line">bin/kibana</div></pre></td></tr></table></figure></p>
<h3 id="3-log"><a href="#3-log" class="headerlink" title="3.log"></a>3.log</h3><h4 id="3-1-log4j"><a href="#3-1-log4j" class="headerlink" title="3.1 log4j"></a>3.1 log4j</h4><p>logstash有log4j的input插件，所以使用log4j可以很容易将日志收集到logstash</p>
<p><strong><em>Log4jTest.java</em></strong><br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log4jTest</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = Logger.getLogger(Log4jTest.class);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"></div><div class="line">        logger.debug(<span class="string">"hello logstash, this is a message from log4j"</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong><em>log4j.properties</em></strong><br><figure class="highlight mel"><table><tr><td class="code"><pre><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.stdout.<span class="keyword">layout</span>=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.<span class="keyword">layout</span>.ConversionPattern=%d %p %t %c : %m%n</div><div class="line"></div><div class="line">log4j.appender.<span class="keyword">file</span>=org.apache.log4j.RollingFileAppender</div><div class="line">log4j.appender.<span class="keyword">file</span>.<span class="keyword">file</span>=../<span class="keyword">log</span>/test.<span class="keyword">log</span></div><div class="line">log4j.appender.<span class="keyword">file</span>.maxFileSize=<span class="number">1024</span></div><div class="line">log4j.appender.<span class="keyword">file</span>.<span class="keyword">layout</span>=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.<span class="keyword">file</span>.<span class="keyword">layout</span>.ConversionPattern=%d %p %t %c : %m%n</div><div class="line"></div><div class="line"># logstash配置</div><div class="line">log4j.appender.logstash=org.apache.log4j.net.SocketAppender</div><div class="line">log4j.appender.logstash.port=<span class="number">56789</span></div><div class="line">log4j.appender.logstash.remoteHost=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></div><div class="line"></div><div class="line">log4j.rootLogger=debug,stdout,<span class="keyword">file</span>,logstash</div></pre></td></tr></table></figure></p>
<p>运行程序可在kibana中看到日志</p>
<h4 id="3-2-logback"><a href="#3-2-logback" class="headerlink" title="3.2 logback"></a>3.2 logback</h4><p>logstash没有logback的插件，所以可以使用tcp收集日志（效果不好，官方也不建议在生产环境使用tcp方式）</p>
<p><strong><em>logback.xml</em></strong><br><figure class="highlight dust"><table><tr><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- encoder 默认配置为PatternLayoutEncoder --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d<span class="template-variable">&#123;HH:mm:ss.SSS&#125;</span><span class="xml"> [%thread] %-5level %logger</span><span class="template-variable">&#123;36&#125;</span><span class="xml"> - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"SOCKET"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.net.SocketAppender"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">remoteHost</span>&gt;</span>127.0.0.1<span class="tag">&lt;/<span class="name">remoteHost</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>5678<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">reconnectionDelay</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">reconnectionDelay</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">includeCallerData</span>&gt;</span>true<span class="tag">&lt;/<span class="name">includeCallerData</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"SOCKET"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="3-3-logback-redis"><a href="#3-3-logback-redis" class="headerlink" title="3.3 logback + redis"></a>3.3 logback + redis</h4><p>使用redis作为消息队列</p>
<h5 id="3-3-1-安装redis"><a href="#3-3-1-安装redis" class="headerlink" title="3.3.1 安装redis"></a>3.3.1 安装redis</h5><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">tar -zxf redis<span class="number">-3.2</span><span class="number">.0</span>.tar.gz</div><div class="line">cd redis<span class="number">-3.2</span><span class="number">.0</span>/</div><div class="line">sudo make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<blockquote>
<p>注：如果logstash和redis不在同一台机器，需要修改<strong><em>redis.conf</em></strong><br><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-id">#bind</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></div><div class="line"><span class="selector-tag">protected-mode</span> <span class="selector-tag">no</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>#####启动<br><figure class="highlight dts"><table><tr><td class="code"><pre><div class="line"><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span>redis-server</div></pre></td></tr></table></figure></p>
<p><strong><em>pom.xml</em></strong><br><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cwbase<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-redis-appender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong><em>LogbackTest.java</em></strong><br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogbackTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(LogbackTest.class);</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        logger.info(<span class="string">"this log come from slf4j."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong><em>logback.xml</em></strong><br><figure class="highlight dust"><table><tr><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- encoder 默认配置为PatternLayoutEncoder --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d<span class="template-variable">&#123;HH:mm:ss.SSS&#125;</span><span class="xml"> [%thread] %-5level %logger</span><span class="template-variable">&#123;36&#125;</span><span class="xml"> - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"LOGSTASH"</span> <span class="attr">class</span>=<span class="string">"com.cwbase.logback.RedisAppender"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>mySource<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">sourcePath</span>&gt;</span>mySourcePath<span class="tag">&lt;/<span class="name">sourcePath</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>myApplication<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tags</span>&gt;</span>production<span class="tag">&lt;/<span class="name">tags</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">host</span>&gt;</span>127.0.0.1<span class="tag">&lt;/<span class="name">host</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>6379<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>logstash<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"LOGSTASH"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>在看elk文档的时候了解到elk的流程为：</p>
</blockquote>
<p>在使用的时候，可将变为如下结构：</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：xml解析]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9Axml%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<pre><code>public class XmlParser {
      /**
       * 递归方法，用于将每一个节点元素遍历出来放入到hashtable（注：bb的api基于JDK1.3，不支持hashmap，泛型等）中
       *
       * @param node
       *            document中的节点
       * @param depth
       *            节点的深度，用于做递归
       */
      public static void fetchNode(Node node, int depth, Hashtable ht) {
            /*
             * 判断是否为一个node，如过是一个节点，找到所有的子节点和子节点的数量。
             * 如果一个节点是一个文本节点，则将其放入到hashtable中，如果是一个元素节点， 则将该节点放入hashtable中，
             * 并对其子元素进行递归，直到遍历到最后一个文本 元素，递归结束。
             */
            if (node.getNodeType() == Node.ELEMENT_NODE) {
                  // 如果是一个节点，找到所有的子节点
                  NodeList childNodes = node.getChildNodes();
                  int numChildren = childNodes.getLength();

                  Node firstChild = childNodes.item(0);
                  if (numChildren == 1 &amp;&amp; firstChild.getNodeType() == Node.TEXT_NODE) {
                        ht.put(node.getNodeName(),
                                    firstChild.getNodeValue() == null ? &quot;&quot; : firstChild
                                                .getNodeValue());
                  } else {
                        ht.put(node.getNodeName(),
                                    firstChild.getNodeValue() == null ? &quot;&quot; : firstChild
                                                .getNodeValue());
                        for (int i = 0; i &lt; numChildren; ++i) {
                              fetchNode(childNodes.item(i), depth + 1, ht);
                        }
                  }
            } else {
                  // 如果不是node，那就是一个value
                  String nodeValue = node.getNodeValue();
                  // 如果不value不是空，则放入hashtable中
                  if (nodeValue.trim().length() != 0) {
                        ht.put(node.getNodeName(), node.getNodeValue() == null ? &quot;&quot;
                                    : node.getNodeValue());
                  }
            }
      }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：九宫格]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E4%B9%9D%E5%AE%AB%E6%A0%BC/</url>
      <content type="html"><![CDATA[<pre><code>/**
 *
 * @author Rolex
 * @date 2011-9-21
 */
public class HomeScreen extends MainScreen{

      public HomeScreen() {
        HorizontalBitmapFieldSet set1 = new HorizontalBitmapFieldSet();
        BitmapBackgroundButtonField bitmap1 = new BitmapBackgroundButtonField(&quot;登录&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_login.png&quot;));
        bitmap1.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    pushScreen(new com.unionpay.mobilepay.mpos.profile.TabScreen(null));

              }
        });
        BitmapBackgroundButtonField bitmap2 = new BitmapBackgroundButtonField(&quot;注册&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_register.png&quot;));
        bitmap2.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    pushScreen(new com.unionpay.mobilepay.mpos.profile.TabScreen(null));

              }
        });
        BitmapBackgroundButtonField bitmap3 = new BitmapBackgroundButtonField(&quot;帮助&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_help.png&quot;));
        bitmap3.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    Dialog.alert(&quot;help&quot;);

              }
        });
        set1.add(bitmap1);
        set1.add(bitmap2);
        set1.add(bitmap3);
        HorizontalBitmapFieldSet set2 = new HorizontalBitmapFieldSet();
        BitmapBackgroundButtonField bitmap4 = new BitmapBackgroundButtonField(&quot;交易管理&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_transaction.png&quot;));
        bitmap4.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    pushScreen(new TradePay());

              }
        });
        BitmapBackgroundButtonField bitmap5 = new BitmapBackgroundButtonField(&quot;银行卡管理&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_bankcard.png&quot;));
        bitmap5.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    pushScreen(new CardManager());

              }
        });
        BitmapBackgroundButtonField bitmap6 = new BitmapBackgroundButtonField(&quot;用户管理&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_profile.png&quot;));
        bitmap6.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    pushScreen(new TabScreenIn(null));

              }
        });
        set2.add(bitmap4);
        set2.add(bitmap5);
        set2.add(bitmap6);
        HorizontalBitmapFieldSet set3 = new HorizontalBitmapFieldSet();
        BitmapBackgroundButtonField bitmap7 = new BitmapBackgroundButtonField(&quot;关于&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_about.png&quot;));
        bitmap7.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    Dialog.alert(&quot;login&quot;);

              }
        });
        BitmapBackgroundButtonField bitmap8 = new BitmapBackgroundButtonField(&quot;设置&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_settings.png&quot;));
        bitmap8.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    Dialog.alert(&quot;reg&quot;);

              }
        });
        BitmapBackgroundButtonField bitmap9 = new BitmapBackgroundButtonField(&quot;更多&quot;,Field.FOCUSABLE,Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon.png&quot;),Bitmap.getBitmapResource(&quot;com/unionpay/mobilepay/mpos/image/home/icon_more.png&quot;));
        bitmap9.setChangeListener(new FieldChangeListener() {

              public void fieldChanged(Field field, int context) {
                    Dialog.alert(&quot;help&quot;);

              }
        });
        set3.add(bitmap7);
        set3.add(bitmap8);
        set3.add(bitmap9);
        add(set1);
        add(set2);
        add(set3);

      }

      public static void pushScreen(MainScreen screen){
        UiApplication.getUiApplication().pushScreen(screen);
      }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：向服务器发请求]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E8%AF%B7%E6%B1%82/</url>
      <content type="html"><![CDATA[<pre><code>public String httpFetch(String xml,String url) {
      String content = &quot;&quot;;
      ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
      HttpConnection hconn = null;
      OutputStream out = null;




      String bodystr = xml.toString();
      try {
          hconn = (HttpConnection) Connector.open(url);
          //UrlRequestedEvent
          hconn.setRequestMethod(HttpConnection.POST);
          hconn.setRequestProperty(HttpProtocolConstants.HEADER_USER_AGENT, &quot;BlackBerry/5.0.0&quot;);
          hconn.setRequestProperty(HttpProtocolConstants.HEADER_CONTENT_LENGTH, String.valueOf(bodystr.getBytes().length));
          hconn.setRequestProperty(HttpProtocolConstants.HEADER_CONTENT_TYPE,&quot;application/x-www-form-urlencoded&quot;);
          out = hconn.openOutputStream();
          out.write(bodystr.getBytes());
          out.flush();

            int status = hconn.getResponseCode();

            if (status == HttpConnection.HTTP_OK) {
                  // Is this html?
                  String contentType = hconn.getHeaderField(HEADER_CONTENTTYPE);
                  boolean htmlContent = (contentType != null &amp;&amp; contentType.startsWith(CONTENTTYPE_TEXTHTML));

                  InputStream input = hconn.openInputStream();

                  int len = 0;
                  int size = 0;
                  byte[] data = new byte[256];
                  StringBuffer raw = new StringBuffer();

                  while (-1 != (len = input.read(data))) {
                        raw.append(new String(data, 0, len));
                        size += len;
                  }

                  raw.insert(0, &quot;bytes received]\n&quot;);
                  raw.insert(0, size);
                  raw.insert(0, &apos;[&apos;);
                  content = raw.toString();

                  if (htmlContent) {
                        content = prepareData(raw.toString());
                  }
                  input.close();
            } else {
                  content = &quot;response code = &quot; + status;
            }
            hconn.close();
      } catch (IOException e) {
            content = e.toString();
      }
      _fetchStarted = false;

      return content;
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blackberry：圆角矩形布局]]></title>
      <url>http://bysonline.github.io/2016/07/16/blackberry%EF%BC%9A%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<pre><code>/**
 * 圆角的布局，内部元素遵守垂直布局的规则，可设置标题和图片,传空则不设置
 *
 * @author Rolex
 * @date 2011-9-23
 */
public class RoundRectFieldManager extends VerticalFieldManager {
      private static final int CORNER_RADIUS = 18;
      private static final int PANDDING = 5;
      private static final int MARGIN = 10;
      public RoundRectFieldManager(Bitmap bitmap, String title) {
            super(Manager.FIELD_HCENTER);
            // 横向放四个图片按钮
//          setPadding(0, 5, 0, 0); // OS 5.0未公开的API
            setMargin(MARGIN, MARGIN, MARGIN, MARGIN); // OS 5.0未公开的API
            if(title != null &amp;&amp; !&quot;&quot;.equals(title)){
                  HorizontalFieldManager h = new HorizontalFieldManager(){
                        protected void paintBackground(Graphics g) {

                              int oldColor = g.getColor();
                              try {
                                    g.setColor(Color.RED);
                                    g.fillRoundRect(0, 0, Display.getWidth() - MARGIN * 2, getHeight() + (PANDDING *2 + CORNER_RADIUS), CORNER_RADIUS, CORNER_RADIUS);// 画实心的圆角的矩形
                                    g.setColor(Color.WHITE);
                                    g.drawRoundRect(0, 0, Display.getWidth() - MARGIN * 2, getHeight() + (PANDDING *2 + CORNER_RADIUS), CORNER_RADIUS, CORNER_RADIUS); // 换个颜色，画圆角的边框
                              } finally {
                                    g.setColor(oldColor);
                              }
                        }
                  };
                  h.setPadding(PANDDING, PANDDING, PANDDING, PANDDING); // OS 5.0未公开的API
                  h.add(new BitmapField(bitmap));
                  h.add(new RichTextField(title,NON_FOCUSABLE ){
                        protected void layout(int width, int height) {
                              width = Display.getWidth()- MARGIN * 2;
                              super.layout(width, height);
                        }
                  });
                  add(h);
            }
      }

      protected void paintBackground(Graphics g) {
            int oldColor = g.getColor();
            try {
                  g.setColor(Color.WHITE);
                  g.fillRoundRect(0, 0, getWidth(), getHeight(), 20, 20);// 画实心的圆角的矩形
                  g.setColor(Color.WHITE);
                  g.drawRoundRect(0, 0, getWidth(), getHeight(), 20, 20); // 换个颜色，画圆角的边框
            } finally {
                  g.setColor(oldColor);
            }
      }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu 16.04 安装oracle instant client]]></title>
      <url>http://bysonline.github.io/2016/07/16/ubuntu%2016.04%20%E5%AE%89%E8%A3%85oracle%20instant%20client/</url>
      <content type="html"><![CDATA[<h3 id="1-安装alien"><a href="#1-安装alien" class="headerlink" title="1. 安装alien"></a>1. 安装alien</h3><figure class="highlight actionscript"><table><tr><td class="code"><pre><div class="line">sudo apt-<span class="keyword">get</span> install alien</div></pre></td></tr></table></figure>
<h3 id="2-下载oracle-instant-client"><a href="#2-下载oracle-instant-client" class="headerlink" title="2. 下载oracle instant client"></a>2. 下载oracle instant client</h3><p>oracle-instantclient12.1-basic-12.1.0.2.0-1.x86_64.rpm<br>oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm<br>oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm</p>
<h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> alien -i <span class="regexp">*.rpm</span></div></pre></td></tr></table></figure>
<h3 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4. 配置环境变量"></a>4. 配置环境变量</h3><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line"><span class="keyword">echo</span> <span class="string">'export ORACLE_HOME=/usr/lib/oracle/12.1/client64'</span> &gt; /etc/<span class="keyword">profile</span>.d/oracle.<span class="keyword">sh</span></div><div class="line"><span class="keyword">echo</span> <span class="string">'export ORACLE_BASE=/usr/lib/oracle/12.1'</span> &gt;&gt; /etc/<span class="keyword">profile</span>.d/oracle.<span class="keyword">sh</span></div><div class="line"><span class="keyword">echo</span> <span class="string">'export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH'</span> &gt;&gt; /etc/<span class="keyword">profile</span>.d/oracle.<span class="keyword">sh</span></div><div class="line"><span class="keyword">echo</span> <span class="string">'export NLS_LANG=AMERICAN_AMERICA.AL32UTF8'</span> &gt;&gt; /etc/<span class="keyword">profile</span>.d/oracle.<span class="keyword">sh</span></div><div class="line"><span class="keyword">echo</span> <span class="string">'export PATH=$ORACLE_HOME/bin:$PATH'</span> &gt;&gt; /etc/<span class="keyword">profile</span>.d/oracle.<span class="keyword">sh</span></div><div class="line"><span class="keyword">source</span> /etc/<span class="keyword">profile</span></div></pre></td></tr></table></figure>
<h3 id="5-解决上下左右键乱码"><a href="#5-解决上下左右键乱码" class="headerlink" title="5. 解决上下左右键乱码"></a>5. 解决上下左右键乱码</h3><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install rlwrap</div><div class="line"><span class="keyword">echo</span> <span class="string">"alias sqlplus='rlwrap sqlplus'"</span> &gt;&gt; ~/.bashrc</div><div class="line"><span class="keyword">source</span> /etc/<span class="keyword">profile</span></div></pre></td></tr></table></figure>
<h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><div class="line">sqlplus username<span class="regexp">/passwd@/</span><span class="regexp">/hostname:post/</span>sid</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java URL下载zip和解压缩]]></title>
      <url>http://bysonline.github.io/2016/07/16/Java%20URL%20%E4%B8%8B%E8%BD%BD%20zip%20%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/</url>
      <content type="html"><![CDATA[<pre><code>import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class CilentTest {

     public static void main(String[] args) throws Exception {
          String urlString = &quot;http://115.182.16.65:9090/ONOFFIQWS/download/1485356343/151030183903530378126.zip&quot;;
          String path = &quot;D:\\test.zip&quot;;
          download(urlString, path);

          unzip(path);

          String savePath = path.substring(0, path.lastIndexOf(File.separator))
                    + File.separator + &quot;temp&quot;;
          read(savePath);

          removeDir(new File(path));
          removeDir(new File(savePath));

     }

     /**
     * 下载文件
     *
     * @param urlString
     *            文件地址
     * @param path
     *            本地存放路径
     * @throws Exception
     */
     public static final void download(String urlString, String path)
               throws Exception {
          InputStream in = null;
          OutputStream out = null;
          int connectTimeout = 30 * 1000; // 连接超时:30s
          int readTimeout = 1 * 1000 * 1000; // IO超时:1min
          byte[] buffer = new byte[8 * 1024]; // IO缓冲区:8KB

          URL url = new URL(urlString);
          File file = new File(path);
          URLConnection conn = url.openConnection();

          conn.setConnectTimeout(connectTimeout);
          conn.setReadTimeout(readTimeout);
          conn.connect();

          in = conn.getInputStream();
          out = new FileOutputStream(file);

          while (true) {
               int bytes = in.read(buffer);
               if (bytes == -1) {
                    break;
               }
               out.write(buffer, 0, bytes);

          }

          in.close();
          out.close();
     }

     /**
     * 解压缩zip
     *
     * @param path
     *            文件路径
     */
     public static void unzip(String path) {
          final int buffer = 2048;
          int count = -1;
          int index = -1;

          // 解压缩路径 .\temp
          String savePath = path.substring(0, path.lastIndexOf(File.separator))
                    + File.separator + &quot;temp&quot; + File.separator;

          File temPath = new File(savePath);
          // 创建temp文件夹
          if (!temPath.exists()) {
               temPath.mkdirs();
          }

          try {
               BufferedOutputStream bos = null;
               ZipEntry entry = null;
               FileInputStream fis = new FileInputStream(path);
               ZipInputStream zis = new ZipInputStream(
                         new BufferedInputStream(fis));

               while ((entry = zis.getNextEntry()) != null) {

                    String tempFile = entry.getName();

                    index = tempFile.lastIndexOf(&quot;/&quot;);
                    if (index &gt; -1) {
                         tempFile = tempFile.substring(index + 1);
                    }
                    tempFile = savePath + tempFile;
                    File f = new File(tempFile);
                    f.createNewFile();

                    FileOutputStream fos = new FileOutputStream(f);
                    bos = new BufferedOutputStream(fos, buffer);

                    byte data[] = new byte[buffer];
                    while ((count = zis.read(data, 0, buffer)) != -1) {
                         bos.write(data, 0, count);
                    }

                    bos.flush();
                    bos.close();
               }

               zis.close();

          } catch (Exception e) {
               e.printStackTrace();
          }
     }

     /**
     * 读目录下所有文件内容
     *
     * @param path
     *            文件夹
     * @throws Exception
     */
     public static final void read(String path) throws Exception {
          File dir = new File(path);
          if (!dir.exists()) {
               throw new RuntimeException(&quot;doss not exist&quot;);
          }
          if (dir.isDirectory()) {
               File[] files = dir.listFiles();
               for (File f : files) {
                    StringBuffer sb = new StringBuffer();
                    String filePath = path + File.separator + f.getName();
                    BufferedReader br = new BufferedReader(new FileReader(filePath));
                    String s = null;
                    while ((s = br.readLine()) != null) {
                         sb.append(s);
                    }
                    System.out.println(sb.toString());
                    br.close();
               }
          } else {
               throw new RuntimeException(&quot;dose not a directory&quot;);
          }
     }

     /**
     * 递归删除文件夹
     *
     * @param path
     *            文件夹
     */
     public static final void removeDir(File path) {
          if (!path.exists()) {
               throw new RuntimeException(&quot;doss not exist&quot;);
          }
          if (path.isFile()) {
               path.delete();
               return;
          }
          File[] files = path.listFiles();
          for (int i = 0; i &lt; files.length; i++) {
               removeDir(files[i]);
          }
          path.delete();
     }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JAXB：对象和xml转换]]></title>
      <url>http://bysonline.github.io/2016/07/16/JAXB%EF%BC%9A%E5%AF%B9%E8%B1%A1%E5%92%8Cxml%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p>###1. 使用@XmlRootElement和@XmlElement标示根节点对象和属性节点对象</p>
<pre><code>@XmlRootElement(name = &quot;DATA&quot;)
public class Data {

    List&lt;DataItem&gt; dataItems;

    public Data() {
    }

    @XmlElement(name = &quot;ITEM&quot;)
    public List&lt;DataItem&gt; getDataItems() {
        return dataItems;
    }

    public void setDataItems(List&lt;DataItem&gt; dataItems) {
        this.dataItems = dataItems;
    }
}
</code></pre><p>###2. xml2obj</p>
<pre><code>public static Data fromXml(String xml){
    Data data = null;
    try {
        JAXBContext context = JAXBContext.newInstance(Data.class);
        Unmarshaller unmarshaller = context.createUnmarshaller();
        data = (Data) unmarshaller.unmarshal(new StringReader(xml));
    } catch (JAXBException e) {
        e.printStackTrace();
    }
    return data;
}
</code></pre><p>###3. obj2xml</p>
<pre><code>public static void toXml(String path) {
    try {
        JAXBContext context = JAXBContext.newInstance(Data.class);
        Marshaller marshaller = context.createMarshaller();
        marshaller.marshal(fromXml(xml), new File(path));
    } catch (JAXBException e) {
        e.printStackTrace();
    }
}
</code></pre><p>###4. 设置xml节点的顺序</p>
<pre><code>@XmlType(propOrder = {&quot;orderList&quot;, &quot;basic&quot;, &quot;shareholder&quot;, &quot;person&quot;})
public class DataItem {

    OrderList orderList;
    Basic basic;
    Shareholder shareholder;
    Person person;

     //getter and setter
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[多线程下载]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD/</url>
      <content type="html"><![CDATA[<pre><code>import java.io.InputStream;
import java.io.RandomAccessFile;
import java.net.URL;
import java.net.URLConnection;

public class MutiThreadDownloadTest {

     /**
     * @param args
     */
     public static void main(String[] args) {
          String urlString = &quot;http://www.7-zip.org/a/7z920-x64.msi&quot;;
          String path = &quot;D:\\7z.msi&quot;;
          try {
               new MutiThreadDownloadTest().new MutiThreadDownload(urlString, path, 3).download();
          } catch (Exception e) {
               e.printStackTrace();
          }
     }

     class MutiThreadDownload {
          private String urlString;// 下载路径
          private String path;// 文件存储路径
          private int threadNum;// 线程数量
          private int fileSize;// 文件大小

          public MutiThreadDownload(String urlString, String path, int threadNum) {
               super();
               this.urlString = urlString;
               this.path = path;
               this.threadNum = threadNum;
          }

          public void download() throws Exception {
               URL url = new URL(urlString);
               URLConnection conn = url.openConnection();
               fileSize = conn.getContentLength();// 获取文件大小
               RandomAccessFile destFile = new RandomAccessFile(path, &quot;rw&quot;);// 创建空文件
               // 设置下载文件相同大小
               destFile.setLength(fileSize);
               destFile.close();
               // 计算每个线程的下载大小
               int sizePerThread = fileSize / threadNum;
               // 开启线程
               for (int i = 0; i &lt; threadNum; i++) {
                    // 计算每条线程的下载的开始位置
                    int startPos = i * sizePerThread;// 开始位置
                    int endPos = sizePerThread * (i + 1) - 1;// 结束位置

                    new DownloadThread(startPos,endPos,urlString,path).start();
               }
               destFile.close();
               conn = null;
          }

     }

     class DownloadThread extends Thread {
          // 定义下载的起始点
          private long startPos;
          // 定义下载的结束点
          private long endPos;
          private String urlString;
          private String path;

          // 构造器，传入输入流，输出流和下载起始点、结束点
          public DownloadThread(long startPos, long endPos, String urlString, String path) {
               // 输出该线程负责下载的字节位置
               System.out.println(&quot;startPos=&quot;+startPos + &quot; - endPos:&quot; + endPos);
               this.startPos = startPos;
               this.endPos = endPos;
               this.urlString = urlString;
               this.path = path;
          }

          public void run() {
               URL url = null;
               URLConnection conn = null;
               InputStream is = null;
               RandomAccessFile out = null;
               try {
                    url = new URL(urlString);
                    conn = url.openConnection();
                    is = conn.getInputStream();
                    byte[] buffer = new byte[1024];
                    int hasRead = 0;
                    // 读取网络数据，并写入本地文件
                    int length = 0;
                    out = new RandomAccessFile(path, &quot;rw&quot;);
                    is.skip(this.startPos);//流从什么位置读
                    out.seek(startPos);//文件从什么位置写

                    // 读取网络数据，并写入本地文件
                    while (length &lt; endPos - startPos
                              &amp;&amp; (hasRead = is.read(buffer)) &gt; 0) {
                         out.write(buffer, 0, hasRead);
                         // 累计该线程下载的总大小
                         length += hasRead;
                    }
                    System.out.println(&quot;线程:&quot; + Thread.currentThread().getId() + &quot;下载完成!&quot;);
               } catch (Exception ex) {
                    ex.printStackTrace();
               }
               // 使用finally块来关闭当前线程的输入流、输出流
               finally {
                    try {
                         if (out != null) {
                              out.close();
                         }
                         if (is != null) {
                              is.close();
                         }
                         if (conn != null){
                              conn = null;
                         }
                    } catch (Exception ex) {
                         ex.printStackTrace();
                    }
               }
          }
     }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[idea 使用 maven 每次更新 pom 不重置 LanguageLevel 和 JavaCompiler 的办法]]></title>
      <url>http://bysonline.github.io/2016/07/16/idea%20%E4%BD%BF%E7%94%A8%20maven%20%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0%20pom%20%E4%B8%8D%E9%87%8D%E7%BD%AE%20LanguageLevel%20%E5%92%8C%20JavaCompiler%20%E7%9A%84%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>在pom.xml中加入</p>
<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.3.2&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.7&lt;/source&gt;
                &lt;target&gt;1.7&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[idea内存溢出解决办法]]></title>
      <url>http://bysonline.github.io/2016/07/16/idea%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>###1. 使用idea64.exe启动</p>
<p>###2. 修改bin目录下的idea.exe.vmoptions文件<br>    -Xms128m<br>    -Xmx1024m</p>
<p>###3. 添加运行VM参数<br>     -server -XX:PermSize=512M -XX:MaxPermSize=1024m</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[http上传文件原理]]></title>
      <url>http://bysonline.github.io/2016/07/16/http%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<ol>
<li>通过request.getInputStream()来得到上传的整个post实体的流</li>
<li>用 request.getHeader(“Content-Type”)来取得实体内容的分界字符串</li>
<li>然后根据http协议，分析取得的上传的实体流</li>
<li>把文件部分给筛出来在服务器端保存到磁盘文件中</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hive 0.9.0 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/hive%200.9.0%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 解压缩<br>    [rolex@node2 hive]$ pwd<br>/usr/hive<br>[rolex@node2 hive]$ tar -zxf hive-0.9.0.tar.gz</p>
<p>###2. 配置环境变量<br>    [rolex@node2 hive]$ sudo echo “HIVE_HOME=/usr/hive/hive-0.9.0”&gt;/etc/profile.d/hive.sh<br>[rolex@node2 hive]$ sudo echo ‘PATH=$PATH:$HIVE_HOME/bin’&gt;&gt;/etc/profile.d/hive.sh<br>    [rolex@node2 hive]$ sudo echo “export HIVE_HOME PATH”&gt;&gt;/etc/profile.d/hive.sh<br>[rolex@node2 hive]$ . /etc/profile</p>
<p>###3. 配置文件<br>    [rolex@node2 conf]$ pwd<br>/usr/hive/hive-0.9.0/conf<br>[rolex@node2 conf]$ cp hive-default.xml.template hive-default.xml<br>    [rolex@node2 conf]$ cp hive-env.sh.template hive-env.sh<br>[rolex@node2 conf]$ cp hive-log4j.properties.template hive-log4j.properties<br>    [rolex@node2 conf]$ cp hive-exec-log4j.properties.template hive-exec-log4j.properties<br>[rolex@node2 conf]$ cp hive-default.xml.template hive-site.xml</p>
<p>###4. 启动<br>    [rolex@node2 bin]$ pwd<br>/usr/hive/hive-0.9.0/bin<br>[rolex@node2 bin]$ ./hive<br>    Logging initialized using configuration in file:/usr/hive/hive-0.9.0/conf/hive-log4j.properties<br>    Hive history file=/tmp/rolex/hive_job_log_rolex_201511061336_165277921.txt<br>    hive&gt;</p>
<p>###5. 测试<br>    hive&gt; show databases;<br>    OK<br>    default<br>    Time taken: 0.101 seconds<br>    hive&gt; CREATE TABLE x (a INT);<br>    OK<br>    Time taken: 0.702 seconds<br>    hive&gt; SELECT * FROM x;<br>    OK<br>    Time taken: 0.283 seconds<br>    hive&gt; DROP TABLE x;<br>    OK<br>    Time taken: 1.059 seconds<br>    hive&gt; exit;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux ftp 问题汇总]]></title>
      <url>http://bysonline.github.io/2016/07/16/Linux%20FTP%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<p>####虚拟机ftp配置</p>
<p>今天在vmware上装contos，系统装完，可以ping通，但是ftp不通，错误消息如下：</p>
<blockquote>
<p>状态:      尝试连接“ECONNREFUSED - Connection refused by server”失败</p>
</blockquote>
<p>google说可能是端口没开或占用</p>
<p>所以检查一下</p>
<pre><code>#netstat -na --ip
</code></pre><p>21端口果然没有，打开ftp</p>
<pre><code># service vsftpd start
</code></pre><p>再连ftp，错误消息如下：</p>
<blockquote>
<p>命令:      USER root<br>响应:      530 Permission denied.</p>
</blockquote>
<p>用的root用户，vsftp默认关闭root用户，所以打开root用户<br>修改文件 <strong><code>/etc/vsftpd.ftpusers</code></strong> 和 <strong><code>/etc/vsftpd.user_list</code></strong></p>
<blockquote>
<p>响应: 553 Could not create file.<br>错误: 严重文件传输错误</p>
</blockquote>
<p>执行命令</p>
<pre><code>setsebool allow_ftpd_full_access 1
setsebool allow_ftpd_use_cifs 1
setsebool allow_ftpd_use_nfs 1
setsebool ftp_home_dir 1
setsebool httpd_enable_ftp_server 1
setsebool tftp_anon_write 1
service vsftpd restart
</code></pre><p>####vsftp上传文件限制</p>
<blockquote>
<p>553 Could not create file.</p>
</blockquote>
<pre><code>[root@node3 vsftpd]# /usr/sbin/setsebool -P ftp_home_dir 1
[root@node3 vsftpd]# setsebool allow_ftpd_full_access 1
[root@node3 vsftpd]# setsebool allow_ftpd_use_cifs 1
[root@node3 vsftpd]# setsebool allow_ftpd_use_nfs 1
[root@node3 vsftpd]# setsebool -P ftp_home_dir 1
[root@node3 vsftpd]# setsebool httpd_enable_ftp_server 1
[root@node3 vsftpd]# setsebool tftp_anon_write 1
[root@node3 vsftpd]# service vsftpd restart
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hbase shell 操作]]></title>
      <url>http://bysonline.github.io/2016/07/16/hbase%20shell%20%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>###COMMAND GROUPS:</p>
<pre><code>Group name: general
Commands: status, version, whoami

Group name: ddl
Commands: alter, alter_async, alter_status, create, describe, disable, disable_all, drop, drop_all, enable, enable_all, exists, is_disabled, is_enabled, list, show_filters

Group name: dml
Commands: count, delete, deleteall, get, get_counter, incr, put, scan, truncate, truncate_preserve

Group name: tools
Commands: assign, balance_switch, balancer, close_region, compact, flush, hlog_roll, major_compact, move, split, unassign, zk_dump

Group name: replication
Commands: add_peer, disable_peer, enable_peer, list_peers, list_replicated_tables, remove_peer, start_replication, stop_replication

Group name: snapshot
Commands: clone_snapshot, delete_snapshot, list_snapshots, restore_snapshot, snapshot

Group name: security
Commands: grant, revoke, user_permission
</code></pre><p>###put : 循环插入记录</p>
<pre><code>hbase(main):061:0&gt;for i in &apos;a&apos;..&apos;z&apos; do for j in &apos;a&apos;..&apos;z&apos; do put &apos;t1&apos;, &quot;row#{i}#{j}&quot;, &quot;F:#{j}&quot;, &quot;#{j}&quot; end end
</code></pre><p>###alter : 修改表结构</p>
<pre><code>hbase(main):061:0&gt;disable &apos;t1&apos;
hbase(main):061:0&gt;alter &apos;t1&apos;,{NAME =&gt; &apos;F&apos;}
hbase(main):061:0&gt;enable &apos;t1&apos;
</code></pre><p>###scan: 扫描前10条记录</p>
<pre><code>hbase(main):061:0&gt;scan &apos;t1&apos;, {LIMIT =&gt; 10}
</code></pre><p>###扫描F:a-F:c的记录</p>
<pre><code>hbase(main):061:0&gt;scan &apos;t1&apos;, {COLUMNS =&gt; [&apos;F:a&apos;,&apos;F:c&apos;]}
</code></pre><p>###扫描行健范围<br>    scan ‘t1’,{STARTROW =&gt; ‘row-aa’, STOPROW =&gt; ‘row-az’}</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hbase 0.94.26 伪分布模式安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/hbase%200.94.26%20%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 解压缩<br>    tar -zxvf hbase-0.94.26.tar.gz</p>
<p>###2. 修改配置文件</p>
<p>####hbase-env.sh</p>
<pre><code># The java implementation to use.  Java 1.6 required.
export JAVA_HOME=/usr/java/jdk1.6.0_45/
# Extra Java CLASSPATH elements.  Optional.
export HBASE_CLASSPATH=/user/hadoop/hadoop-1.2.1/conf
# Tell HBase whether it should manage it&apos;s own instance of Zookeeper or not.
export HBASE_MANAGES_ZK=true
</code></pre><p>####hbase-site.xml<br>    <configuration><br>        <property><br>            <name>hbase.rootdir</name><br>            <value>hdfs://localhost:9000/hbase</value><br>          </property><br>        <property><br>            <name>hbase.cluster.distributed</name><br>            <value>true</value><br>          </property><br>           <property><br>            <name>hbase.zookeeper.quorum</name><br>            <value>localhost</value><br>          </property><br>    </configuration></p>
<p>###3. 运行<br>     /usr/hadoop/hadoop-1.2.1/bin<br>     [rolex@node2 bin]$ ./start-all.sh （先运行hdfs）<br>     /usr/hbase/hbase-0.94.27/bin<br>     [rolex@node2 bin]$ ./start-hbase.sh （启动hbase）<br>     [rolex@node2 bin]$ ./local-master-backup.sh start 1  （启动master备份）<br>     [rolex@node2 bin]$ ./local-regionservers.sh start 1  （启动regionserver）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Bloom Filter]]></title>
      <url>http://bysonline.github.io/2016/07/16/Bloom%20Filter/</url>
      <content type="html"><![CDATA[<p>bloom filter是一种节省空间的数据结构。</p>
<p>内在表现为m个比特位的数组。</p>
<p>优势在于大小固定且在初始化时被设置。</p>
<p>一个典型的bloom filter包含add和contrans操作，和set类似。</p>
<pre><code>class BloomFilter&lt;E&gt; {
     public BloomFilter(int m, int k) { ... }
     public void add(E obj) { ... }
     public boolean contains(E obj) { ... }
}
</code></pre><p>初始状态时，Bloom Filter是一个包含m位的位数组，每一位都置为0。</p>
<p><img src="http://7xqgix.com1.z0.glb.clouddn.com/2.png" alt="1"></p>
<p>对于任意元素x，bloom filter将其使用hash函数计算k个索引，存放在数组中，每个位置的值为1。</p>
<p><img src="http://7xqgix.com1.z0.glb.clouddn.com/3.png" alt="2"></p>
<p>判断一个元素y是否属于集合时，对y进行k次hash函数计算，如果所有索引位置在数组中的值都为1，则y属于这个集合。如果有任意个索引位置的值为0，则y不属于这个集合。</p>
<p><img src="http://7xqgix.com1.z0.glb.clouddn.com/4.png" alt="1"></p>
<p>增加元素到bloom filter中不会改变其大小，只会改变误报率。</p>
<p>误报率的近似值为0.7*(m/n)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hadoop 2.6.2 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/hadoop%202.6.2%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 下载<br><a href=""></a></p>
<p>###2. 解压缩</p>
<blockquote>
<p>tar -zxf hadoop-2.6.2.tar.gz</p>
<p>###3. 修改配置文件<br>vi ./etc/hadoop/core-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;fs.defaultFS&lt;/name&gt;
        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;
        &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><blockquote>
<p>vi ./etc/hadoop/hdfs-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;dfs.replication&lt;/name&gt;
        &lt;value&gt;1&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><blockquote>
<p>vi ./etc/hadoop/mapred-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;
        &lt;value&gt;yarn&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><blockquote>
<p>vi ./etc/hadoop/yarn-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;
        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>###4. 设置互信</p>
<blockquote>
<p>ssh-keygen -t dsa -P ‘’ -f ~/.ssh/id_dsa<br>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys<br>chmod 0600 ~/.ssh/authorized_keys</p>
<p>###5. 格式化namenode<br>./bin/hdfs namenode -format</p>
</blockquote>
<p>###6. 启动yarn</p>
<blockquote>
<p>./sbin/start-yarn.sh</p>
</blockquote>
<p>###7. 启动hdfs</p>
<blockquote>
<p>./sbin/start-dfs.sh</p>
</blockquote>
<p>###8. 执行wordcount</p>
<blockquote>
<p>./bin/hdfs dfs -mkdir /user<br>./bin/hdfs dfs -mkdir /user/rolex<br>./bin/hdfs dfs -mkdir /user/rolex/input<br>./bin/hdfs dfs -put ./NOTICE.txt /user/rolex/input/  </p>
<p>./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.2.jar wordcount /user/rolex/input/NOTICE.txt /user/rolex/output/</p>
<p>./bin/hdfs dfs -cat /user/rolex/output/part-r-00000</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hbase-0.98.17-hadoop2 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/hbase-0.98.17-hadoop2%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>###1. 下载解压</p>
<pre><code>tar -zxf hbase-0.98.17-hadoop2-bin.tar.gz
</code></pre><p>###2. 修改配置</p>
<p>####2.1 hbase-env.sh</p>
<pre><code>export JAVA_HOME=/usr/java/jdk1.6.0_45
</code></pre><p>####2.2 hbase-site.xml</p>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;hbase.rootdir&lt;/name&gt;
        &lt;value&gt;hdfs://node1:8020/hbase&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;hbase.master&lt;/name&gt;
        &lt;value&gt;hdfs://node1:60000/hbase&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;
        &lt;value&gt;true&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;
        &lt;value&gt;node1&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>####3. 检查jar包</p>
<p>检查/usr/hbase/hbase-0.98.17-hadoop2/lib下hadoopjar包的版本是否和安装的hadoop一致。如不一致需要将$HADOOP_HOME/share/hadoop下的hadoop*.jar拷贝到$HBASE_HOME/lib下。</p>
<pre><code>find $HADOOP_HOME/share/hadoop -name &quot;hadoop*.jar&quot; | xargs -i cp {} $HABASE_HOME/lib
</code></pre><p>###4. 格式化namenode并删除原有数据信息（可选）</p>
<blockquote>
<p>如之前装过其他版本hadoop或hbase，建议执行该步操作</p>
</blockquote>
<p>###5. 启动</p>
<pre><code>./start-hbase.sh

./local-regionservers.sh start 1

./local-master-backup.sh start 1

./hbase shell
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编译hadoop-1.2.1 eclipse插件]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%BC%96%E8%AF%91hadoop-1.2.1%20eclipse%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><h4 id="1-1-安装ant"><a href="#1-1-安装ant" class="headerlink" title="1.1 安装ant"></a>1.1 安装ant</h4><h4 id="1-2下载hadoop-1-2-1-tar-gz，解压缩到D-hadoop-hadoop-1-2-1"><a href="#1-2下载hadoop-1-2-1-tar-gz，解压缩到D-hadoop-hadoop-1-2-1" class="headerlink" title="1.2下载hadoop-1.2.1.tar.gz，解压缩到D:\hadoop\hadoop-1.2.1"></a>1.2下载hadoop-1.2.1.tar.gz，解压缩到D:\hadoop\hadoop-1.2.1</h4><h3 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h3><h4 id="1）-D-hadoop-hadoop-1-2-1-src-contrib-eclipse-plugin-build-xml"><a href="#1）-D-hadoop-hadoop-1-2-1-src-contrib-eclipse-plugin-build-xml" class="headerlink" title="1） D:\hadoop\hadoop-1.2.1\src\contrib\eclipse-plugin\build.xml"></a>1） D:\hadoop\hadoop-1.2.1\src\contrib\eclipse-plugin\build.xml</h4><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;

&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the &quot;License&quot;); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;

&lt;project default=&quot;jar&quot; name=&quot;eclipse-plugin&quot;&gt;

  &lt;import file=&quot;../build-contrib.xml&quot;/&gt;

  &lt;path id=&quot;eclipse-sdk-jars&quot;&gt;
    &lt;fileset dir=&quot;${eclipse.home}/plugins/&quot;&gt;
      &lt;include name=&quot;org.eclipse.ui*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.jdt*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.core*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.equinox*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.debug*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.osgi*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.swt*.jar&quot;/&gt;
      &lt;include name=&quot;org.eclipse.jface*.jar&quot;/&gt;

      &lt;include name=&quot;org.eclipse.team.cvs.ssh2*.jar&quot;/&gt;
      &lt;include name=&quot;com.jcraft.jsch*.jar&quot;/&gt;
    &lt;/fileset&gt;
  &lt;/path&gt;

  &lt;!-- Override classpath to include Eclipse SDK jars --&gt;
  &lt;path id=&quot;classpath&quot;&gt;
    &lt;pathelement location=&quot;${build.classes}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/classes&quot;/&gt;
    &lt;path refid=&quot;eclipse-sdk-jars&quot;/&gt;
     &lt;fileset dir=&quot;${hadoop.root}/&quot;&gt;
      &lt;include name=&quot;*.jar&quot;/&gt;
&lt;/fileset&gt;
  &lt;/path&gt;

  &lt;!-- Skip building if eclipse.home is unset. --&gt;
  &lt;target name=&quot;check-contrib&quot; unless=&quot;eclipse.home&quot;&gt;
    &lt;property name=&quot;skip.contrib&quot; value=&quot;yes&quot;/&gt;
    &lt;echo message=&quot;eclipse.home unset: skipping eclipse plugin&quot;/&gt;
  &lt;/target&gt;

&lt;target name=&quot;compile&quot; depends=&quot;init, ivy-retrieve-common&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;javac
     encoding=&quot;${build.encoding}&quot;
     srcdir=&quot;${src.dir}&quot;
     includes=&quot;**/*.java&quot;
     destdir=&quot;${build.classes}&quot;
     debug=&quot;${javac.debug}&quot;
     deprecation=&quot;${javac.deprecation}&quot;&gt;
     &lt;classpath refid=&quot;classpath&quot;/&gt;
    &lt;/javac&gt;
  &lt;/target&gt;

  &lt;!-- Override jar target to specify manifest --&gt;
  &lt;target name=&quot;jar&quot; depends=&quot;compile&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;mkdir dir=&quot;${build.dir}/lib&quot;/&gt;
     &lt;!--
    &lt;copy file=&quot;${hadoop.root}/build/hadoop-core-${version}.jar&quot; tofile=&quot;${build.dir}/lib/hadoop-core.jar&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/build/ivy/lib/Hadoop/common/commons-cli-${commons-cli.version}.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;--&gt;
     &lt;copy file=&quot;${hadoop.root}/hadoop-core-${version}.jar&quot; tofile=&quot;${build.dir}/lib/hadoop-core.jar&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/commons-cli-1.2.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/commons-lang-2.4.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/commons-configuration-1.6.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/jackson-mapper-asl-1.8.8.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/jackson-core-asl-1.8.8.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;copy file=&quot;${hadoop.root}/lib/commons-httpclient-3.0.1.jar&quot;  todir=&quot;${build.dir}/lib&quot; verbose=&quot;true&quot;/&gt;
    &lt;jar
      jarfile=&quot;${build.dir}/hadoop-${name}-${version}.jar&quot;
      manifest=&quot;${root}/META-INF/MANIFEST.MF&quot;&gt;
      &lt;fileset dir=&quot;${build.dir}&quot; includes=&quot;classes/ lib/&quot;/&gt;
      &lt;fileset dir=&quot;${root}&quot; includes=&quot;resources/ plugin.xml&quot;/&gt;
    &lt;/jar&gt;
  &lt;/target&gt;

&lt;/project&gt;
</code></pre><h4 id="2）-D-hadoop-hadoop-1-2-1-src-contrib-build-contrib-xml"><a href="#2）-D-hadoop-hadoop-1-2-1-src-contrib-build-contrib-xml" class="headerlink" title="2） D:\hadoop\hadoop-1.2.1\src\contrib\build-contrib.xml"></a>2） D:\hadoop\hadoop-1.2.1\src\contrib\build-contrib.xml</h4><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the &quot;License&quot;); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;

&lt;!-- Imported by contrib/*/build.xml files to share generic targets. --&gt;

&lt;project name=&quot;hadoopbuildcontrib&quot; xmlns:ivy=&quot;antlib:org.apache.ivy.ant&quot;&gt;

  &lt;property name=&quot;name&quot; value=&quot;${ant.project.name}&quot;/&gt;
  &lt;property name=&quot;root&quot; value=&quot;${basedir}&quot;/&gt;
  &lt;property name=&quot;version&quot; value=&quot;1.2.1&quot;/&gt;
  &lt;property name=&quot;ivy.version&quot; value=&quot;2.1.0&quot;/&gt;
  &lt;property name=&quot;eclipse.home&quot; location=&quot;D:/Program Files/eclipse-jee-indigo-SR2-win32-x86_64&quot;/&gt;
  &lt;property name=&quot;hadoop.root&quot; location=&quot;D:/hadoop/hadoop-1.2.1&quot;/&gt;

  &lt;!-- Load all the default properties, and any the user wants    --&gt;
  &lt;!-- to contribute (without having to type -D or edit this file --&gt;
  &lt;property file=&quot;${user.home}/${name}.build.properties&quot; /&gt;
  &lt;property file=&quot;${root}/build.properties&quot; /&gt;
  &lt;property file=&quot;${hadoop.root}/build.properties&quot; /&gt;

  &lt;property name=&quot;src.dir&quot;  location=&quot;${root}/src/java&quot;/&gt;
  &lt;property name=&quot;src.test&quot; location=&quot;${root}/src/test&quot;/&gt;
  &lt;property name=&quot;src.test.data&quot; location=&quot;${root}/src/test/data&quot;/&gt;
  &lt;!-- Property added for contrib system tests --&gt;
  &lt;property name=&quot;build-fi.dir&quot; location=&quot;${hadoop.root}/build-fi&quot;/&gt;
  &lt;property name=&quot;system-test-build-dir&quot; location=&quot;${build-fi.dir}/system&quot;/&gt;
  &lt;property name=&quot;src.test.system&quot; location=&quot;${root}/src/test/system&quot;/&gt;

  &lt;property name=&quot;src.examples&quot; location=&quot;${root}/src/examples&quot;/&gt;

  &lt;available file=&quot;${src.examples}&quot; type=&quot;dir&quot; property=&quot;examples.available&quot;/&gt;
  &lt;available file=&quot;${src.test}&quot; type=&quot;dir&quot; property=&quot;test.available&quot;/&gt;

  &lt;!-- Property added for contrib system tests --&gt;
  &lt;available file=&quot;${src.test.system}&quot; type=&quot;dir&quot;
      property=&quot;test.system.available&quot;/&gt;

  &lt;property name=&quot;conf.dir&quot; location=&quot;${hadoop.root}/conf&quot;/&gt;
  &lt;property name=&quot;test.junit.output.format&quot; value=&quot;plain&quot;/&gt;
  &lt;property name=&quot;test.output&quot; value=&quot;no&quot;/&gt;
  &lt;property name=&quot;test.timeout&quot; value=&quot;900000&quot;/&gt;
  &lt;property name=&quot;build.contrib.dir&quot; location=&quot;${hadoop.root}/build/contrib&quot;/&gt;
  &lt;property name=&quot;build.dir&quot; location=&quot;${hadoop.root}/build/contrib/${name}&quot;/&gt;
  &lt;property name=&quot;build.classes&quot; location=&quot;${build.dir}/classes&quot;/&gt;
  &lt;property name=&quot;build.test&quot; location=&quot;${build.dir}/test&quot;/&gt;
  &lt;property name=&quot;build.examples&quot; location=&quot;${build.dir}/examples&quot;/&gt;
  &lt;property name=&quot;hadoop.log.dir&quot; location=&quot;${build.dir}/test/logs&quot;/&gt;
  &lt;!-- all jars together --&gt;
  &lt;property name=&quot;javac.deprecation&quot; value=&quot;off&quot;/&gt;
  &lt;property name=&quot;javac.debug&quot; value=&quot;on&quot;/&gt;
  &lt;property name=&quot;build.ivy.lib.dir&quot; value=&quot;${hadoop.root}/build/ivy/lib&quot;/&gt;

  &lt;property name=&quot;javadoc.link&quot;
            value=&quot;http://java.sun.com/j2se/1.4/docs/api/&quot;/&gt;

  &lt;property name=&quot;build.encoding&quot; value=&quot;ISO-8859-1&quot;/&gt;

  &lt;fileset id=&quot;lib.jars&quot; dir=&quot;${root}&quot; includes=&quot;lib/*.jar&quot;/&gt;

  &lt;!-- Property added for contrib system tests --&gt;
  &lt;property name=&quot;build.test.system&quot; location=&quot;${build.dir}/system&quot;/&gt;
  &lt;property name=&quot;build.system.classes&quot;
      location=&quot;${build.test.system}/classes&quot;/&gt;

   &lt;!-- IVY properties set here --&gt;
  &lt;property name=&quot;ivy.dir&quot; location=&quot;ivy&quot; /&gt;
  &lt;!-- loglevel take values like default|download-only|quiet --&gt;
  &lt;property name=&quot;loglevel&quot; value=&quot;quiet&quot;/&gt;
  &lt;property name=&quot;ivysettings.xml&quot; location=&quot;${hadoop.root}/ivy/ivysettings.xml&quot;/&gt;
  &lt;loadproperties srcfile=&quot;${ivy.dir}/libraries.properties&quot;/&gt;
  &lt;loadproperties srcfile=&quot;${hadoop.root}/ivy/libraries.properties&quot;/&gt;
  &lt;property name=&quot;ivy.jar&quot; location=&quot;${hadoop.root}/ivy/ivy-${ivy.version}.jar&quot;/&gt;
  &lt;property name=&quot;ivy_repo_url&quot;
     value=&quot;http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar&quot; /&gt;
  &lt;property name=&quot;build.dir&quot; location=&quot;build&quot; /&gt;
  &lt;property name=&quot;build.ivy.dir&quot; location=&quot;${build.dir}/ivy&quot; /&gt;
  &lt;property name=&quot;build.ivy.lib.dir&quot; location=&quot;${build.ivy.dir}/lib&quot; /&gt;
  &lt;property name=&quot;build.ivy.report.dir&quot; location=&quot;${build.ivy.dir}/report&quot; /&gt;
  &lt;property name=&quot;common.ivy.lib.dir&quot; location=&quot;${build.ivy.lib.dir}/${ant.project.name}/common&quot;/&gt;

  &lt;!--this is the naming policy for artifacts we want pulled down--&gt;
  &lt;property name=&quot;ivy.artifact.retrieve.pattern&quot;
                   value=&quot;${ant.project.name}/[conf]/[artifact]-[revision].[ext]&quot;/&gt;

  &lt;!-- the normal classpath --&gt;
  &lt;path id=&quot;contrib-classpath&quot;&gt;
    &lt;pathelement location=&quot;${build.classes}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/tools&quot;/&gt;
    &lt;fileset refid=&quot;lib.jars&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/classes&quot;/&gt;
    &lt;fileset dir=&quot;${hadoop.root}/lib&quot;&gt;
      &lt;include name=&quot;**/*.jar&quot; /&gt;
    &lt;/fileset&gt;
    &lt;path refid=&quot;${ant.project.name}.common-classpath&quot;/&gt;
    &lt;pathelement path=&quot;${clover.jar}&quot;/&gt;
  &lt;/path&gt;

  &lt;!-- the unit test classpath --&gt;
  &lt;path id=&quot;test.classpath&quot;&gt;
    &lt;pathelement location=&quot;${build.test}&quot; /&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/test/classes&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/src/contrib/test&quot;/&gt;
    &lt;pathelement location=&quot;${conf.dir}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build&quot;/&gt;
    &lt;pathelement location=&quot;${build.examples}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/examples&quot;/&gt;
    &lt;path refid=&quot;contrib-classpath&quot;/&gt;
  &lt;/path&gt;

  &lt;!-- The system test classpath --&gt;
  &lt;path id=&quot;test.system.classpath&quot;&gt;
    &lt;pathelement location=&quot;${hadoop.root}/src/contrib/${name}/src/test/system&quot; /&gt;
    &lt;pathelement location=&quot;${build.test.system}&quot; /&gt;
    &lt;pathelement location=&quot;${build.test.system}/classes&quot;/&gt;
    &lt;pathelement location=&quot;${build.examples}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build-fi/system/classes&quot; /&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build-fi/system/test/classes&quot; /&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build-fi&quot; /&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build-fi/tools&quot; /&gt;
    &lt;pathelement location=&quot;${hadoop.home}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.conf.dir}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.conf.dir.deployed}&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build/examples&quot;/&gt;
    &lt;pathelement location=&quot;${hadoop.root}/build-fi/test/classes&quot; /&gt;
    &lt;path refid=&quot;contrib-classpath&quot;/&gt;
    &lt;fileset dir=&quot;${hadoop.root}/src/test/lib&quot;&gt;
      &lt;include name=&quot;**/*.jar&quot; /&gt;
      &lt;exclude name=&quot;**/excluded/&quot; /&gt;
    &lt;/fileset&gt;
    &lt;fileset dir=&quot;${hadoop.root}/build-fi/system&quot;&gt;
       &lt;include name=&quot;**/*.jar&quot; /&gt;
       &lt;exclude name=&quot;**/excluded/&quot; /&gt;
     &lt;/fileset&gt;
    &lt;fileset dir=&quot;${hadoop.root}/build-fi/test/testjar&quot;&gt;
      &lt;include name=&quot;**/*.jar&quot; /&gt;
      &lt;exclude name=&quot;**/excluded/&quot; /&gt;
    &lt;/fileset&gt;
    &lt;fileset dir=&quot;${hadoop.root}/build/contrib/${name}&quot;&gt;
      &lt;include name=&quot;**/*.jar&quot; /&gt;
      &lt;exclude name=&quot;**/excluded/&quot; /&gt;
    &lt;/fileset&gt;
  &lt;/path&gt;

  &lt;!-- to be overridden by sub-projects --&gt;
  &lt;target name=&quot;check-contrib&quot;/&gt;
  &lt;target name=&quot;init-contrib&quot;/&gt;

  &lt;!-- ====================================================== --&gt;
  &lt;!-- Stuff needed by all targets                            --&gt;
  &lt;!-- ====================================================== --&gt;
  &lt;target name=&quot;init&quot; depends=&quot;check-contrib&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;mkdir dir=&quot;${build.dir}&quot;/&gt;
    &lt;mkdir dir=&quot;${build.classes}&quot;/&gt;
    &lt;mkdir dir=&quot;${build.test}&quot;/&gt;
    &lt;!-- The below two tags  added for contrib system tests --&gt;
    &lt;mkdir dir=&quot;${build.test.system}&quot;/&gt;
    &lt;mkdir dir=&quot;${build.system.classes}&quot;/&gt;
    &lt;mkdir dir=&quot;${build.examples}&quot;/&gt;
    &lt;mkdir dir=&quot;${hadoop.log.dir}&quot;/&gt;
    &lt;antcall target=&quot;init-contrib&quot;/&gt;
  &lt;/target&gt;


  &lt;!-- ====================================================== --&gt;
  &lt;!-- Compile a Hadoop contrib&apos;s files                       --&gt;
  &lt;!-- ====================================================== --&gt;
  &lt;target name=&quot;compile&quot; depends=&quot;init, ivy-retrieve-common&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;javac
     encoding=&quot;${build.encoding}&quot;
     srcdir=&quot;${src.dir}&quot;
     includes=&quot;**/*.java&quot;
     destdir=&quot;${build.classes}&quot;
     debug=&quot;${javac.debug}&quot;
     deprecation=&quot;${javac.deprecation}&quot;&gt;
     &lt;classpath refid=&quot;contrib-classpath&quot;/&gt;
    &lt;/javac&gt;
  &lt;/target&gt;


  &lt;!-- ======================================================= --&gt;
  &lt;!-- Compile a Hadoop contrib&apos;s example files (if available) --&gt;
  &lt;!-- ======================================================= --&gt;
  &lt;target name=&quot;compile-examples&quot; depends=&quot;compile&quot; if=&quot;examples.available&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;javac
     encoding=&quot;${build.encoding}&quot;
     srcdir=&quot;${src.examples}&quot;
     includes=&quot;**/*.java&quot;
     destdir=&quot;${build.examples}&quot;
     debug=&quot;${javac.debug}&quot;&gt;
     &lt;classpath refid=&quot;contrib-classpath&quot;/&gt;
    &lt;/javac&gt;
  &lt;/target&gt;


  &lt;!-- ================================================================== --&gt;
  &lt;!-- Compile test code                                                  --&gt;
  &lt;!-- ================================================================== --&gt;
  &lt;target name=&quot;compile-test&quot; depends=&quot;compile-examples&quot; if=&quot;test.available&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;javac
     encoding=&quot;${build.encoding}&quot;
     srcdir=&quot;${src.test}&quot;
     includes=&quot;**/*.java&quot;
     excludes=&quot;system/**/*.java&quot;
     destdir=&quot;${build.test}&quot;
     debug=&quot;${javac.debug}&quot;&gt;
    &lt;classpath refid=&quot;test.classpath&quot;/&gt;
    &lt;/javac&gt;
  &lt;/target&gt;

  &lt;!-- ================================================================== --&gt;
  &lt;!-- Compile system test code                                           --&gt;
  &lt;!-- ================================================================== --&gt;
  &lt;target name=&quot;compile-test-system&quot; depends=&quot;compile-examples&quot;
     if=&quot;test.system.available&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;javac
       encoding=&quot;${build.encoding}&quot;
       srcdir=&quot;${src.test.system}&quot;
       includes=&quot;**/*.java&quot;
       destdir=&quot;${build.system.classes}&quot;
       debug=&quot;${javac.debug}&quot;&gt;
      &lt;classpath refid=&quot;test.system.classpath&quot;/&gt;
    &lt;/javac&gt;
  &lt;/target&gt;

  &lt;!-- ====================================================== --&gt;
  &lt;!-- Make a Hadoop contrib&apos;s jar                            --&gt;
  &lt;!-- ====================================================== --&gt;
  &lt;target name=&quot;jar&quot; depends=&quot;compile&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;jar
      jarfile=&quot;${build.dir}/hadoop-${name}-${version}.jar&quot;
      basedir=&quot;${build.classes}&quot;     
    /&gt;
  &lt;/target&gt;


  &lt;!-- ====================================================== --&gt;
  &lt;!-- Make a Hadoop contrib&apos;s examples jar                   --&gt;
  &lt;!-- ====================================================== --&gt;
  &lt;target name=&quot;jar-examples&quot; depends=&quot;compile-examples&quot;
          if=&quot;examples.available&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;jar jarfile=&quot;${build.dir}/hadoop-${name}-examples-${version}.jar&quot;&gt;
      &lt;fileset dir=&quot;${build.classes}&quot;&gt;
      &lt;/fileset&gt;
      &lt;fileset dir=&quot;${build.examples}&quot;&gt;
      &lt;/fileset&gt;
    &lt;/jar&gt;
  &lt;/target&gt;

  &lt;!-- ====================================================== --&gt;
  &lt;!-- Package a Hadoop contrib                               --&gt;
  &lt;!-- ====================================================== --&gt;
  &lt;target name=&quot;package&quot; depends=&quot;jar, jar-examples&quot; unless=&quot;skip.contrib&quot;&gt;
    &lt;mkdir dir=&quot;${dist.dir}/contrib/${name}&quot;/&gt;
    &lt;copy todir=&quot;${dist.dir}/contrib/${name}&quot; includeEmptyDirs=&quot;false&quot; flatten=&quot;true&quot;&gt;
      &lt;fileset dir=&quot;${build.dir}&quot;&gt;
        &lt;include name=&quot;hadoop-${name}-${version}.jar&quot; /&gt;
      &lt;/fileset&gt;
    &lt;/copy&gt;
  &lt;/target&gt;

  &lt;!-- ================================================================== --&gt;
  &lt;!-- Run unit tests                                                     --&gt;
  &lt;!-- ================================================================== --&gt;
  &lt;target name=&quot;test&quot; depends=&quot;compile-test, compile&quot; if=&quot;test.available&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;delete dir=&quot;${hadoop.log.dir}&quot;/&gt;
    &lt;mkdir dir=&quot;${hadoop.log.dir}&quot;/&gt;
    &lt;junit
      printsummary=&quot;yes&quot; showoutput=&quot;${test.output}&quot;
      haltonfailure=&quot;no&quot; fork=&quot;yes&quot; maxmemory=&quot;512m&quot;
      errorProperty=&quot;tests.failed&quot; failureProperty=&quot;tests.failed&quot;
      timeout=&quot;${test.timeout}&quot;&gt;

      &lt;sysproperty key=&quot;test.build.data&quot; value=&quot;${build.test}/data&quot;/&gt;
      &lt;sysproperty key=&quot;build.test&quot; value=&quot;${build.test}&quot;/&gt;
      &lt;sysproperty key=&quot;src.test.data&quot; value=&quot;${src.test.data}&quot;/&gt;
      &lt;sysproperty key=&quot;contrib.name&quot; value=&quot;${name}&quot;/&gt;

      &lt;!-- requires fork=yes for:
        relative File paths to use the specified user.dir
        classpath to use build/contrib/*.jar
      --&gt;
      &lt;sysproperty key=&quot;user.dir&quot; value=&quot;${build.test}/data&quot;/&gt;

      &lt;sysproperty key=&quot;fs.default.name&quot; value=&quot;${fs.default.name}&quot;/&gt;
      &lt;sysproperty key=&quot;hadoop.test.localoutputfile&quot; value=&quot;${hadoop.test.localoutputfile}&quot;/&gt;
      &lt;sysproperty key=&quot;hadoop.log.dir&quot; value=&quot;${hadoop.log.dir}&quot;/&gt;
      &lt;sysproperty key=&quot;taskcontroller-path&quot; value=&quot;${taskcontroller-path}&quot;/&gt;
      &lt;sysproperty key=&quot;taskcontroller-ugi&quot; value=&quot;${taskcontroller-ugi}&quot;/&gt;
      &lt;classpath refid=&quot;test.classpath&quot;/&gt;
      &lt;formatter type=&quot;${test.junit.output.format}&quot; /&gt;
      &lt;batchtest todir=&quot;${build.test}&quot; unless=&quot;testcase&quot;&gt;
        &lt;fileset dir=&quot;${src.test}&quot;
                 includes=&quot;**/Test*.java&quot; excludes=&quot;**/${test.exclude}.java, system/**/*.java&quot; /&gt;
      &lt;/batchtest&gt;
      &lt;batchtest todir=&quot;${build.test}&quot; if=&quot;testcase&quot;&gt;
        &lt;fileset dir=&quot;${src.test}&quot; includes=&quot;**/${testcase}.java&quot; excludes=&quot;system/**/*.java&quot; /&gt;
      &lt;/batchtest&gt;
    &lt;/junit&gt;
    &lt;antcall target=&quot;checkfailure&quot;/&gt;
  &lt;/target&gt;

  &lt;!-- ================================================================== --&gt;
  &lt;!-- Run system tests                                                   --&gt;
  &lt;!-- ================================================================== --&gt;
  &lt;target name=&quot;test-system&quot; depends=&quot;compile, compile-test-system, jar&quot;
     if=&quot;test.system.available&quot;&gt;
     &lt;delete dir=&quot;${build.test.system}/extraconf&quot;/&gt;
     &lt;mkdir dir=&quot;${build.test.system}/extraconf&quot;/&gt;
     &lt;property name=&quot;test.src.dir&quot; location=&quot;${hadoop.root}/src/test&quot;/&gt;
     &lt;property name=&quot;test.junit.printsummary&quot; value=&quot;yes&quot; /&gt;
     &lt;property name=&quot;test.junit.haltonfailure&quot; value=&quot;no&quot; /&gt;
     &lt;property name=&quot;test.junit.maxmemory&quot; value=&quot;512m&quot; /&gt;
     &lt;property name=&quot;test.junit.fork.mode&quot; value=&quot;perTest&quot; /&gt;
     &lt;property name=&quot;test.all.tests.file&quot; value=&quot;${test.src.dir}/all-tests&quot; /&gt;
     &lt;property name=&quot;test.build.dir&quot; value=&quot;${hadoop.root}/build/test&quot;/&gt;
     &lt;property name=&quot;basedir&quot; value=&quot;${hadoop.root}&quot;/&gt;
     &lt;property name=&quot;test.timeout&quot; value=&quot;900000&quot;/&gt;
     &lt;property name=&quot;test.junit.output.format&quot; value=&quot;plain&quot;/&gt;
     &lt;property name=&quot;test.tools.input.dir&quot; value=&quot;${basedir}/src/test/tools/data&quot;/&gt;
     &lt;property name=&quot;c++.src&quot; value=&quot;${basedir}/src/c++&quot;/&gt;
     &lt;property name=&quot;test.include&quot; value=&quot;Test*&quot;/&gt;
     &lt;property name=&quot;c++.libhdfs.src&quot; value=&quot;${c++.src}/libhdfs&quot;/&gt;
     &lt;property name=&quot;test.build.data&quot; value=&quot;${build.test.system}/data&quot;/&gt;
     &lt;property name=&quot;test.cache.data&quot; value=&quot;${build.test.system}/cache&quot;/&gt;
     &lt;property name=&quot;test.debug.data&quot; value=&quot;${build.test.system}/debug&quot;/&gt;
     &lt;property name=&quot;test.log.dir&quot; value=&quot;${build.test.system}/logs&quot;/&gt;
     &lt;patternset id=&quot;empty.exclude.list.id&quot; /&gt;
        &lt;exec executable=&quot;sed&quot; inputstring=&quot;${os.name}&quot;
            outputproperty=&quot;nonspace.os&quot;&gt;
          &lt;arg value=&quot;s/ /_/g&quot;/&gt;
        &lt;/exec&gt;
     &lt;property name=&quot;build.platform&quot;
         value=&quot;${nonspace.os}-${os.arch}-${sun.arch.data.model}&quot;/&gt;
     &lt;property name=&quot;build.native&quot;
         value=&quot;${hadoop.root}/build/native/${build.platform}&quot;/&gt;
     &lt;property name=&quot;lib.dir&quot; value=&quot;${hadoop.root}/lib&quot;/&gt;
     &lt;property name=&quot;install.c++.examples&quot;
         value=&quot;${hadoop.root}/build/c++-examples/${build.platform}&quot;/&gt;
    &lt;condition property=&quot;tests.testcase&quot;&gt;
       &lt;and&gt;
         &lt;isset property=&quot;testcase&quot; /&gt;
       &lt;/and&gt;
    &lt;/condition&gt;
     &lt;property name=&quot;test.junit.jvmargs&quot; value=&quot;-ea&quot; /&gt;
    &lt;macro-system-test-runner test.file=&quot;${test.all.tests.file}&quot;
                     classpath=&quot;test.system.classpath&quot;
                     test.dir=&quot;${build.test.system}&quot;
                     fileset.dir=&quot;${hadoop.root}/src/contrib/${name}/src/test/system&quot;
                     hadoop.conf.dir.deployed=&quot;${hadoop.conf.dir.deployed}&quot;&gt;
  &lt;/macro-system-test-runner&gt;
  &lt;/target&gt;

  &lt;macrodef name=&quot;macro-system-test-runner&quot;&gt;
    &lt;attribute name=&quot;test.file&quot; /&gt;
    &lt;attribute name=&quot;classpath&quot; /&gt;
    &lt;attribute name=&quot;test.dir&quot; /&gt;
    &lt;attribute name=&quot;fileset.dir&quot; /&gt;
    &lt;attribute name=&quot;hadoop.conf.dir.deployed&quot; default=&quot;&quot; /&gt;
    &lt;sequential&gt;
      &lt;delete dir=&quot;@{test.dir}/data&quot;/&gt;
      &lt;mkdir dir=&quot;@{test.dir}/data&quot;/&gt;
      &lt;delete dir=&quot;@{test.dir}/logs&quot;/&gt;
      &lt;mkdir dir=&quot;@{test.dir}/logs&quot;/&gt;
      &lt;copy file=&quot;${test.src.dir}/hadoop-policy.xml&quot;
        todir=&quot;@{test.dir}/extraconf&quot; /&gt;
      &lt;copy file=&quot;${test.src.dir}/fi-site.xml&quot;
        todir=&quot;@{test.dir}/extraconf&quot; /&gt;
      &lt;junit showoutput=&quot;${test.output}&quot;
        printsummary=&quot;${test.junit.printsummary}&quot;
        haltonfailure=&quot;${test.junit.haltonfailure}&quot;
        fork=&quot;yes&quot;
        forkmode=&quot;${test.junit.fork.mode}&quot;
        maxmemory=&quot;${test.junit.maxmemory}&quot;
        dir=&quot;${basedir}&quot; timeout=&quot;${test.timeout}&quot;
        errorProperty=&quot;tests.failed&quot; failureProperty=&quot;tests.failed&quot;&gt;
        &lt;jvmarg value=&quot;${test.junit.jvmargs}&quot; /&gt;
        &lt;sysproperty key=&quot;java.net.preferIPv4Stack&quot; value=&quot;true&quot;/&gt;
        &lt;sysproperty key=&quot;test.build.data&quot; value=&quot;@{test.dir}/data&quot;/&gt;
        &lt;sysproperty key=&quot;test.tools.input.dir&quot; value = &quot;${test.tools.input.dir}&quot;/&gt;
        &lt;sysproperty key=&quot;test.cache.data&quot; value=&quot;${test.cache.data}&quot;/&gt;
        &lt;sysproperty key=&quot;test.debug.data&quot; value=&quot;${test.debug.data}&quot;/&gt;
        &lt;sysproperty key=&quot;hadoop.log.dir&quot; value=&quot;@{test.dir}/logs&quot;/&gt;
        &lt;sysproperty key=&quot;test.src.dir&quot; value=&quot;@{fileset.dir}&quot;/&gt;
        &lt;sysproperty key=&quot;taskcontroller-path&quot; value=&quot;${taskcontroller-path}&quot;/&gt;
        &lt;sysproperty key=&quot;taskcontroller-ugi&quot; value=&quot;${taskcontroller-ugi}&quot;/&gt;
        &lt;sysproperty key=&quot;test.build.extraconf&quot; value=&quot;@{test.dir}/extraconf&quot; /&gt;
        &lt;sysproperty key=&quot;hadoop.policy.file&quot; value=&quot;hadoop-policy.xml&quot;/&gt;
        &lt;sysproperty key=&quot;java.library.path&quot;
          value=&quot;${build.native}/lib:${lib.dir}/native/${build.platform}&quot;/&gt;
        &lt;sysproperty key=&quot;install.c++.examples&quot; value=&quot;${install.c++.examples}&quot;/&gt;
        &lt;syspropertyset dynamic=&quot;no&quot;&gt;
          &lt;propertyref name=&quot;hadoop.tmp.dir&quot;/&gt;
        &lt;/syspropertyset&gt;
        &lt;!-- set compile.c++ in the child jvm only if it is set --&gt;
        &lt;syspropertyset dynamic=&quot;no&quot;&gt;
          &lt;propertyref name=&quot;compile.c++&quot;/&gt;
        &lt;/syspropertyset&gt;
        &lt;!-- Pass probability specifications to the spawn JVM --&gt;
        &lt;syspropertyset id=&quot;FaultProbabilityProperties&quot;&gt;
          &lt;propertyref regex=&quot;fi.*&quot;/&gt;
        &lt;/syspropertyset&gt;
        &lt;sysproperty key=&quot;test.system.hdrc.deployed.hadoopconfdir&quot;
                     value=&quot;@{hadoop.conf.dir.deployed}&quot; /&gt;
        &lt;classpath refid=&quot;@{classpath}&quot;/&gt;
        &lt;formatter type=&quot;${test.junit.output.format}&quot; /&gt;
        &lt;batchtest todir=&quot;@{test.dir}&quot; unless=&quot;testcase&quot;&gt;
          &lt;fileset dir=&quot;@{fileset.dir}&quot;
            excludes=&quot;**/${test.exclude}.java aop/** system/**&quot;&gt;
            &lt;patternset&gt;
              &lt;includesfile name=&quot;@{test.file}&quot;/&gt;
            &lt;/patternset&gt;
          &lt;/fileset&gt;
        &lt;/batchtest&gt;
        &lt;batchtest todir=&quot;@{test.dir}&quot; if=&quot;testcase&quot;&gt;
          &lt;fileset dir=&quot;@{fileset.dir}&quot; includes=&quot;**/${testcase}.java&quot;/&gt;
        &lt;/batchtest&gt;
      &lt;/junit&gt;
      &lt;antcall target=&quot;checkfailure&quot;/&gt;
    &lt;/sequential&gt;
  &lt;/macrodef&gt;


  &lt;target name=&quot;checkfailure&quot; if=&quot;tests.failed&quot;&gt;
    &lt;touch file=&quot;${build.contrib.dir}/testsfailed&quot;/&gt;
    &lt;fail unless=&quot;continueOnFailure&quot;&gt;Contrib Tests failed!&lt;/fail&gt;
  &lt;/target&gt;

  &lt;!-- ================================================================== --&gt;
  &lt;!-- Clean.  Delete the build files, and their directories              --&gt;
  &lt;!-- ================================================================== --&gt;
  &lt;target name=&quot;clean&quot;&gt;
    &lt;echo message=&quot;contrib: ${name}&quot;/&gt;
    &lt;delete dir=&quot;${build.dir}&quot;/&gt;
  &lt;/target&gt;

  &lt;target name=&quot;ivy-probe-antlib&quot; &gt;
    &lt;condition property=&quot;ivy.found&quot;&gt;
      &lt;typefound uri=&quot;antlib:org.apache.ivy.ant&quot; name=&quot;cleancache&quot;/&gt;
    &lt;/condition&gt;
  &lt;/target&gt;


  &lt;target name=&quot;ivy-download&quot; description=&quot;To download ivy &quot; unless=&quot;offline&quot;&gt;
    &lt;get src=&quot;${ivy_repo_url}&quot; dest=&quot;${ivy.jar}&quot; usetimestamp=&quot;true&quot;/&gt;
  &lt;/target&gt;

  &lt;target name=&quot;ivy-init-antlib&quot; depends=&quot;ivy-download,ivy-probe-antlib&quot; unless=&quot;ivy.found&quot;&gt;
    &lt;typedef uri=&quot;antlib:org.apache.ivy.ant&quot; onerror=&quot;fail&quot;
      loaderRef=&quot;ivyLoader&quot;&gt;
      &lt;classpath&gt;
        &lt;pathelement location=&quot;${ivy.jar}&quot;/&gt;
      &lt;/classpath&gt;
    &lt;/typedef&gt;
    &lt;fail &gt;
      &lt;condition &gt;
        &lt;not&gt;
          &lt;typefound uri=&quot;antlib:org.apache.ivy.ant&quot; name=&quot;cleancache&quot;/&gt;
        &lt;/not&gt;
      &lt;/condition&gt;
      You need Apache Ivy 2.0 or later from http://ant.apache.org/
      It could not be loaded from ${ivy_repo_url}
    &lt;/fail&gt;
  &lt;/target&gt;

  &lt;target name=&quot;ivy-init&quot; depends=&quot;ivy-init-antlib&quot;&gt;
    &lt;ivy:configure settingsid=&quot;${ant.project.name}.ivy.settings&quot; file=&quot;${ivysettings.xml}&quot;/&gt;
  &lt;/target&gt;

  &lt;target name=&quot;ivy-resolve-common&quot; depends=&quot;ivy-init&quot;&gt;
    &lt;ivy:resolve settingsRef=&quot;${ant.project.name}.ivy.settings&quot; conf=&quot;common&quot; log=&quot;${loglevel}&quot;/&gt;
  &lt;/target&gt;

  &lt;target name=&quot;ivy-retrieve-common&quot; depends=&quot;ivy-resolve-common&quot;
    description=&quot;Retrieve Ivy-managed artifacts for the compile/test configurations&quot;&gt;
    &lt;ivy:retrieve settingsRef=&quot;${ant.project.name}.ivy.settings&quot;
      pattern=&quot;${build.ivy.lib.dir}/${ivy.artifact.retrieve.pattern}&quot; sync=&quot;true&quot; log=&quot;${loglevel}&quot;/&gt;
    &lt;ivy:cachepath pathid=&quot;${ant.project.name}.common-classpath&quot; conf=&quot;common&quot; /&gt;
  &lt;/target&gt;
&lt;/project&gt;
</code></pre><h4 id="3）-D-hadoop-hadoop-1-2-1-src-contrib-eclipse-plugin-META-INF-MANIFEST-MF"><a href="#3）-D-hadoop-hadoop-1-2-1-src-contrib-eclipse-plugin-META-INF-MANIFEST-MF" class="headerlink" title="3） D:\hadoop\hadoop-1.2.1\src\contrib\eclipse-plugin\META-INF\MANIFEST.MF"></a>3） D:\hadoop\hadoop-1.2.1\src\contrib\eclipse-plugin\META-INF\MANIFEST.MF</h4><pre><code>Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: MapReduce Tools for Eclipse
Bundle-SymbolicName: org.apache.hadoop.eclipse;singleton:=true
Bundle-Version: 0.18
Bundle-Activator: org.apache.hadoop.eclipse.Activator
Bundle-Localization: plugin
Require-Bundle: org.eclipse.ui,
org.eclipse.core.runtime,
org.eclipse.jdt.launching,
org.eclipse.debug.core,
org.eclipse.jdt,
org.eclipse.jdt.core,
org.eclipse.core.resources,
org.eclipse.ui.ide,
org.eclipse.jdt.ui,
org.eclipse.debug.ui,
org.eclipse.jdt.debug.ui,
org.eclipse.core.expressions,
org.eclipse.ui.cheatsheets,
org.eclipse.ui.console,
org.eclipse.ui.navigator,
org.eclipse.core.filesystem,
org.apache.commons.logging
Eclipse-LazyStart: true
Bundle-ClassPath: classes/,lib/hadoop-core.jar,lib/jackson-core-asl-1.8.8.jar ,lib/jackson-mapper-asl-1.8.8.jar, lib/commons-configuration-1.6.jar,lib/commons-lang-2.4.jar, lib/commons-httpclient-3.0.1.jar,lib/commons-cli-1.2.jar
Bundle-Vendor: Apache Hadoop
</code></pre><h3 id="3-执行ant（过程需要联网）"><a href="#3-执行ant（过程需要联网）" class="headerlink" title="3. 执行ant（过程需要联网）"></a>3. 执行ant（过程需要联网）</h3><pre><code>ant D:\hadoop\hadoop-1.2.1\src\contrib\eclipse-plugin\build.xml
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书笔记：hadoop权威指南（Hadoop The Definitive Guide）]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%9Ahadoop%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%EF%BC%88Hadoop%20The%20Definitive%20Guide%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>###第3章 Hadoop分布式文件系统</p>
<p>####3.1 Hadoop的概念</p>
<p>#####3.1.1 数据块<br>数据块默认大小64M，修改？？？<br>修改数据块的大小是为了减少磁盘寻址时间带来的消耗，但块过大会使map的数量变少（map一次处理一个block），MapReduce的效率降低。</p>
<p>#####3.1.2 NameNode和DataNode<br>HDFS的特点是采用主从结构（Master/Slave）。NameNode存储2类文件：命名空间镜像文件和操作日志文件，用于记录文件系统数及树的文件和目录。NameNode是HDFS的核心，NameNode损坏将导致整个HDFS不可用。所以需要进行备份，备份的机制有2种：将NameNode信息同时写入NFS和使用SecondaryNameNode。SecondaryNameNode通常在单独节点运行，因为需要大量的CUP与和NameNode相同大小的内存用于进行命名空间合并。SecondaryNameNode的数据滞后于NameNode，所以在恢复时需要将NFS的数据拷贝到SecondaryNameNode。</p>
<p>#####3.1.3 命令行<br>    hadoop fs [-fs <local |="" file="" system="" uri="">] [-conf <configuration file="">]<br>    [-D <property=value>] [-ls <path></path>] [-lsr <path></path>] [-du <path></path>]<br>    [-dus <path></path>] [-mv <src> <dst>] [-cp <src> <dst>] [-rm [-skipTrash] <src>]<br>    [-rmr [-skipTrash] <src>] [-put <localsrc> … <dst>] [-copyFromLocal <localsrc> … <dst>]<br>    [-moveFromLocal <localsrc> … <dst>] [-get [-ignoreCrc] [-crc] <src> <localdst><br>    [-getmerge <src> <localdst> [addnl]] [-cat <src>]<br>    [-copyToLocal [-ignoreCrc] [-crc] <src> <localdst>] [-moveToLocal <src> <localdst>]<br>    [-mkdir <path></path>] [-report] [-setrep [-R] [-w] <rep> <path file=""></path>]<br>    [-touchz <path></path>] [-test -[ezd] <path></path>] [-stat [format] <path></path>]<br>    [-tail [-f] <path></path>] [-text <path></path>]<br>    [-chmod [-R] <mode[,mode]... |="" octalmode=""> PATH…]<br>    [-chown [-R] [OWNER][:[GROUP]] PATH…]<br>    [-chgrp [-R] GROUP PATH…]<br>    [-count[-q] <path></path>]<br>    [-help [cmd]]</mode[,mode]...></rep></localdst></src></localdst></src></src></localdst></src></localdst></src></dst></localsrc></dst></localsrc></dst></localsrc></src></src></dst></src></dst></src></property=value></configuration></local></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Google地图求两点之间距离]]></title>
      <url>http://bysonline.github.io/2016/07/16/Google%E5%9C%B0%E5%9B%BE%E6%B1%82%E4%B8%A4%E7%82%B9%E4%B9%8B%E9%97%B4%E8%B7%9D%E7%A6%BB/</url>
      <content type="html"><![CDATA[<p>地球是一个近乎标准的椭球体，它的赤道半径为6378.140千米，极半径为6356.755千米，平均半径6371.004千米。如果我们假设地球是一个完美的球体，那么它的半径就是地球的平均半径，记为R。如果以0度经线为基准，那么根据地球表面任意两点的经纬度就可以计算出这两点间的地表距离（这里 忽略地球表面地形对计算带来的误差，仅仅是理论上的估算值）。设第一点A的经纬度为(LonA, LatA)，第二点B的经纬度为(LonB, LatB)，按照0度经线的基准，东经取经度的正值(Longitude)，西经取经度负值(-Longitude)，北纬取90-纬度值(90- Latitude)，南纬取90+纬度值(90+Latitude)，则经过上述处理过后的两点被计为(MLonA, MLatA)和(MLonB, MLatB)。那么根据三角推导，可以得到计算两点距离的如下公式：</p>
<pre><code>C = sin(MLatA)*sin(MLatB)*cos(MLonA-MLonB) + cos(MLatA)*cos(MLatB)

Distance = R*Arccos(C)*Pi/180
</code></pre><p>这里，R和Distance单位是相同，如果是采用6371.004千米作为半径，那么Distance就是千米为单位，如果要使用其他单位，比如mile，还需要做单位换算，1千米=0.621371192mile<br>如果仅对经度作正负的处理，而不对纬度作90-Latitude(假设都是北半球，南半球只有澳洲具有应用意义)的处理，那么公式将是：</p>
<pre><code>C = sin(LatA)*sin(LatB) + cos(LatA)*cos(LatB)*cos(MLonA-MLonB)

Distance = R*Arccos(C)*Pi/180
</code></pre><p>以上通过简单的三角变换就可以推出。</p>
<pre><code>var EARTH_RADIUS = 6378.137;
function rad(d){
    return d * Math.PI / 180.0;
}

function GetDistance(lat1, lng1, lat2, lng2){
    var radLat1 = rad(lat1);
    var radLat2 = rad(lat2);
    var a = radLat1 - radLat2;
    var b = rad(lng1) - rad(lng2);
    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +
Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
    s = s * EARTH_RADIUS;
    s = Math.round(s * 10000) / 10000;
    return s;
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hadoop 2.2.0 安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/hadoop%202.2.0%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h3><p><a href="https://archive.apache.org/dist/hadoop/common/hadoop-2.2.0/hadoop-2.2.0.tar.gz" title="hadoop-2.2.0" target="_blank" rel="external">https://archive.apache.org/dist/hadoop/common/hadoop-2.2.0/hadoop-2.2.0.tar.gz</a></p>
<p>###2. 解压</p>
<blockquote>
<p>tar -zxf hadoop-2.2.0.tar.gz</p>
<p>###3. 配置环境变量<br>HADOOP_HOME=/usr/hadoop/hadoop-2.2.0<br>配置文件路径 $HADOOP_HOME/etc/hadoop</p>
<p>###4. 修改配置文件</p>
<p>####4.1 修改core-site.xml</p>
<p>vi ./etc/hadoop/core-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;fs.defaultFS&lt;/name&gt;
        &lt;value&gt;hdfs://node1:8020&lt;/value&gt;`  
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;
        &lt;value&gt;/home/tmp/hadoop2.0&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;io.file.buffer.size&lt;/name&gt;
        &lt;value&gt;131072&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>####4.2 修改 hdfs-site.xml</p>
<blockquote>
<p>vi ./etc/hadoop/hdfs-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;dfs.replication&lt;/name&gt;
            &lt;value&gt;1&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;
        &lt;value&gt;/usr/hadoop/hadoop-2.2.0/name&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;
        &lt;value&gt;/usr/hadoop/hadoop-2.2.0/data&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;dfs.permissions&lt;/name&gt;
        &lt;value&gt;false&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>####4.3 修改 mapred-site.xml</p>
<blockquote>
<p>vi ./etc/hadoop/mapred-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;
        &lt;value&gt;yarn&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>####4.4 修改 yarn-site.xml</p>
<blockquote>
<p>vi ./etc/hadoop/yarn-site.xml</p>
</blockquote>
<pre><code>&lt;configuration&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;
        &lt;value&gt;node1:8032&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;
        &lt;value&gt;node1:8030&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;
        &lt;value&gt;node1:8031&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;
        &lt;value&gt;node1:8033&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;
        &lt;value&gt;node1:8088&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.resourcemanager.scheduler.class&lt;/name&gt;
        &lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;
        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;
    &lt;/property&gt;
    &lt;property&gt;
        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;
        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;
    &lt;/property&gt;
&lt;/configuration&gt;
</code></pre><p>###5. 设置互信</p>
<p>####5.1 生成ssh key</p>
<blockquote>
<p>ssh-keygen -t dsa -P ‘’ -f ~/.ssh/id_dsa<br>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys<br>chmod 0600 ~/.ssh/authorized_keys</p>
</blockquote>
<p>####5.2 测试ssh</p>
<blockquote>
<p>ssh localhost</p>
<p>###6. 格式化namenode</p>
<p>./bin/hdfs namenode -format</p>
</blockquote>
<p>###7. 启动namenode和datanode</p>
<blockquote>
<p>./sbin/hadoop-daemon.sh start namenode<br>./sbin/hadoop-daemon.sh start datanode<br>./sbin/yarn-daemon.sh start resourcemanager<br>./sbin/yarn-daemon.sh start nodemanager<br>./sbin/yarn-daemon.sh start proxyserver<br>./sbin/mr-jobhistory-daemon.sh start historyserver</p>
</blockquote>
<p>####8. 验证</p>
<blockquote>
<p>./bin/hdfs dfs -mkdir /user/rolex/input/<br>./bin/hdfs dfs -put ../README.txt /user/rolex/input/<br>./bin/hadoop jar ../share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar grep /user/rolex/input/README.txt /user/rolex/output/ ‘code’<br>./bin/hdfs dfs -cat /user/rolex/output/part-r-00000</p>
</blockquote>
<p>####9. 关闭</p>
<blockquote>
<p>./sbin/hadoop-daemon.sh stop namenode<br>./sbin/hadoop-daemon.sh stop datanode<br>./sbin/yarn-daemon.sh stop resourcemanager<br>./sbin/yarn-daemon.sh stop nodemanager<br>./sbin/yarn-daemon.sh stop proxyserver<br>./sbin/mr-jobhistory-daemon.sh stop historyserver  </p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hadoop练习]]></title>
      <url>http://bysonline.github.io/2016/07/16/hadoop%E7%BB%83%E4%B9%A0/</url>
      <content type="html"><![CDATA[<ol>
<li><p>根据lac_id和start_time知道用户当时的位置，根据staytime知道用户各个基站的逗留时长。根据轨迹合并连续基站的staytime。最终得到每一个用户按时间排序在每一个基站驻留时长。</p>
<p>13429100031 22554 8 2013-03-11 08:55:19.151754088 571 571 282 571<br>13429100082 22540 8 2013-03-11 08:58:20.152622488 571 571 270 571<br>13429100082 22691 8 2013-03-11 08:56:37.149593624 571 571 103 571<br>13429100087 22705 8 2013-03-11 08:56:51.139539816 571 571 220 571<br>13429100087 22540 8 2013-03-11 08:55:45.150276800 571 571 66 571<br>13429100082 22540 8 2013-03-11 08:55:38.140225200 571 571 133 571<br>13429100140 26642 9 2013-03-11 09:02:19.151754088 571 571 18 571<br>13429100082 22691 8 2013-03-11 08:57:32.151754088 571 571 287 571<br>13429100189 22558 8 2013-03-11 08:56:24.139539816 571 571 48 571<br>13429100349 22503 8 2013-03-11 08:54:30.152622440 571 571 211 571  </p>
</li>
</ol>
<pre><code>product_no lac_id moment start_time user_id county_id staytime city_id
</code></pre><ol>
<li><p>计算第四列每个元素出现的个数</p>
<p>a,b,c,d<br>b,b,f,e<br>a,a,c,f<br>b,b,f,a<br>b,b,f,e</p>
</li>
<li><p>计算高峰时间段（如上午10点-11点）哪张表被访问的最频繁，以及这段时间访问这张表最多的用户，以及这个用户的总时间开销。</p>
<p>TableName(表名)，Time(时间)，User(用户)，TimeSpan(时间开销)<br>t1 09:59:20 u1 1<br>t2 10:02:20 u4 2<br>t1 10:12:20 u3 3<br>t2 10:22:20 u3 2<br>t2 10:32:20 u2 5<br>t3 10:42:20 u1 2<br>t3 10:52:20 u2 7<br>t4 10:22:20 u1 9<br>t1 10:32:20 u4 2</p>
</li>
<li><p>输出不在Order的customer</p>
</li>
</ol>
<ol>
<li>输入2天股价波动</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[gitlab安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/gitlab%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h3><blockquote>
<p>sudo yum install curl openssh-server openssh-clients postfix cronie<br>sudo service postfix start<br>sudo chkconfig postfix on<br>sudo lokkit -s http -s ssh  </p>
</blockquote>
<h3 id="2-添加GitLab-package-server"><a href="#2-添加GitLab-package-server" class="headerlink" title="2. 添加GitLab package server"></a>2. 添加GitLab package server</h3><blockquote>
<p>curl -s <a href="https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh" target="_blank" rel="external">https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh</a> | sudo bash<br>sudo yum install gitlab-ce-8.5.0-ce.1.el6.x86_64</p>
</blockquote>
<h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h3><blockquote>
<p>sudo rpm -i gitlab-ce-8.5.0-ce.1.el6.x86_64.rpm</p>
</blockquote>
<h3 id="4-配置"><a href="#4-配置" class="headerlink" title="4. 配置"></a>4. 配置</h3><blockquote>
<p>sudo gitlab-ctl reconfigure</p>
</blockquote>
<h3 id="5-配置邮件服务"><a href="#5-配置邮件服务" class="headerlink" title="5. 配置邮件服务"></a>5. 配置邮件服务</h3><blockquote>
<p>sudo yum install postfix<br>yum install cyrus*</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git使用]]></title>
      <url>http://bysonline.github.io/2016/07/16/git%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="1-生成rsa密钥对。"><a href="#1-生成rsa密钥对。" class="headerlink" title="1. 生成rsa密钥对。"></a>1. 生成rsa密钥对。</h3><p><img src="http://7xqgix.com1.z0.glb.clouddn.com/1.png" alt="1"></p>
<h3 id="2-将公钥上传到github。"><a href="#2-将公钥上传到github。" class="headerlink" title="2. 将公钥上传到github。"></a>2. 将公钥上传到github。</h3><h3 id="3-在github上创建新repository，名字haro。本地初始化并添加远程仓库。"><a href="#3-在github上创建新repository，名字haro。本地初始化并添加远程仓库。" class="headerlink" title="3. 在github上创建新repository，名字haro。本地初始化并添加远程仓库。"></a>3. 在github上创建新repository，名字haro。本地初始化并添加远程仓库。</h3><h3 id="4-提交代码到本地master分支，再推送到远程仓库"><a href="#4-提交代码到本地master分支，再推送到远程仓库" class="headerlink" title="4. 提交代码到本地master分支，再推送到远程仓库"></a>4. 提交代码到本地master分支，再推送到远程仓库</h3><h3 id="5-创建dev分支"><a href="#5-创建dev分支" class="headerlink" title="5. 创建dev分支"></a>5. 创建dev分支</h3><h3 id="6-切换到dev分支，修改提交，合并到master分支，推送到远程仓库。"><a href="#6-切换到dev分支，修改提交，合并到master分支，推送到远程仓库。" class="headerlink" title="6. 切换到dev分支，修改提交，合并到master分支，推送到远程仓库。"></a>6. 切换到dev分支，修改提交，合并到master分支，推送到远程仓库。</h3><h3 id="7-远程覆盖本地"><a href="#7-远程覆盖本地" class="headerlink" title="7. 远程覆盖本地"></a>7. 远程覆盖本地</h3><h3 id="8-克隆远程仓库到本地"><a href="#8-克隆远程仓库到本地" class="headerlink" title="8. 克隆远程仓库到本地"></a>8. 克隆远程仓库到本地</h3><h3 id="9-删除远程分支"><a href="#9-删除远程分支" class="headerlink" title="9. 删除远程分支"></a>9. 删除远程分支</h3><h3 id="10-设置忽略文件"><a href="#10-设置忽略文件" class="headerlink" title="10. 设置忽略文件"></a>10. 设置忽略文件</h3><p>在仓库目录创建.gitignore文件，文件内容如下:</p>
<pre><code>.idea/     --忽略.idea目录
.iml     --忽略.iml文件  
target/  
.gitignore
</code></pre><p><em>该方式对所在目录和子目录有效。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[经纬度查省市县（逆编码）]]></title>
      <url>http://bysonline.github.io/2016/07/16/%E7%BB%8F%E7%BA%AC%E5%BA%A6%E6%9F%A5%E7%9C%81%E5%B8%82%E5%8E%BF%EF%BC%88%E9%80%86%E7%BC%96%E7%A0%81%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>阿里云提供的接口</p>
<p><a href="http://gc.ditu.aliyun.com/regeocoding?l=&quot;+lat+&quot;,&quot;+lng+&quot;&amp;type=010" target="_blank" rel="external">http://gc.ditu.aliyun.com/regeocoding?l=&quot;+lat+&quot;,&quot;+lng+&quot;&amp;type=010</a></p>
<p>type=010 兴趣点（poi）100代表道路，010代表POI，001代表门址，111可以同时显示前三项</p>
<p><a href="http://gc.ditu.aliyun.com/jsdoc/geocode_api.html" target="_blank" rel="external">http://gc.ditu.aliyun.com/jsdoc/geocode_api.html</a><br>行政区划：</p>
<p><a href="http://recode.ditu.aliyun.com/dist_query?l=39.938133,116.395739" target="_blank" rel="external">http://recode.ditu.aliyun.com/dist_query?l=39.938133,116.395739</a><br>//l 参数定义：纬度，经度</p>
<pre><code>public String[] getArea(float lng, float lat){
    String[] arr = new String[3];
    String path=&quot;http://gc.ditu.aliyun.com/regeocoding?l=&quot;+lat+&quot;,&quot;+lng+&quot;&amp;type=010&quot;;
    URL url= null;
    try {
        url = new URL(path);
        HttpURLConnection conn=(HttpURLConnection) url.openConnection();
        conn.setRequestMethod(&quot;GET&quot;);
        conn.setConnectTimeout(5000);
        String jsonString = &quot;&quot;;
        if(conn.getResponseCode()==200){
            BufferedReader is=new BufferedReader(new InputStreamReader(conn.getInputStream(),&quot;UTF-8&quot;));
            String str;
            if((str=is.readLine())!=null)
            {
                jsonString += str;
            }

            is.close();

            JSONObject jsonObject = JSONObject.fromObject(jsonString);
            String addrList =  jsonObject.getString(&quot;addrList&quot;);

            JSONArray jsonarry = JSONArray.fromObject(addrList);
            String poi = null;
            for(int i = 0;i&lt;jsonarry.size();i++){
                JSONObject jsonObject2 = jsonarry.getJSONObject(i);
                poi =  jsonObject2.getString(&quot;admName&quot;);
            }
            System.out.println(&quot;----------&quot;+poi);

            if(!&quot;&quot;.equals(poi)){
                String[] area = poi.split(&quot;,&quot;);
                arr[0] = area[0];
                arr[1] = area[1];

                if(area.length == 3) {
                    arr[2] = area[2];
                }

            }

        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return arr;
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[fabric安装]]></title>
      <url>http://bysonline.github.io/2016/07/16/fabric%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1. 安装依赖包"></a>1. 安装依赖包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm  </div><div class="line">sudo yum install -y python-devel  </div><div class="line">sudo yum install -y gcc  </div><div class="line">sudo yum install -y wget  </div><div class="line">sudo yum install -y python-pip</div></pre></td></tr></table></figure>
<p>###2. 安装fabric<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo pip install fabric</div></pre></td></tr></table></figure></p>
<p>###3. 验证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">python -c &quot;from fabric.api import * ; print env.version&quot;</div></pre></td></tr></table></figure>
<p>输出版本信息则安装成功。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring-data-elasticsearch示例说明]]></title>
      <url>http://bysonline.github.io/2016/07/15/spring-data-elasticsearch%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>####1. POM依赖</p>
<pre><code>&lt;properties&gt;
    &lt;java-version&gt;1.7&lt;/java-version&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;spring.version&gt;4.1.2.RELEASE&lt;/spring.version&gt;
    &lt;elasticsearch.version&gt;1.4.4&lt;/elasticsearch.version&gt;
    &lt;spring-data-elasticsearch.version&gt;1.3.4.RELEASE&lt;/spring-data-elasticsearch.version&gt;
&lt;/properties&gt;
&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
        &lt;version&gt;${spring.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;
        &lt;version&gt;${spring.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;
        &lt;version&gt;${spring.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-core&lt;/artifactId&gt;
        &lt;version&gt;${spring.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;
        &lt;version&gt;${spring.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt;
        &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt;
        &lt;version&gt;${elasticsearch.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;
        &lt;artifactId&gt;spring-data-elasticsearch&lt;/artifactId&gt;
        &lt;version&gt;${spring-data-elasticsearch.version}&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre><p>####2. spring配置文件</p>
<p>#####2.1 beans.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd&quot;&gt;
    &lt;context:annotation-config /&gt;
    &lt;!-- 自动扫描所有注解该路径 --&gt;
    &lt;!-- &lt;context:component-scan base-package=&quot;com.sf.heros.mq.*&quot; /&gt; --&gt;
    &lt;context:property-placeholder location=&quot;classpath:/config.properties&quot; /&gt;

    &lt;import resource=&quot;elasticsearch.xml&quot; /&gt;
&lt;/beans&gt;
</code></pre><p>#####2.2 elasticsearch.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:elasticsearch=&quot;http://www.springframework.org/schema/data/elasticsearch&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/data/elasticsearch http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch-1.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd&quot;&gt;

    &lt;elasticsearch:transport-client id=&quot;client&quot; cluster-name=&quot;daas&quot; cluster-nodes=&quot;192.168.11.11:9300&quot;/&gt;

    &lt;bean name=&quot;elasticsearchTemplate&quot; class=&quot;org.springframework.data.elasticsearch.core.ElasticsearchTemplate&quot;&gt;
        &lt;constructor-arg name=&quot;client&quot; ref=&quot;client&quot;/&gt;
    &lt;/bean&gt;
    &lt;bean name=&quot;entQueryService&quot; class=&quot;com.rolex.se.sample.service.EntQueryService&quot;&gt;
        &lt;property name=&quot;repository&quot; ref=&quot;entQueryRepository&quot;/&gt;
        &lt;property name=&quot;elasticsearchTemplate&quot; ref=&quot;elasticsearchTemplate&quot;/&gt;
    &lt;/bean&gt;

    &lt;elasticsearch:repositories base-package=&quot;com.rolex.se.sample.dao&quot;/&gt;


&lt;/beans&gt;
</code></pre><p>####3. 类</p>
<p>#####3.1 实体类</p>
<pre><code>package org.springframework.data.elasticsearch.entities;

import org.springframework.data.annotation.Id;
import org.springframework.data.elasticsearch.annotations.*;

import java.util.*;

@Document(indexName = &quot;pen&quot;,type = &quot;pen&quot; , shards = 1, replicas = 0, indexStoreType = &quot;memory&quot;, refreshInterval = &quot;-1&quot;)
public class Pen {

    @Id
    private String id;
    private String name;
    private Long price;
    @Field(type = FieldType.String, index = FieldIndex.not_analyzed)
    private Set&lt;String&gt; type = new HashSet&lt;String&gt;();

    public Set&lt;String&gt; getType() {
        return type;
    }

    public void setType(Set&lt;String&gt; type) {
        this.type = type;
    }

    public Pen(){}

    public Pen(String id, String name) {
        this.id = id;
        this.name = name;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Long getPrice() {
        return price;
    }

    public void setPrice(Long price) {
        this.price = price;
    }

}
</code></pre><p>#####3.2 查询类</p>
<pre><code>package org.springframework.data.elasticsearch.repositories;

import org.springframework.data.elasticsearch.entities.Pen;
import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;

public interface PenRepository extends ElasticsearchRepository&lt;Pen,String&gt; {
}
</code></pre><p>#####3.3 测试类</p>
<pre><code>package org.springframework.data.elasticsearch.repositories;

import org.elasticsearch.index.query.BoolQueryBuilder;
import org.elasticsearch.index.query.QueryBuilders;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.data.elasticsearch.entities.Pen;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import javax.annotation.Resource;
import java.util.*;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&quot;classpath:/springContext-test.xml&quot;)
public class PenRepositoryTest {

    @Resource
    private PenRepository penRepository;

    @Before
    public void emptyData(){
        penRepository.deleteAll();
    }

    @Test
    public void shouldIndexSingleBookEntity(){

        Pen pen = new Pen();
        pen.setId(&quot;123455&quot;);
        pen.setName(&quot;LIMY&quot;);
        Set&lt;String&gt; types = new HashSet&lt;String&gt;();
        types.add(&quot;E_PRI_PERSON.NAME&quot;);
        types.add(&quot;E_INV_INVESTMENT.SUBCONAM&quot;);
        pen.setType(types);
        //Indexing using sampleArticleRepository
        penRepository.save(pen);
        //lets try to search same record in elasticsearch
        Pen pen2 = penRepository.findOne(pen.getId());

        BoolQueryBuilder query = QueryBuilders.boolQuery();
            query.must(QueryBuilders.queryString(&quot;E_PRI_PERSON.NAME&quot;).field(&quot;pen.type&quot;))
            .must(QueryBuilders.queryString(&quot;E_INV_INVESTMENT.SUBCONAM&quot;).field(&quot;pen.type&quot;));



        Iterable&lt;Pen&gt; res = penRepository.search(query);

        Iterator&lt;Pen&gt; it = res.iterator();

        while (it.hasNext()){
            System.out.println(it.next().getType());
        }

    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dataengine框架结构]]></title>
      <url>http://bysonline.github.io/2016/07/15/DataEngine%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h3 id="1-数据流"><a href="#1-数据流" class="headerlink" title="1. 数据流"></a>1. 数据流</h3><p>hdfs到hbase</p>
<pre><code>HDFS-&gt;HDFSDataProvider-&gt;*DataProvider-&gt;HbaseListener-&gt;hbase
</code></pre><p>hbase到hbase</p>
<pre><code>HBase-&gt;HBaseDataProvider-&gt;*DataProvider-&gt;HbaseListener-&gt;hbase
</code></pre><p>部署<br>=</p>
<p>####执行脚本<br>    data_loader.sh E_ENT_BASEINFO 20150510 hdfs://chinadaas11:8020/hive1/user/hive/warehouse/enterprisebaseinfocollect_20150510_compare/</p>
<pre><code>data_loader.sh E_INV_INVESTMENT 20150510 hdfs://chinadaas11:8020/hive1/user/hive/warehouse/e_inv_investment_20150510_compare/

data_loader.sh E_PRI_PERSON 20150510 hdfs://chinadaas11:8020/hive1/user/hive/warehouse/e_pri_person_20150510_compare/

data_loader.sh E_GT_BASEINFO 20150510 hdfs://chinadaas11:8020/hive1/user/hive/warehouse/e_gt_baseinfo_20150510_compare/

data_loader.sh E_GT_PERSON 20150510 hdfs://chinadaas11:8020/hive1/user/hive/warehouse/e_gt_person_20150510_compare/

data_loader.sh DIS_SXBZXR 20150510 dis_sxbzxr_new_name

data_loader.sh FROST 20150510 frost_pripid

data_loader.sh IMPAWN 20150510 impawn_pripid

data_loader.sh XZCF 20150510 xzcf_pripid
</code></pre><p>http接口说明<br>=</p>
<p>####1. CL:根据用户id查监控的变更企业列表</p>
<p>#####1.1 接口说明<br>本接口用于获取用户监控名单中发生变更的企业列表。</p>
<p>#####1.2 请求类型<br>GET</p>
<p>#####1.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||<br>|uid|用户id<br>|form|起始记录<br>|to|结束记录</p>
<blockquote>
<p>业务类型参考附录1<br>起始from为0，to-from默认为10</p>
</blockquote>
<p>#####1.4 返回结果<br>参数|说明<br>-|-<br>uid|用户请求时携带的用户id<br>total|总记录数<br>begin|查询的起始记录<br>end|查询的结束记录<br>ents|用户监控名单中变更的企业的pripid列表</p>
<blockquote>
<p>返回结果为JSON格式</p>
<p>#####1.5 示例<br>请求：</p>
</blockquote>
<pre><code>GET http://localhost:8080/datum/changes?
{
    &quot;type&quot;: &quot;cl&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;61301&quot;,
        &quot;from&quot;: 1,
        &quot;to&quot;: 4
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;61301&quot;,
    &quot;total&quot;: 84,
    &quot;begin&quot;: 1,
    &quot;end&quot;: 5,
    &quot;ents&quot;: [
        &quot;110000_17DBF8047B3244ADBFB8EDB2B964B9FA&quot;,
        &quot;210000_0475ba9b-491b-415d-964b-4d6be6b88476&quot;,
        &quot;210000_0a591f44-3030-4171-aa88-7fea64c5254c&quot;,
        &quot;520000_5201005000023769&quot;
    ]
}
</code></pre><p>####2. CD:根据用户id和企业pripid获取企业的变更详情</p>
<p>#####2.1 接口说明<br>本接口用于获取用户监控名单中发生变更的企业列表。</p>
<p>#####2.2 请求类型<br>GET</p>
<p>#####2.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||参数<br>|uid|用户id<br>|pripid|企业pripid<br>|provider|查询的数据源类型</p>
<blockquote>
<p>数据源类型参考附录2</p>
<p>#####2.4 返回结果<br>参数|说明<br>-|-<br>uid|用户请求时携带的用户id<br>ent|用户请求时携带的企业pripid<br>provider|用户请求时携带的数据源类型<br>changeItems|企业变更详情根节点<br>column|变更字段<br>oldValue|变更前值<br>newValue|变更后值<br>type|变更类型</p>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####2.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/changes?
{
    &quot;type&quot;: &quot;cd&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;61301&quot;,
        &quot;pripid&quot;: &quot;210000_210200000022001120400213&quot;,
        &quot;provider&quot;: &quot;A&quot;
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;61301&quot;,
    &quot;ent&quot;: &quot;210000_0475ba9b-491b-415d-964b-4d6be6b88476&quot;,
    &quot;provider&quot;: &quot;A&quot;,
    &quot;changeItems&quot;: [
        {
            &quot;column&quot;: &quot;INDUSTRYPHY&quot;,
            &quot;newValue&quot;: &quot;H&quot;,
            &quot;oldValue&quot;: &quot;F&quot;,
            &quot;type&quot;: &quot;UPDATE&quot;
        }
    ]
}
</code></pre><p>####3. QO:根据订单id获取订单快照</p>
<p>#####3.1 接口说明<br>本接口用于获取指定id的订单快照信息。</p>
<p>#####3.2 请求类型<br>GET</p>
<p>#####3.3 输入参数<br>参数|说明<br>-|-<br>order|订单id</p>
<p>#####3.4 返回结果<br>参数|说明<br>-|-<br>orderId|用户请求时携带的订单id<br>info|订单信息</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####3.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/order/61301
</code></pre><p>响应：</p>
<pre><code>{
    &quot;orderId&quot;: &quot;61301&quot;,
    &quot;info&quot;: [
        {
        }
    ]
}
</code></pre><p>####4. SO:保存订单快照</p>
<p>#####4.1 接口说明<br>本接口用于保存订单快照信息。</p>
<p>#####4.2 请求类型<br>POST</p>
<p>#####4.3 输入参数<br>无</p>
<p>#####4.4 返回结果<br>参数|说明<br>-|-<br>orderId|订单id<br>status|操作状态，0保存成功，1保存失败</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####4.5 示例<br>请求：</p>
<pre><code>POST http://localhost:8080/datum/order
{
    &quot;orderId&quot;: &quot;SDFYGTYYTUUUWQ&quot;,
    &quot;snapshot&quot;: &quot;ORDER INFO&quot;
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;orderId&quot;: &quot;SDFYGTYYTUUUWQ&quot;,
    &quot;status&quot;: 0
}
</code></pre><p>####5.CH:查询变更历史</p>
<p>#####5.1 接口说明<br>本接口用于查询一段时间内监控企业的变更历史。</p>
<p>#####5.2 请求类型<br>GET</p>
<p>#####5.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||请求参数<br>|uid|用户id<br>|pripid|企业pripid<br>|startDate|开始日期<br>|endDate|结束日期</p>
<p>#####5.4 返回结果<br>参数|||说明<br>-|-|-|<br>uid|||用户id<br>pripid|||企业pripid<br>history|||变更历史<br>|date||时间<br>|changeItem||变更项<br>||column|数据源类型<br>||type|变更类型<br>||oldValue|旧值<br>||newValue|新值</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####5.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/changes?
{
    &quot;type&quot;: &quot;ch&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;31834&quot;,
        &quot;pripid&quot;: &quot;210000_210200000022002082100109&quot;,
        &quot;startDate&quot;: &quot;20150101&quot;,
        &quot;endDate&quot;: &quot;20160101&quot;
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;31834&quot;,
    &quot;pripid&quot;: &quot;210000_210200000022002082100109&quot;,
    &quot;history&quot;: [
        {
            &quot;date&quot;: &quot;20151214&quot;,
            &quot;changeItems&quot;: [
                {
                    &quot;column&quot;: &quot;S_EXT_SEQUENCE&quot;,
                    &quot;newValue&quot;: &quot;210000201505072002331631&quot;,
                    &quot;oldValue&quot;: &quot;210000201510092065303796&quot;,
                    &quot;type&quot;: &quot;UPDATE&quot;
                },
                {
                    &quot;column&quot;: &quot;S_EXT_TIMESTAMP&quot;,
                    &quot;newValue&quot;: &quot;2015-05-07 06:57:34.0&quot;,
                    &quot;oldValue&quot;: &quot;2015-10-09 05:38:08.0&quot;,
                    &quot;type&quot;: &quot;UPDATE&quot;
                },
                {
                    &quot;column&quot;: &quot;CERTYPE&quot;,
                    &quot;newValue&quot;: &quot;!&quot;,
                    &quot;oldValue&quot;: &quot;1&quot;,
                    &quot;type&quot;: &quot;UPDATE&quot;
                },
                {
                    &quot;column&quot;: &quot;ABUITEM&quot;,
                    &quot;newValue&quot;: &quot;&quot;,
                    &quot;oldValue&quot;: &quot;210213061&quot;,
                    &quot;type&quot;: &quot;UPDATE&quot;
                }
            ]
        }
    ]
}
</code></pre><p>####6.QA:查询企业基本信息</p>
<p>#####6.1 接口说明<br>本接口用于查询企业基本信息。</p>
<p>#####6.2 请求类型<br>GET</p>
<p>#####6.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||请求参数<br>|pripid|企业pripid</p>
<p>#####6.4 返回结果<br>参数|说明<br>-|-<br>ENTNAME|企业名称<br>…|</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####6.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/query?
{
    &quot;type&quot;: &quot;qa&quot;,
    &quot;params&quot;: {
        &quot;pripid&quot;: &quot;210000_210200000022002082100109&quot;
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;version&quot;: 5,
    &quot;minSize&quot;: 75,
    &quot;S_EXT_NODENUM&quot;: &quot;&quot;,
    &quot;PRIPID&quot;: &quot;&quot;,
    &quot;S_EXT_SEQUENCE&quot;: &quot;&quot;,
    &quot;ENTNAME&quot;: &quot;大连站商场&quot;,
    &quot;ORIREGNO&quot;: &quot;&quot;,
    &quot;REGNO&quot;: &quot;24129465&quot;,
    &quot;ENTTYPE&quot;: &quot;3200&quot;,
    &quot;PPRIPID&quot;: &quot;&quot;,
    &quot;PENTNAME&quot;: &quot;&quot;,
    &quot;PREGNO&quot;: &quot;&quot;,
    &quot;HYPOTAXIS&quot;: &quot;&quot;,
    &quot;INDUSTRYPHY&quot;: &quot;F&quot;,
    &quot;INDUSTRYCO&quot;: &quot;5139&quot;,
    &quot;ABUITEM&quot;: &quot;&quot;,
    &quot;CBUITEM&quot;: &quot;&quot;,
    &quot;OPFROM&quot;: &quot;1899-12-30&quot;,
    &quot;OPTO&quot;: &quot;1899-12-30&quot;,
    &quot;POSTALCODE&quot;: &quot;&quot;,
    &quot;TEL&quot;: &quot;3631881-3157&quot;,
    &quot;EMAIL&quot;: &quot;&quot;,
    &quot;LOCALADM&quot;: &quot;210200&quot;,
    &quot;CREDLEVEL&quot;: &quot;&quot;,
    &quot;ASSDATE&quot;: &quot;1900-01-01&quot;,
    &quot;ESDATE&quot;: &quot;1899-12-30&quot;,
    &quot;APPRDATE&quot;: &quot;1899-12-30&quot;,
    &quot;REGORG&quot;: &quot;210200&quot;,
    &quot;ENTCAT&quot;: &quot;1&quot;,
    &quot;ENTSTATUS&quot;: &quot;3&quot;,
    &quot;REGCAP&quot;: &quot;10&quot;,
    &quot;OPSCOPE&quot;: &quot;百货&quot;,
    &quot;OPFORM&quot;: &quot;&quot;,
    &quot;OPSCOANDFORM&quot;: &quot;&quot;,
    &quot;PTBUSSCOPE&quot;: &quot;&quot;,
    &quot;DOMDISTRICT&quot;: &quot;210202&quot;,
    &quot;DOM&quot;: &quot;大连市中山区长江路２６１号&quot;,
    &quot;ECOTECDEVZONE&quot;: &quot;&quot;,
    &quot;DOMPRORIGHT&quot;: &quot;02&quot;,
    &quot;OPLOCDISTRICT&quot;: &quot;&quot;,
    &quot;OPLOC&quot;: &quot;&quot;,
    &quot;RECCAP&quot;: &quot;0&quot;,
    &quot;INSFORM&quot;: &quot;&quot;,
    &quot;PARNUM&quot;: &quot;0&quot;,
    &quot;PARFORM&quot;: &quot;&quot;,
    &quot;EXENUM&quot;: &quot;0&quot;,
    &quot;EMPNUM&quot;: &quot;0&quot;,
    &quot;SCONFORM&quot;: &quot;&quot;,
    &quot;FORCAPINDCODE&quot;: &quot;&quot;,
    &quot;MIDPREINDCODE&quot;: &quot;&quot;,
    &quot;PROTYPE&quot;: &quot;&quot;,
    &quot;CONGRO&quot;: &quot;0&quot;,
    &quot;CONGROCUR&quot;: &quot;&quot;,
    &quot;CONGROUSD&quot;: &quot;0&quot;,
    &quot;REGCAPUSD&quot;: &quot;0&quot;,
    &quot;REGCAPCUR&quot;: &quot;&quot;,
    &quot;REGCAPRMB&quot;: &quot;0&quot;,
    &quot;FORREGCAPCUR&quot;: &quot;&quot;,
    &quot;FORREGCAPUSD&quot;: &quot;0&quot;,
    &quot;FORRECCAPUSD&quot;: &quot;0&quot;,
    &quot;WORCAP&quot;: &quot;0&quot;,
    &quot;CHAMECDATE&quot;: &quot;1900-01-01&quot;,
    &quot;OPRACTTYPE&quot;: &quot;&quot;,
    &quot;FORENTNAME&quot;: &quot;&quot;,
    &quot;DEPINCHA&quot;: &quot;大连市公安局&quot;,
    &quot;COUNTRY&quot;: &quot;&quot;,
    &quot;ITEMOFOPORCPRO&quot;: &quot;&quot;,
    &quot;CONOFCONTRPRO&quot;: &quot;&quot;,
    &quot;FORDOM&quot;: &quot;&quot;,
    &quot;FORREGECAP&quot;: &quot;0&quot;,
    &quot;FOROPSCOPE&quot;: &quot;&quot;,
    &quot;S_EXT_ENTPROPERTY&quot;: &quot;&quot;,
    &quot;S_EXT_TIMESTAMP&quot;: &quot;2015-05-07 06:57:34.0&quot;,
    &quot;S_EXT_BATCH&quot;: &quot;&quot;,
    &quot;S_EXT_VALIDFLAG&quot;: &quot;1&quot;,
    &quot;S_EXT_INDUSCAT&quot;: &quot;3&quot;,
    &quot;S_EXT_ENTTYPE&quot;: &quot;A02&quot;,
    &quot;MANACATE&quot;: &quot;&quot;,
    &quot;LIMPARNUM&quot;: &quot;0&quot;,
    &quot;FOREIGNBODYTYPE&quot;: &quot;&quot;,
    &quot;ENTNAME_OLD&quot;: &quot;大连站商场&quot;,
    &quot;PERSON_ID&quot;: &quot;&quot;,
    &quot;NAME&quot;: &quot;刘玉芳&quot;,
    &quot;CERTYPE&quot;: &quot;!&quot;,
    &quot;CERNO&quot;: &quot;&quot;,
    &quot;ANCHEYEAR&quot;: &quot;\\N&quot;,
    &quot;CANDATE&quot;: &quot;1996-10-11&quot;,
    &quot;REVDATE&quot;: &quot;\\N&quot;,
    &quot;RECORD_STAT&quot;: &quot;0&quot;,
    &quot;RECORD_DESC&quot;: &quot;&quot;,
    &quot;ORGCODES&quot;: &quot;&quot;,
    &quot;CREDITCODE&quot;: &quot;&quot;
}
</code></pre><p>####7.CA:按地区统计变更企业数量</p>
<p>#####7.1 接口说明<br>本接口用于按统计每个地区某一批次数据的变更企业数量。</p>
<p>#####7.2 请求类型<br>GET</p>
<p>#####7.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||请求参数<br>|uid|用户id<br>|date|批次</p>
<p>#####7.4 返回结果<br>参数|说明<br>-|-<br>uid|用户id<br>date|批次<br>data|<k,v>，k为地区代码，v为企业变更量</k,v></p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####7.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/countup?
{
    &quot;type&quot;: &quot;ca&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;61301&quot;,
        &quot;date&quot;: &quot;20151214&quot;
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;61301&quot;,
    &quot;date&quot;: &quot;20151214&quot;,
    &quot;data&quot;: {
        &quot;210000&quot;: 490
    }
}
</code></pre><p>####8.CC:统计变更量</p>
<p>#####8.1 接口说明<br>本接口用于按统计某一批次数据的用户监控企业的字段变更量。</p>
<p>#####8.2 请求类型<br>GET</p>
<p>#####8.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||请求参数<br>|uid|用户id<br>|date|批次</p>
<p>#####8.4 返回结果<br>参数|说明<br>-|-<br>uid|用户id<br>date|批次<br>count|字段变更量</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####8.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/countup?
{
    &quot;type&quot;: &quot;cc&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;61301&quot;,
        &quot;date&quot;: &quot;20151214&quot;
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;61301&quot;,
    &quot;date&quot;: &quot;20151214&quot;,
    &quot;count&quot;: 4486
}
</code></pre><p>####9.CI:按指标统计企业变更数量</p>
<p>#####9.1 接口说明<br>本接口用于按统计某一批次数据的某些指标变更的企业。</p>
<p>#####9.2 请求类型<br>GET</p>
<p>#####9.3 输入参数<br>参数||说明<br>-|-|-<br>type||业务类型<br>params||请求参数<br>|uid|用户id<br>|date|批次</p>
<p>#####9.4 返回结果<br>参数|说明<br>-|-<br>uid|用户id<br>date|批次<br>count|企业变更数量<br>ents|数组，企业pirpid</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####9.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/countup?
{
    &quot;type&quot;: &quot;ci&quot;,
    &quot;params&quot;: {
        &quot;uid&quot;: &quot;61301&quot;,
        &quot;date&quot;: &quot;20151214&quot;,
        &quot;indicators&quot;: [
            &quot;ABUITEM&quot;,
            &quot;REGORG&quot;
        ]
    }
}
</code></pre><p>响应：</p>
<pre><code>{
    &quot;uid&quot;: &quot;61301&quot;,
    &quot;date&quot;: &quot;20151214&quot;,
    &quot;count&quot;: 38,
    &quot;ents&quot;: [
        &quot;210000_21021100001200103070022X&quot;,
        &quot;210000_210283000022012011800252&quot;,
        ...
    ]
}
</code></pre><p>####10. SE:检索</p>
<p>#####10.1 接口说明<br>本接口用于提供模糊检索。查询字段为：名称，注册号、组织机构代码，统一社会信用代码。<br>命中规则：wd为检索关键字，名称中包含wd或注册号、组织机构代码、统计社会信用代码以wd开头的记录为命中。</p>
<p>#####10.2 请求类型<br>GET</p>
<p>#####10.3 输入参数<br>参数|说明<br>-|-<br>wd|检索的关键字</p>
<p>#####10.4 返回结果<br>参数||说明<br>-|-|<br>wd||检索的关键字<br>results||检索结果<br>|score|评分<br>|pripid|主体id<br>|ename|主体名称<br>|regNo|注册号<br>|orgCode|组织机构代码<br>|creditCode|统一社会信用代码</p>
<blockquote>
<p>返回结果为JSON格式</p>
</blockquote>
<p>#####10.5 示例<br>请求：</p>
<pre><code>GET http://localhost:8080/datum/search?wd=辽宁
</code></pre><p>响应：</p>
<pre><code>{
    &quot;wd&quot;: &quot;辽宁&quot;,
    &quot;results&quot;: [
        {
            &quot;score&quot;: 0.13453172,
            &quot;pripid&quot;: &quot;210000_210202000011998102800195&quot;,
            &quot;ename&quot;: &quot;辽宁书画院&quot;,
            &quot;regNo&quot;: &quot;210202000022199&quot;,
            &quot;orgCode&quot;: &quot;&quot;,
            &quot;creditCode&quot;: &quot;&quot;
        },
        {
            &quot;score&quot;: 0.13453172,
            &quot;pripid&quot;: &quot;210000_210282000011980120100222&quot;,
            &quot;ename&quot;: &quot;辽宁盐业机械厂&quot;,
            &quot;regNo&quot;: &quot;11873106&quot;,
            &quot;orgCode&quot;: &quot;&quot;,
            &quot;creditCode&quot;: &quot;&quot;
        },
        {
            &quot;score&quot;: 0.13453172,
            &quot;pripid&quot;: &quot;210000_210202000011961030100026&quot;,
            &quot;ename&quot;: &quot;辽宁电位器厂&quot;,
            &quot;regNo&quot;: &quot;2102021100676&quot;,
            &quot;orgCode&quot;: &quot;&quot;,
            &quot;creditCode&quot;: &quot;&quot;
        },
        {
            &quot;score&quot;: 0.13453172,
            &quot;pripid&quot;: &quot;210000_21020200001199308260074X&quot;,
            &quot;ename&quot;: &quot;辽宁万宁国际运输公司&quot;,
            &quot;regNo&quot;: &quot;2102021105329&quot;,
            &quot;orgCode&quot;: &quot;&quot;,
            &quot;creditCode&quot;: &quot;&quot;
        },
        {
            &quot;score&quot;: 0.13453172,
            &quot;pripid&quot;: &quot;210000_210211000011900010101767&quot;,
            &quot;ename&quot;: &quot;辽宁无线电二厂&quot;,
            &quot;regNo&quot;: &quot;11857934&quot;,
            &quot;orgCode&quot;: &quot;&quot;,
            &quot;creditCode&quot;: &quot;&quot;
        }
    ]
}
</code></pre><p>remote接口说明<br>=</p>
<p>####1. 使用方法<br>实例化com.daas.data.business.RemoteBusiness</p>
<pre><code>RemoteBusiness remoteBusiness = SpringUtil.getAc().getBean(RemoteBusiness.class);
</code></pre><p>####2. 方法说明</p>
<p>#####2.1 查询变更列表<br>    public Changes findChanges(String uid, int from, int to);</p>
<p>#####2.2 查询变更明细<br>    public ChangeDetails findDetails(String uid, String pripid, String provider);</p>
<p>#####2.3 查企业基本信息<br>    public EntInfo findEntInfo(String pripid);</p>
<p>#####2.4 抓取订单快照<br>    public Order fetch(String orderId);</p>
<p>#####2.5 保存订单快照<br>    public Order save(String orderId, String snapshot);</p>
<p>#####2.6 查询一段时间企业变更历史<br>    public History changeHistory(String uid, String pripid, String startDate, String endDate);</p>
<p>#####2.7 统计某批次用户监控企业的字段变更量（按变更字段统计，有一项变更计算一次）<br>    public CountUp countUpByChangeItem(String uid, String date);</p>
<p>#####2.8 指标统计<br>    public CountUp countUpByIndicator(String uid, String date, String… indicator);</p>
<p>#####2.9 按地区统计变更企业数量<br>    public CountUp countUpByArea(String uid, String date);</p>
<p>#####附录1：业务类型</p>
<table>
<thead>
<tr>
<th>业务名称</th>
<th>类型</th>
<th>代码</th>
</tr>
</thead>
<tbody>
<tr>
<td>查询基本信息</td>
<td>query</td>
</tr>
<tr>
<td>查询企业基本信息</td>
<td></td>
<td>qa</td>
</tr>
<tr>
<td>查询法人信息</td>
<td></td>
<td>qp</td>
</tr>
<tr>
<td>查询对外投资信息</td>
<td></td>
<td>qi</td>
</tr>
<tr>
<td>查询个体工商户信息</td>
<td></td>
<td>qb</td>
</tr>
<tr>
<td>查询个体经营者信息</td>
<td></td>
<td>qg</td>
</tr>
<tr>
<td>查询订单快照</td>
<td></td>
<td>qo</td>
</tr>
<tr>
<td>查询变更</td>
<td>changes</td>
<td></td>
</tr>
<tr>
<td>查询变更列表</td>
<td></td>
<td>cl</td>
</tr>
<tr>
<td>查询变更详情</td>
<td></td>
<td>cd</td>
</tr>
<tr>
<td>查询变更历史</td>
<td></td>
<td>ch</td>
</tr>
<tr>
<td>保存</td>
<td>save</td>
</tr>
<tr>
<td>保存订单快照</td>
<td></td>
<td>so</td>
</tr>
<tr>
<td>统计</td>
<td>countup</td>
<td></td>
</tr>
<tr>
<td>按地区统计</td>
<td></td>
<td>ca</td>
</tr>
<tr>
<td>按指标统计</td>
<td></td>
<td>ci</td>
</tr>
<tr>
<td>统计变更量</td>
<td></td>
<td>cc</td>
</tr>
<tr>
<td>检索</td>
<td>search</td>
<td>se</td>
</tr>
</tbody>
</table>
<p>#####附录2：数据源类型<br>数据源名称|英文|代码<br>-|-|-<br>企业基本信息|E_ENT_BASEINFO|A<br>主要人员信息|E_PRI_PERSON|B<br>对外投资|E_INV_INVESTMENT|C<br>个体工商户基本信息|E_GT_BASEINFO|D<br>个体经营者基本信息|E_GT_PERSON|E<br>股权冻结|FROST|G<br>股权出质|IMPAWN|H<br>行政处罚|XZCF|I<br>失信被执行人|DIS_SXBZXR|J<br>变更推送|PUSH_CHANGE|F</p>
<p>#####附录3：表</p>
<table>
<thead>
<tr>
<th>表名</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>meta</td>
<td>元数据表</td>
</tr>
<tr>
<td>m_gs_change</td>
<td>工商数据变更汇总表</td>
</tr>
<tr>
<td>m_non_gs_change</td>
<td>非工商数据变更汇总表</td>
</tr>
<tr>
<td>p_change</td>
<td>变更推送表</td>
</tr>
<tr>
<td>xzcf_pripid</td>
<td>行政处罚索引表</td>
</tr>
<tr>
<td>xzcf</td>
<td>行政处罚数据表</td>
</tr>
<tr>
<td>frost_pripid</td>
<td>股权冻结索引表</td>
</tr>
<tr>
<td>frost</td>
<td>股权冻结数据表</td>
</tr>
<tr>
<td>impawn_pripid</td>
<td>股权出质索引表</td>
</tr>
<tr>
<td>impawn</td>
<td>股权出质数据表</td>
</tr>
<tr>
<td>dis_sxbzxr_new_name</td>
<td>失信被执行人索引表</td>
</tr>
<tr>
<td>ENTERPRISEBASEINFOCOLLECT<em>ENTNAME</em>$DATE</td>
<td>失信被执行人字典表</td>
</tr>
<tr>
<td>dis_sxbzxr_new</td>
<td>失信被执行人数据表</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu 16.04 软件安装及配置]]></title>
      <url>http://bysonline.github.io/2016/07/15/ubuntu%2016.04%20%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="0-更新源"><a href="#0-更新源" class="headerlink" title="0. 更新源"></a>0. 更新源</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><div class="line">sudo cp <span class="regexp">/etc/</span>apt<span class="regexp">/sources.list /</span>etc<span class="regexp">/apt/</span>sources.list_bak</div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="code"><pre><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates main restricted</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates main restricted</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial multiverse</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates multiverse</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-updates multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-backports main restricted universe multiverse</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.sohu.com/ubuntu/ xenial-backports main restricted universe multiverse</span></div><div class="line"></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial main multiverse restricted universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-backports main multiverse restricted universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-proposed main multiverse restricted universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-security main multiverse restricted universe</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-updates main multiverse restricted universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial main multiverse restricted universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-backports main multiverse restricted universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-proposed main multiverse restricted universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-security main multiverse restricted universe</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirror.bjtu.edu.cn/ubuntu/ xenial-updates main multiverse restricted universe</span></div></pre></td></tr></table></figure>
<figure class="highlight q"><table><tr><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></div></pre></td></tr></table></figure>
<p>###1. 安装搜狗输入法</p>
<blockquote>
<p>sudo apt-get install fcitx libssh2-1</p>
</blockquote>
<p>####1.1 下载deb包</p>
<p>####1.2 安装</p>
<blockquote>
<p>sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb</p>
<p>####1.3 设置<br>打开语言支持，键盘输入法系统选择fcitx。<br>    打开fcitx配置，添加搜狗输入法，注销后生效。</p>
</blockquote>
<p>###2. 安装Unity Tweak Tool<br>启动器图标单击收起。minimize single window applications on click</p>
<p>###3. 删除libreoffice</p>
<blockquote>
<p>sudo apt-get remove libreoffice-common</p>
<p>###4. 删除Amazon的链接<br>sudo apt-get remove unity-webapps-common</p>
<p>###5. 深度清理用不上的应用程序<br>sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install</p>
<p>sudo apt-get remove onboard deja-dup</p>
</blockquote>
<p>###6. 安装Terminator</p>
<p>###7. 安装WPS Office<br><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">dpkg</span> <span class="selector-tag">-i</span> <span class="selector-tag">wps-office_10</span><span class="selector-class">.1</span><span class="selector-class">.0</span><span class="selector-class">.5444</span>~<span class="selector-tag">a20_amd64</span><span class="selector-class">.deb</span></div></pre></td></tr></table></figure></p>
<p>wps不能输入中文<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">sudo gedit /usr/bin/wps</div><div class="line"></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></div><div class="line"><span class="built_in">export</span> QT_IM_MODULE=<span class="string">"fcitx"</span></div><div class="line">gOpt=</div><div class="line"><span class="comment">#gOptExt=-multiply</span></div><div class="line">gTemplateExt=(<span class="string">"wpt"</span> <span class="string">"dot"</span> <span class="string">"dotx"</span>)</div></pre></td></tr></table></figure></p>
<p>###8. 安装git</p>
<blockquote>
<p>sudo apt-get install git</p>
<p>###9. 安装Java</p>
<p>###10. 安装字体</p>
<p>####10.1 将windows字体拷贝到/usr/share/fonts/windows/</p>
<p>####10.2 修改权限<br><figure class="highlight dts"><table><tr><td class="code"><pre><div class="line">sudo chmod <span class="number">664</span> <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/fonts/</span>windows<span class="comment">/*</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>####10.3 安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/share/fonts/windows/</div><div class="line">sudo mkfontscale</div><div class="line">sudo mkfontdir</div><div class="line">sudo <span class="built_in">fc</span>-cache -fv</div></pre></td></tr></table></figure></p>
<p>###11. 安装haroopad<br>编辑区主题 paraiso-darkdark</p>
<p>###12. 安装unrar</p>
<blockquote>
<p>sudo apt-get install unrar</p>
<p>###13. 安装idea</p>
<p>###14. 安装mysql客户端navicat</p>
<p>###15. 安装maven</p>
<p>###16. 安装vmware</p>
<p>###17. 安装docker 未完成</p>
<p>###18. 安装node.js</p>
<p>###19. 安装gulp</p>
<p>###20. linux版百度网盘 bcloud</p>
<p>###21. thunderbird</p>
<p>####21.1 添加插件<br>Thunderbird Conversations<br>Manually Sort Folders<br>Color Folders<br>Extra Folder Columns<br>LookOut<br>ViewAbout<br>Theme Font &amp; Size Changer  </p>
</blockquote>
<p>####21.2 去除签名档之前的分割符<br>mail.identity.default.suppress_signature_separator=true</p>
<p>###22. 关闭系统错误报告</p>
<blockquote>
<p>sudo rm /var/crash/*<br>    sudo gedit /etc/default/apport</p>
</blockquote>
<p>修改enabled=1为enabled=0</p>
<p>###23. dash不搜索第三方应用</p>
<blockquote>
<p>wget -q -O - <a href="https://fixUbuntu.com/fixubuntu.sh" target="_blank" rel="external">https://fixUbuntu.com/fixubuntu.sh</a> | bash</p>
</blockquote>
<p>###24. chrome<br><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">sudo wget http<span class="variable">s:</span>//repo.fdzh.org/chrome/google-chrome.<span class="keyword">list</span> -<span class="keyword">P</span> /etc/apt/sources.<span class="keyword">list</span>.d/</div><div class="line">wget -q -O - http<span class="variable">s:</span>//<span class="keyword">dl</span>.google.<span class="keyword">com</span>/linux/linux_signing_key.pub  | sudo apt-key <span class="built_in">add</span> -</div><div class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></div><div class="line">sudo apt-<span class="built_in">get</span> install google-chrome-stable</div></pre></td></tr></table></figure></p>
<h3 id="25-plank"><a href="#25-plank" class="headerlink" title="25. plank"></a>25. plank</h3><p>安装<br><figure class="highlight smali"><table><tr><td class="code"><pre><div class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:docky-core/stable</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install plank</div></pre></td></tr></table></figure></p>
<p>设置开机启动<br>dash中搜索启动应用程序，添加plank路径/usr/bin/plank</p>
<h3 id="26-关闭utc"><a href="#26-关闭utc" class="headerlink" title="26. 关闭utc"></a>26. 关闭utc</h3><p>/etc/default/rcS<br><figure class="highlight ini"><table><tr><td class="code"><pre><div class="line"><span class="attr">utc</span>=<span class="literal">no</span></div></pre></td></tr></table></figure></p>
<h3 id="27-uGet"><a href="#27-uGet" class="headerlink" title="27. uGet"></a>27. uGet</h3><h3 id="28-fileZilla"><a href="#28-fileZilla" class="headerlink" title="28. fileZilla"></a>28. fileZilla</h3><h3 id="29-MySQL-Workbench"><a href="#29-MySQL-Workbench" class="headerlink" title="29. MySQL Workbench"></a>29. MySQL Workbench</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[制作docker镜像：ubuntu14.04 + ssh镜像]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E5%88%B6%E4%BD%9Cdocker%E9%95%9C%E5%83%8F%EF%BC%9Aubuntu14.04%20+%20ssh%E9%95%9C%E5%83%8F/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><figure class="highlight stata"><table><tr><td class="code"><pre><div class="line"><span class="keyword">mkdir</span> ubuntu</div><div class="line"><span class="keyword">cd</span> ubuntu</div><div class="line">touch Dockerfile <span class="keyword">run</span>.<span class="keyword">sh</span> sources.<span class="keyword">list</span> authorized_keys</div></pre></td></tr></table></figure>
<p><strong><em>Dockerfile</em></strong><br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><div class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">14.04</span></div><div class="line"></div><div class="line"><span class="keyword">MAINTAINER</span> rolex</div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">rm /etc/apt/sources.list</span></div><div class="line"></div><div class="line"><span class="keyword">ADD</span> <span class="bash">sources.list /etc/apt/sources.list</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">apt-get update</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">sudo apt-get install -y openssh-server</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash">mkdir -p /var/run/sshd</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash">mkdir -p /root/.ssh</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">sed -ri <span class="string">'s/session required pam_loginuid.so/#session required pam_loginuid.so/g'</span> /etc/pam.d/sshd</span></div><div class="line"></div><div class="line"><span class="keyword">ADD</span> <span class="bash">authorized_keys /root/.ssh/authorized_keys</span></div><div class="line"><span class="keyword">ADD</span> <span class="bash">run.sh /run.sh</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash">chmod 755 /run.sh</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">groupadd dockerone</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash">useradd -g dockerone dockerone</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash"><span class="built_in">echo</span> <span class="string">"dockerone:dockerone"</span> | chpasswd</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash"><span class="built_in">echo</span> <span class="string">"root:dockerone"</span> | chpasswd</span></div><div class="line"></div><div class="line"><span class="keyword">EXPOSE</span> <span class="number">22</span></div><div class="line"></div><div class="line"><span class="keyword">CMD</span> <span class="bash">[<span class="string">"/run.sh"</span>]</span></div></pre></td></tr></table></figure></p>
<p><strong><em>run.sh</em></strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">/usr/sbin/sshd -D</div></pre></td></tr></table></figure></p>
<p><strong><em>sources.list</em></strong><br><figure class="highlight groovy"><table><tr><td class="code"><pre><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span></div></pre></td></tr></table></figure></p>
<p><strong><em>authorized_keys</em></strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">ssh-keygen -t rsa</div><div class="line">cat ~/.ssh/id_rsa<span class="selector-class">.pub</span> &gt; authorized_keys</div></pre></td></tr></table></figure>
<h3 id="2-创建镜像"><a href="#2-创建镜像" class="headerlink" title="2. 创建镜像"></a>2. 创建镜像</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><div class="line"><span class="symbol">sudo</span> docker <span class="keyword">build </span>-t ubuntu_14.<span class="number">04</span> .</div></pre></td></tr></table></figure>
<h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h3><figure class="highlight less"><table><tr><td class="code"><pre><div class="line">sudo docker run -d -p <span class="attribute">10122</span>:<span class="number">22</span> ubuntu_14.<span class="number">04</span></div><div class="line"></div><div class="line">ssh dockerone<span class="variable">@localhost</span> -p <span class="number">10122</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[制作docker镜像：创建tomcat镜像]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E5%88%B6%E4%BD%9Cdocker%E9%95%9C%E5%83%8F%EF%BC%9A%E5%88%9B%E5%BB%BAtomcat%E9%95%9C%E5%83%8F/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><h4 id="1-1-创建制作docker镜像的工作目录和文件"><a href="#1-1-创建制作docker镜像的工作目录和文件" class="headerlink" title="1.1 创建制作docker镜像的工作目录和文件"></a>1.1 创建制作docker镜像的工作目录和文件</h4><figure class="highlight stata"><table><tr><td class="code"><pre><div class="line"><span class="keyword">mkdir</span> dorckerfiles</div><div class="line"><span class="keyword">cd</span> dockerfiles</div><div class="line">touch Dockerfile <span class="keyword">run</span>.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
<p><strong><em>Dockerfile</em></strong><br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><div class="line"><span class="keyword">FROM</span> ubuntu_14.<span class="number">04</span></div><div class="line"></div><div class="line"><span class="keyword">MAINTAINER</span> rolex</div><div class="line"></div><div class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND noninteractive</div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash"><span class="built_in">echo</span> <span class="string">"Asia/Beijing"</span> &gt; /etc/timezone &amp;&amp; dpkg-reconfigure <span class="_">-f</span> noninteractive tzdata</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">apt-get install -yq --no-install-recommends wget pwgen ca-certificates &amp;&amp; apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*</span></div><div class="line"></div><div class="line"><span class="keyword">ENV</span> CATALINA_HOME /tomcat</div><div class="line"><span class="keyword">ENV</span> JAVA_HOME /jdk</div><div class="line"></div><div class="line"><span class="keyword">ADD</span> <span class="bash">apache-tomcat-8.0.35 /tomcat</span></div><div class="line"><span class="keyword">ADD</span> <span class="bash">jdk1.8.0_74 /jdk</span></div><div class="line"></div><div class="line"><span class="comment">#ADD create_tomcat_admin_user.sh /create_tomcat_admin_user.sh</span></div><div class="line"><span class="keyword">ADD</span> <span class="bash">run.sh /run.sh</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">chmod +x /*.sh</span></div><div class="line"><span class="keyword">RUN</span> <span class="bash">chmod +x /tomcat/bin/*.sh</span></div><div class="line"></div><div class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></div><div class="line"></div><div class="line"><span class="keyword">CMD</span> <span class="bash">[<span class="string">"/run.sh"</span>]</span></div></pre></td></tr></table></figure></p>
<p><strong><em>run.sh</em></strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">/user/sbin/sshd -D &amp;</div><div class="line"><span class="built_in">exec</span> <span class="variable">$&#123;CATALINA_HOME&#125;</span>/bin/catalina.sh run</div></pre></td></tr></table></figure></p>
<h4 id="1-2-下载tomcat和jdk"><a href="#1-2-下载tomcat和jdk" class="headerlink" title="1.2 下载tomcat和jdk"></a>1.2 下载tomcat和jdk</h4><h3 id="2-制作镜像"><a href="#2-制作镜像" class="headerlink" title="2. 制作镜像"></a>2. 制作镜像</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><div class="line"><span class="symbol">sudo</span> docker <span class="keyword">build </span>-t tomcat8_on_ubuntu .</div></pre></td></tr></table></figure>
<h3 id="3-运行镜像"><a href="#3-运行镜像" class="headerlink" title="3. 运行镜像"></a>3. 运行镜像</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">sudo docker run -<span class="selector-tag">p</span> <span class="number">32700</span>:<span class="number">8080</span> tomcat8_on_ubuntu</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自定义图片背景的button]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E7%89%87%E8%83%8C%E6%99%AF%E7%9A%84button/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义图片背景的button</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> Rolex</div><div class="line"> * <span class="doctag">@date</span> 2011-9-23</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BitmapBackgroundButtonField</span> <span class="keyword">extends</span> <span class="title">Field</span> </span>&#123;      </div><div class="line">    <span class="keyword">private</span> String _label;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _labelHeight;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _labelWidth;</div><div class="line">    <span class="keyword">private</span> Font _font;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Bitmap _currentBitmap;</div><div class="line">    <span class="keyword">private</span> Bitmap _onBitmap;</div><div class="line">    <span class="keyword">private</span> Bitmap _offBitmap;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Constructor.</div><div class="line">     * <span class="doctag">@param</span> text The text to be displayed on the button</div><div class="line">     * <span class="doctag">@param</span> style Combination of field style bits to specify display attributes</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BitmapBackgroundButtonField</span><span class="params">(String text, <span class="keyword">long</span> style,Bitmap bitmap1, Bitmap bitmap2)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">super</span>(style);</div><div class="line"></div><div class="line">        _font = getFont();</div><div class="line">        _label = text;</div><div class="line">        _labelHeight = _font.getHeight();</div><div class="line">        _labelWidth = _font.getAdvance(_label);</div><div class="line">        _onBitmap = bitmap1;</div><div class="line">        _offBitmap = bitmap2;</div><div class="line">        _currentBitmap = _offBitmap;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@return</span> The text on the button</div><div class="line">     */</div><div class="line">    <span class="function">String <span class="title">getText</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> _label;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#getPreferredHeight()</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPreferredHeight</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">90</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#getPreferredWidth()</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPreferredWidth</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">70</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.  Changes the picture when focus is gained.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#onFocus(int)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onFocus</span><span class="params">(<span class="keyword">int</span> direction)</span></span></div><div class="line">    &#123;</div><div class="line">      _currentBitmap = _onBitmap;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.  Changes picture back when focus is lost.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#onUnfocus()</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onUnfocus</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">      _currentBitmap = _offBitmap;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#drawFocus(Graphics, boolean)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">drawFocus</span><span class="params">(Graphics graphics, <span class="keyword">boolean</span> on)</span></span></div><div class="line">    &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#layout(int, int)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">layout</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span></div><div class="line">    &#123;</div><div class="line">        setExtent(Math.min( width, getPreferredWidth()),</div><div class="line">        Math.min( height, getPreferredHeight()));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Field implementation.</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#paint(Graphics)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics graphics)</span></span></div><div class="line">    &#123;      </div><div class="line">        <span class="comment">// First draw the background colour and picture</span></div><div class="line">        graphics.setColor(Color.WHITE);</div><div class="line">        graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, getWidth(), getHeight());</div><div class="line">        graphics.drawBitmap(<span class="number">0</span>, <span class="number">0</span>, getWidth(), getHeight(), _currentBitmap, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line"></div><div class="line">        <span class="comment">// Then draw the text</span></div><div class="line">        graphics.setColor(Color.BLACK);</div><div class="line">        graphics.setFont(_font.derive(Font.BOLD, <span class="number">13</span>));</div><div class="line"></div><div class="line"><span class="comment">//        graphics.drawText(_label, 4, 70,</span></div><div class="line"><span class="comment">//            (int)( getStyle() &amp; DrawStyle.ELLIPSIS | DrawStyle.HALIGN_MASK ),</span></div><div class="line"><span class="comment">//            getWidth() - 6 );</span></div><div class="line">        graphics.drawText(_label, <span class="number">0</span>, _currentBitmap.getHeight() + <span class="number">4</span>, graphics.HCENTER);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Overridden so that the Event Dispatch thread can catch this event</div><div class="line">     * instead of having it be caught here..</div><div class="line">     * <span class="doctag">@see</span> net.rim.device.api.ui.Field#navigationClick(int, int)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">navigationClick</span><span class="params">(<span class="keyword">int</span> status, <span class="keyword">int</span> time)</span></span></div><div class="line">    &#123;</div><div class="line">        fieldChangeNotify(<span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[制作docker镜像：elasticsearch添加head插件]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E5%88%B6%E4%BD%9Cdocker%E9%95%9C%E5%83%8F%EF%BC%9Aelasticsearch%E6%B7%BB%E5%8A%A0head%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><figure class="highlight stata"><table><tr><td class="code"><pre><div class="line"><span class="keyword">mkdir</span> dockerfiles/elasticsearch</div><div class="line">touch Dockerfile</div><div class="line">wget -O elasticsearch-head-master.<span class="keyword">zip</span> -c https:<span class="comment">//codeload.github.com/mobz/elasticsearch-head/zip/master</span></div></pre></td></tr></table></figure>
<p><strong><em>Dockerfile</em></strong><br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><div class="line"><span class="keyword">FROM</span> elasticsearch</div><div class="line"><span class="keyword">MAINTAINER</span> rolex</div><div class="line"></div><div class="line"><span class="keyword">ADD</span> <span class="bash">elasticsearch-head-master.zip /elasticsearch-head-master.zip</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">/usr/share/elasticsearch/bin/plugin install file:/elasticsearch-head-master.zip</span></div><div class="line"></div><div class="line"><span class="keyword">RUN</span> <span class="bash">rm <span class="_">-f</span> /elasticsearch-head-master.zip</span></div><div class="line"></div><div class="line"><span class="keyword">EXPOSE</span> <span class="number">9200</span> <span class="number">9300</span></div><div class="line"></div><div class="line"><span class="keyword">CMD</span> <span class="bash">[/usr/share/elasticsearch/bin/elasticsearch]</span></div></pre></td></tr></table></figure></p>
<h3 id="2-创建docker镜像"><a href="#2-创建docker镜像" class="headerlink" title="2. 创建docker镜像"></a>2. 创建docker镜像</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><div class="line"><span class="symbol">sudo</span> docker <span class="keyword">build </span>-t elasticsearch-<span class="number">2</span>.<span class="number">3</span> .</div></pre></td></tr></table></figure>
<h3 id="3-启动"><a href="#3-启动" class="headerlink" title="3. 启动"></a>3. 启动</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> elasticsearch<span class="number">-2.3</span> <span class="comment">--publish=[19200:9200,19300:9300]</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[elasticsearch检索]]></title>
      <url>http://bysonline.github.io/2016/07/15/elasticsearch%E6%A3%80%E7%B4%A2/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-精确查询"><a href="#1-精确查询" class="headerlink" title="1. 精确查询"></a>1. 精确查询</h3><pre><code>public void query(String name, String queryString){
    QueryBuilder queryBuilder = QueryBuilders.queryString(queryString).field(name);
    SearchResponse response = client.prepareSearch(index).setTypes(type)
            .setQuery(queryBuilder).execute().actionGet();
    System.out.println(response.getHits().totalHits());//命中个数
    System.out.println(response.getHits().getAt(0).getId());//获取id
    System.out.println(response.getHits().getAt(0).getSource().get(&quot;column&quot;));//获取column的值
    System.out.println(response.toString());//结果json串
}
</code></pre><h3 id="2-范围查询"><a href="#2-范围查询" class="headerlink" title="2. 范围查询"></a>2. 范围查询</h3><pre><code>public void queryRange(String name, String start, String end){
    QueryBuilder queryBuilder = QueryBuilders.rangeQuery(name).from(start).to(end);
    SearchResponse response = client.prepareSearch(index).setTypes(type)
            .setQuery(queryBuilder).execute().actionGet();
    System.out.println(response.getHits().totalHits());
    System.out.println(response.getHits().getAt(0).getId());
    System.out.println(response.getHits().getAt(0).getSource().get(&quot;column&quot;));
    System.out.println(response.toString());
}
</code></pre><h3 id="3-分页"><a href="#3-分页" class="headerlink" title="3. 分页"></a>3. 分页</h3><pre><code>public void queryPagination(int begin, int pageSize){
    QueryBuilder queryBuilder = QueryBuilders.rangeQuery(&quot;date&quot;).from(&quot;20150101&quot;).to(&quot;20160101&quot;);
    SearchResponse response = client.prepareSearch(index).setTypes(type).setFrom(begin).setSize(pageSize)
            .setQuery(queryBuilder).execute().actionGet();
    System.out.println(response.getHits().totalHits());
    System.out.println(response.getHits().getAt(0).getId());
    System.out.println(response.getHits().getAt(0).getSource().get(&quot;column&quot;));
    System.out.println(response.toString());
}
</code></pre><h3 id="4-组合查询"><a href="#4-组合查询" class="headerlink" title="4. 组合查询"></a>4. 组合查询</h3><pre><code>public void queryComplex(){
    //查询date在20150101到20160101之间并且pripid等于510000_CD6022264999并且变更字段为PRIPERSON的记录
    final BoolQueryBuilder query = new BoolQueryBuilder();
    query.must(QueryBuilders.queryString(&quot;510000_CD6022264999&quot;).field(&quot;pripid&quot;));
    query.must(QueryBuilders.rangeQuery(&quot;date&quot;).from(&quot;20150101&quot;).to(&quot;20160101&quot;));
    query.must(QueryBuilders.queryString(&quot;PRIPERSON&quot;).field(&quot;column&quot;));

    SearchResponse response = client.prepareSearch(index).setTypes(type)
            .setQuery(query)
            .execute().actionGet();
    long hits = response.getHits().totalHits();
    if(hits &gt; 0) {
        System.out.println(response.getHits().getAt(0).getId());
        System.out.println(response.getHits().getAt(0).getSource().get(&quot;column&quot;));
        System.out.println(response.toString());
    }
}
</code></pre><h3 id="5-前缀查询"><a href="#5-前缀查询" class="headerlink" title="5. 前缀查询"></a>5. 前缀查询</h3><pre><code>public void queryByPrefix(String name, String prefix){
    QueryBuilder queryBuilder = QueryBuilders.prefixQuery(name, prefix);
    SearchResponse response = client.prepareSearch(index).setTypes(type)
            .setQuery(queryBuilder).execute().actionGet();
    System.out.println(response.getHits().totalHits());
}
</code></pre><h3 id="6-id查询"><a href="#6-id查询" class="headerlink" title="6. id查询"></a>6. id查询</h3><pre><code>public void queryIds(String... ids){
    QueryBuilder queryBuilder = QueryBuilders.idsQuery(type).addIds(ids);
    SearchResponse response = client.prepareSearch(index)
            .setQuery(queryBuilder).execute().actionGet();
    System.out.println(response.getHits().totalHits());
    System.out.println(response.getHits().getAt(0).getId());
    System.out.println(response.getHits().getAt(0).getSource().get(&quot;column&quot;));
    System.out.println(response.toString());
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ELK日志分析系统搭建和使用]]></title>
      <url>http://bysonline.github.io/2016/07/15/ELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-下载logstash"><a href="#1-下载logstash" class="headerlink" title="1. 下载logstash"></a>1. 下载logstash</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull logstash</div></pre></td></tr></table></figure>
<h3 id="2-下载elasticsearch"><a href="#2-下载elasticsearch" class="headerlink" title="2. 下载elasticsearch"></a>2. 下载elasticsearch</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull elasticsearch</div></pre></td></tr></table></figure>
<h3 id="3-下载kibana"><a href="#3-下载kibana" class="headerlink" title="3. 下载kibana"></a>3. 下载kibana</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull kibana</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[windows 安装compass and scss]]></title>
      <url>http://bysonline.github.io/2016/07/15/windows%20%E5%AE%89%E8%A3%85compass%20and%20scss/</url>
      <content type="html"><![CDATA[<p>####1. 安装ruby</p>
<p>compass是ruby的插件，需要先安装ruby环境。</p>
<p>#####1.1 下载ruby</p>
<p><a href="http://rubyinstaller.org/" target="_blank" rel="external">http://rubyinstaller.org/</a></p>
<p>#####1.2 添加环境变量<br>安装完成后添加环境变量</p>
<pre><code>RUBY_HOME=D:\Ruby23-x64
path=$path;%RUBY_HOME%\bin
</code></pre><p>执行ruby -v 显示版本号则安装成功。</p>
<p>####2. 添加证书</p>
<p>#####2.1 下载证书</p>
<p>从<a href="http://curl.haxx.se/ca/cacert.pem" target="_blank" rel="external">http://curl.haxx.se/ca/cacert.pem</a>下载证书，保存到ruby安装目录。</p>
<p>#####2.2 添加环境变量</p>
<pre><code>SSL_CERT_FILE=D:\Ruby23-x64\cacert.pem
</code></pre><p>####3. 修改源</p>
<pre><code>gem sources --remove https://rubygems.org/
gem sources -a https://ruby.taobao.org/
gem sources -l
</code></pre><p>####4. 安装compass</p>
<pre><code>gem install compass
</code></pre><p>sass -v显示版本号则安装成功。正常情况compass和scss都会安装。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring-data-redis示例说明]]></title>
      <url>http://bysonline.github.io/2016/07/15/spring-data-redis%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>####1. POM</p>
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;
    &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;
    &lt;version&gt;1.6.4.RELEASE&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;redis.clients&lt;/groupId&gt;
    &lt;artifactId&gt;jedis&lt;/artifactId&gt;
    &lt;version&gt;2.6.2&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><p>####2. 配置文件</p>
<p>#####2.1 redis.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;&gt;


    &lt;context:property-placeholder location=&quot;classpath:config.properties&quot;/&gt;
    &lt;bean id=&quot;jedisPoolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;
        &lt;property name=&quot;maxTotal&quot; value=&quot;${redis.cache.pool.maxTotal}&quot; /&gt;
        &lt;property name=&quot;maxIdle&quot; value=&quot;${redis.cache.pool.maxIdle}&quot; /&gt;
        &lt;property name=&quot;maxWaitMillis&quot; value=&quot;${redis.cache.pool.maxWaitMillis}&quot; /&gt;
        &lt;property name=&quot;testOnBorrow&quot; value=&quot;${redis.cache.pool.testOnBorrow}&quot; /&gt;
    &lt;/bean&gt;

    &lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;
        &lt;property name=&quot;keySerializer&quot;&gt;
            &lt;bean class=&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot;/&gt;
        &lt;/property&gt;
        &lt;property name=&quot;valueSerializer&quot;&gt;
            &lt;bean class=&quot;org.springframework.data.redis.serializer.JdkSerializationRedisSerializer&quot;/&gt;
        &lt;/property&gt;
        &lt;property name=&quot;connectionFactory&quot; ref=&quot;jedisConnectionFactory&quot;/&gt;
    &lt;/bean&gt;

    &lt;bean id=&quot;jedisConnectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;&gt;
        &lt;property name=&quot;hostName&quot; value=&quot;${redis.cache.ip}&quot; /&gt;
        &lt;property name=&quot;port&quot; value=&quot;${redis.cache.port}&quot; /&gt;
        &lt;property name=&quot;usePool&quot; value=&quot;${redis.cache.usePool}&quot;/&gt;
        &lt;property name=&quot;poolConfig&quot; ref=&quot;jedisPoolConfig&quot; /&gt;
    &lt;/bean&gt;

    &lt;bean id=&quot;queryCacheRepository&quot; class=&quot;com.daas.data.dao.repository.QueryCacheRepository&quot;&gt;&lt;/bean&gt;

&lt;/beans&gt;
</code></pre><p>#####2.2 properties文件</p>
<pre><code>#redis配置
redis.cache.pool.maxTotal=1024
redis.cache.pool.maxIdle=200
redis.cache.pool.maxWaitMillis=1000
redis.cache.pool.testOnBorrow=true
redis.cache.ip=192.168.11.21
redis.cache.port=6379
redis.cache.usePool=true
</code></pre><p>####3. 类</p>
<p>#####3.1 实体类<br>    /*</p>
<pre><code> * @(#)QueryCache.java    1.0 2016/3/8
 *
 */
package com.daas.data.engine.entity.redis;

import java.io.Serializable;

/**
 * Created with IntelliJ IDEA.
 * User: rolex
 * Date: 2016/3/8
 * version: 1.0
 */
public class QueryCache implements Serializable{

    String id;
    String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }
}
</code></pre><p>#####3.2 查询类</p>
<pre><code>/*
 * @(#)QueryCacheRepository.java    1.0 2016/3/8
 *
 */
package com.daas.data.dao.repository;

import com.daas.data.engine.entity.redis.QueryCache;
import org.springframework.data.redis.core.RedisTemplate;

import javax.annotation.Resource;

/**
 * Created with IntelliJ IDEA.
 * User: rolex
 * Date: 2016/3/8
 * version: 1.0
 */
public class QueryCacheRepository {

    @Resource
    private RedisTemplate&lt;String, QueryCache&gt; redisTemplate;

    public void set(QueryCache qc){
        redisTemplate.opsForValue().set(qc.getId(), qc);

    }

    public QueryCache get(String id){
        return redisTemplate.opsForValue().get(id);
    }
}
</code></pre><p>#####3.3 测试类</p>
<pre><code>/*
 * @(#)DataBusinessTest.java    1.0 2016/3/4
 *
 */
package com.daas.data.business;

import com.daas.data.dao.repository.QueryCacheRepository;
import com.daas.data.engine.entity.redis.QueryCache;
import org.elasticsearch.search.aggregations.InternalAggregation;
import org.hamcrest.core.IsEqual;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import javax.annotation.Resource;
import java.io.IOException;

import static org.junit.Assert.assertThat;


/**
 * Created with IntelliJ IDEA.
 * User: rolex
 * Date: 2016/3/4
 * version: 1.0
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&quot;classpath:redis-test.xml&quot;)
public class RedisServiceTest {


    @Resource
    QueryCacheRepository queryCacheRepository;

    @Before
    public void before() {
        QueryCache qc = new QueryCache();
        qc.setId(&quot;123&quot;);
        qc.setValue(&quot;test&quot;);
        queryCacheRepository.set(qc);
    }

    @Test
    public void testGet() throws IOException {
        QueryCache qc = queryCacheRepository.get(&quot;123&quot;);
        System.out.println(qc.getValue());
        assertThat(qc.getValue(), new IsEqual(&quot;test&quot;));

    }

}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UAT部署说明]]></title>
      <url>http://bysonline.github.io/2016/07/15/UAT%E9%83%A8%E7%BD%B2%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>####1.创建用户和组<br>创建ops，application用户</p>
<blockquote>
<p>cd /home<br>groupadd ops<br>useradd -g ops ops<br>useradd -g ops application</p>
</blockquote>
<p>添加sudo权限</p>
<blockquote>
<p>visudo</p>
</blockquote>
<pre><code>ops     ALL=NOPASSWD:   ALL -- sudo时不需要密码
</code></pre><p>设置ops用户口令</p>
<blockquote>
<p>passwd ops</p>
</blockquote>
<p>####2. 建立互信</p>
<blockquote>
<p>ssh-keygen</p>
</blockquote>
<p>将ssh公钥内容拷贝至/home/ops/.ssh/下authorized_keys（若文件不存在，则新建）中</p>
<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4jWPNAwuWGf/WeJqF24yfXfhOizrHsDKIBb5/dasyX8KoUrvxGu60+XHgjcavnzjUihBUNdkWFXTUHFvMzkUZ3jhgMyX8s+ILll8jwCnCYPRprjEqDX+BCj/JVEVIhwb6qHQUV5KVi1d2cVG+OAXlY4quQgxKG1aoAu2bNAKrJHP85BAJ5KbE0oCJmqJGs3OzvFR7CzklYHdehdLwwQPaAvMG1bsTgenoPJnOQlps0H627itQPRMUv/mCzNvUWuQBwcBWMXrHtjS5VGe/3KDJFoYQPHzTAy9k4LG1gO+aYDaX+hYxB5sSoS4y3VT/mh4bgac/qClcs4fWm8RVbyPDQ== ops@chinadaas20
</code></pre><p>####3. 执行部署</p>
<p>#####3.1 安装db(MySQL)</p>
<blockquote>
<p>fab -f fabfile_uat.py install_mysql</p>
</blockquote>
<p>#####3.2 安装redis</p>
<blockquote>
<p>fab -f fabfile_uat.py install_redis<br>fab -f fabfile_uat.py sync_redis_conf</p>
</blockquote>
<p>启动</p>
<blockquote>
<p>fab -f fabfile_uat.py start:redis,roles=redis</p>
</blockquote>
<p>#####3.3 安装search</p>
<blockquote>
<p>fab -f fabfile_uat.py install_search<br>fab -f fabfile_uat.py install_search_service</p>
</blockquote>
<p>启动</p>
<blockquote>
<p>fab -f fabfile_uat.py start:elasticsearch,roles=search</p>
</blockquote>
<p>#####3.4 安装nginx</p>
<blockquote>
<p>fab -f fabfile_uat.py install_nginx<br>fab -f fabfile_uat.py sync_nginx_conf</p>
</blockquote>
<p>准备app directory</p>
<blockquote>
<p>fab -f fabfile_uat.py setup<br>fab -f fabfile_uat.py install_web_service</p>
<p>fab -f fabfile_uat.py start:nginx,roles=web</p>
</blockquote>
<p>#####3.5 执行脚本<br>登录192.168.11.20<br>ops/daas@2015</p>
<blockquote>
<p>cd risk-bell<br>./deploy2uat.sh</p>
</blockquote>
<p>#####3.6 修改配置文件</p>
<blockquote>
<p>vi ./config/elasticsearch.yml</p>
</blockquote>
<pre><code>cluster.name: daas  
node.name: chinadaas01
network.host: 192.168.200.163
discovery.zen.ping.unicast.hosts: [&quot;192.168.200.163&quot;,&quot;192.168.200.164&quot;,&quot;192.168.200.165&quot;,&quot;192.168.200.166&quot;]
discovery.zen.minimum_master_nodes: 4
</code></pre><p>所有机器执行相同配置，ip和node.name改成对应机器的ip。</p>
<p>####4. 执行</p>
<p>#####4.1 环境准备</p>
<pre><code>/opt/data-engine/current/bin/init.sh
</code></pre><p>#####4.2 在uat环境执行compare过程和创建用户清单</p>
<pre><code>/opt/data-engine/current/bin/batch_compare_loader.sh 20150510000000
</code></pre><p>#####4.3 完成后执行变更推送</p>
<pre><code>/opt/data-engine/current/bin/push.sh 20150510000000
</code></pre><p>#####4.4 启动web程序</p>
<pre><code>/opt/data-engine/current/bin/product.sh
</code></pre><p>####5. 测试</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL-5.7.11-winx64 zip版安装]]></title>
      <url>http://bysonline.github.io/2016/07/15/MySQL-5.7.11-winx64%20zip%E7%89%88%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<blockquote>
<p>OS : Windows 10 x64</p>
</blockquote>
<p>####1. 解压</p>
<p>解压路径为 <strong>%MYSQL_HOME%</strong></p>
<p>####2. 配置环境变量</p>
<p>add <strong>%MYSQL_HOME%\bin</strong> to path</p>
<p>####3. 修改my.ini</p>
<p>拷贝my-default.ini为my.ini</p>
<pre><code>basedir = D:\Program Files\MySQL\mysql-5.7.11-winx64
datadir =  D:\Program Files\MySQL\mysql-5.7.11-winx64\data
port = 3306
</code></pre><p>####4. 初始化</p>
<blockquote>
<p>mysqld –initialize –user=mysql –console</p>
</blockquote>
<p>记录末尾的初始密码</p>
<p>####5. 安装服务</p>
<blockquote>
<p>mysqld –install MySQL</p>
</blockquote>
<p>####6. 启动</p>
<blockquote>
<p>net start mysql</p>
</blockquote>
<p>####7. 登录</p>
<blockquote>
<p>mysql -u root -p</p>
</blockquote>
<p>####8. 修改密码</p>
<blockquote>
<p>set password for root@localhost = password(‘123456’);</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用 docker + redis 学习 redis-cli]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E4%BD%BF%E7%94%A8%20docker%20+%20redis%20%E5%AD%A6%E4%B9%A0%20redis-cli1/</url>
      <content type="html"><![CDATA[<p>有时我们不想在自己机器上安装redis环境又想快速开始redis-cli实践，如果安装了docker环境，那么redis的环境将非常容易搭建。</p>
<h3 id="1-下载redis的docker镜像"><a href="#1-下载redis的docker镜像" class="headerlink" title="1. 下载redis的docker镜像"></a>1. 下载redis的docker镜像</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull redis</div></pre></td></tr></table></figure>
<h3 id="2-启动redis-server"><a href="#2-启动redis-server" class="headerlink" title="2. 启动redis server"></a>2. 启动redis server</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -d <span class="comment">--name redisone redis redis-server</span></div></pre></td></tr></table></figure>
<h3 id="3-启动redis-cli"><a href="#3-启动redis-cli" class="headerlink" title="3. 启动redis cli"></a>3. 启动redis cli</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--link redisone redis redic-cli -h redisone -p 6379</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用 docker + redis 学习 redis-cli]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E4%BD%BF%E7%94%A8%20docker%20+%20redis%20%E5%AD%A6%E4%B9%A0%20redis-cli0/</url>
      <content type="html"><![CDATA[<p>有时我们不想在自己机器上安装redis环境又想快速开始redis-cli实践，如果安装了docker环境，那么redis的环境将非常容易搭建。</p>
<h3 id="1-下载redis的docker镜像"><a href="#1-下载redis的docker镜像" class="headerlink" title="1. 下载redis的docker镜像"></a>1. 下载redis的docker镜像</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull redis</div></pre></td></tr></table></figure>
<h3 id="2-启动redis-server"><a href="#2-启动redis-server" class="headerlink" title="2. 启动redis server"></a>2. 启动redis server</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -d <span class="comment">--name redisone redis redis-server</span></div></pre></td></tr></table></figure>
<h3 id="3-启动redis-cli"><a href="#3-启动redis-cli" class="headerlink" title="3. 启动redis cli"></a>3. 启动redis cli</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--link redisone redis redic-cli -h redisone -p 6379</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用 docker + redis 学习 redis-cli]]></title>
      <url>http://bysonline.github.io/2016/07/15/%E4%BD%BF%E7%94%A8%20docker%20+%20redis%20%E5%AD%A6%E4%B9%A0%20redis-cli/</url>
      <content type="html"><![CDATA[<p>有时我们不想在自己机器上安装redis环境又想快速开始redis-cli实践，如果安装了docker环境，那么redis的环境将非常容易搭建。</p>
<h3 id="1-下载redis的docker镜像"><a href="#1-下载redis的docker镜像" class="headerlink" title="1. 下载redis的docker镜像"></a>1. 下载redis的docker镜像</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">sudo</span> docker pull redis</div></pre></td></tr></table></figure>
<h3 id="2-启动redis-server"><a href="#2-启动redis-server" class="headerlink" title="2. 启动redis server"></a>2. 启动redis server</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -d <span class="comment">--name redisone redis redis-server</span></div></pre></td></tr></table></figure>
<h3 id="3-启动redis-cli"><a href="#3-启动redis-cli" class="headerlink" title="3. 启动redis cli"></a>3. 启动redis cli</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><div class="line">sudo docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--link redisone redis redic-cli -h redisone -p 6379</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IDEA + Maven + Jetty 热部署]]></title>
      <url>http://bysonline.github.io/2016/07/15/IDEA%20+%20Maven%20+%20Jetty%20%E7%83%AD%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<p>####1. 集成</p>
<p>pom.xml</p>
<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;
            &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;8.1.15.v20140411&lt;/version&gt;
            &lt;configuration&gt;
                &lt;connectors&gt;
                    &lt;!-- 修改端口 --&gt;
                    &lt;connector implementation=&quot;org.eclipse.jetty.server.nio.SelectChannelConnector&quot;&gt;
                        &lt;port&gt;8080&lt;/port&gt;
                    &lt;/connector&gt;
                &lt;/connectors&gt;
                &lt;stopKey&gt;exit&lt;/stopKey&gt;
                &lt;stopPort&gt;9090&lt;/stopPort&gt;
                &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;
                &lt;webAppConfig&gt;
                    &lt;!-- 热部署 --&gt;
                    &lt;defaultsDescriptor&gt;src/main/resources/webdefault.xml&lt;/defaultsDescriptor&gt;
                    &lt;contextPath&gt;/redis-doc&lt;/contextPath&gt;
                &lt;/webAppConfig&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker笔记]]></title>
      <url>http://bysonline.github.io/2016/07/14/docker%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h4><h4 id="2-几个命令"><a href="#2-几个命令" class="headerlink" title="2. 几个命令"></a>2. 几个命令</h4><pre><code>sudo docker version
sudo docker info
sudo docker images
sudo docker pull elasticsearch:latest
sudo docker run elasticsearch
</code></pre><h4 id="3-修改elasticsearch镜像"><a href="#3-修改elasticsearch镜像" class="headerlink" title="3. 修改elasticsearch镜像"></a>3. 修改elasticsearch镜像</h4><p>如何安装elasticsearch插件，然后发布成自己的镜像</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[elasticsearch-2.2.0安装]]></title>
      <url>http://bysonline.github.io/2016/07/14/elasticsearch-2.1.1%20%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h3><p><a href="https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.2.0/elasticsearch-2.2.0.tar.gz" title="elasticsearch-2.2.0" target="_blank" rel="external">https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.2.0/elasticsearch-2.2.0.tar.gz</a></p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><blockquote>
<p>tar -zxf elasticsearch-2.2.0.tar.gz</p>
</blockquote>
<h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h3><blockquote>
<p>vi ./config/elasticsearch.yml</p>
</blockquote>
<pre><code>cluster.name: elsticsearch  
node.name: chinadaas01
network.host: 192.168.200.163
discovery.zen.ping.unicast.hosts: [&quot;192.168.200.163&quot;,&quot;192.168.200.164&quot;,&quot;192.168.200.165&quot;,&quot;192.168.200.166&quot;]
</code></pre><h3 id="4-安装插件"><a href="#4-安装插件" class="headerlink" title="4. 安装插件"></a>4. 安装插件</h3><h4 id="4-1-下载"><a href="#4-1-下载" class="headerlink" title="4.1 下载"></a>4.1 下载</h4><blockquote>
<p>wget <a href="https://github.com/mobz/elasticsearch-head.git" target="_blank" rel="external">https://github.com/mobz/elasticsearch-head.git</a></p>
<h4 id="4-2-安装"><a href="#4-2-安装" class="headerlink" title="4.2 安装"></a>4.2 安装</h4><p>elasticsearch提供了两种安装方式，在线安装总失败，所以选离线安装。<br>./bin/plugin install file:./elasticsearch-head-master.zip</p>
</blockquote>
<h3 id="5-集群搭建"><a href="#5-集群搭建" class="headerlink" title="5. 集群搭建"></a>5. 集群搭建</h3><p>其他机器执行相同配置，ip和node.name改成对应机器的ip。</p>
<h3 id="6-启动"><a href="#6-启动" class="headerlink" title="6. 启动"></a>6. 启动</h3><blockquote>
<p>./bin/elasticsearch &amp;</p>
</blockquote>
<p>浏览器中使用 <code>http://192.168.200.163:9200/_plugin/head/</code> 可看到界面</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[github + hexo 搭建 markdown 博客系统]]></title>
      <url>http://bysonline.github.io/2016/07/14/github%20+%20hexo%20%E6%90%AD%E5%BB%BA%20markdown%20%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<p>为了更好的积累和保存学习笔记，需要满足以下要求：</p>
<ol>
<li>免费；</li>
<li>界面漂亮</li>
<li>能使用markdown语法书写；</li>
<li>能够导出到evernote。</li>
</ol>
<p>试了很多markdown的博客系统，在线编辑器，markdown软件，都无法满足，后来发现了Hexo。</p>
<p>Hexo是一个 markdown 博客系统，初步了解优点如下：</p>
<ol>
<li>没有数据库，直接保存 markdown 文件，所以迁移应该很方便；</li>
<li>可以自选theme；</li>
<li>在没有网络主机的情况下，可在本地搭建博客系统，通过github页可以实现远程备份；</li>
<li>开源。</li>
</ol>
<p>以上基本可以满足个人需求。</p>
<p>##如何搭建本地Hexo环境？</p>
<p>搭建Hexo环境很简单，Hexo是基于nodejs的，所以首先需要有node环境，如何安装node可参考<a href="www.aaa.com">源码编译安装nodejs</a>。</p>
<h3 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1. 安装Hexo"></a>1. 安装Hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install hexo -g</div></pre></td></tr></table></figure>
<h3 id="2-升级"><a href="#2-升级" class="headerlink" title="2. 升级"></a>2. 升级</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm update hexo -g</div></pre></td></tr></table></figure>
<h3 id="3-初始化"><a href="#3-初始化" class="headerlink" title="3. 初始化"></a>3. 初始化</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mkdir hexo</div><div class="line">cd hexo</div><div class="line">hexo init</div></pre></td></tr></table></figure>
<h3 id="4-生成"><a href="#4-生成" class="headerlink" title="4. 生成"></a>4. 生成</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo generate</div><div class="line">or</div><div class="line">hexo g</div></pre></td></tr></table></figure>
<h3 id="5-启动服务"><a href="#5-启动服务" class="headerlink" title="5. 启动服务"></a>5. 启动服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo server</div><div class="line">or</div><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>启动后可在<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>访问。</p>
<h2 id="如何更换主题"><a href="#如何更换主题" class="headerlink" title="如何更换主题"></a>如何更换主题</h2><p>Hexo有很多主题，<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a>网站上列举了一些主题，并带有效果展示。如果没有中意的主题，可以继续google一下。</p>
<p>安装主题方法也很简单，以 maupassant 为例：</p>
<h3 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cd hexo/themes</div><div class="line">git clone git@github.com:tufu9441/maupassant-hexo.git maupassant</div><div class="line">npm install hexo-renderer-jade --save</div><div class="line">npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure>
<h3 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2.更换主题"></a>2.更换主题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">vi hexo/_config.yml</div><div class="line"></div><div class="line">language: zh-CN</div><div class="line">theme: maupassant</div></pre></td></tr></table></figure>
<p>从新启动后可看到效果。</p>
<h2 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h2><p>现在可以开始写第一篇博客了，使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo new helloworld</div><div class="line">or</div><div class="line">hexo n helloworld</div></pre></td></tr></table></figure></p>
<p>就创建了一篇新博客，存放在 <strong>hexo/source/_posts/</strong> 下，刷新网页可看到效果。</p>
<h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><p>使用github的好处除了进行远程备份之外，还能直接通过github网站访问博客，非常方便。</p>
<h3 id="1-修改配置"><a href="#1-修改配置" class="headerlink" title="1. 修改配置"></a>1. 修改配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">vi hexo/_config.yml</div><div class="line"></div><div class="line">url: http://bysonline.github.io</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:bsyonline/bsyonline.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<h3 id="2-部署"><a href="#2-部署" class="headerlink" title="2. 部署"></a>2. 部署</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>完成之后可以访问bsyonline.github.io看到效果。<br>注：github的仓库名字必须是xxx.github.io</p>
<p>至此，本地的hexo博客系统就搭建好了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[elasticsearch-1.4.1 集群环境搭建]]></title>
      <url>http://bysonline.github.io/2016/07/14/elasticsearch%201.4.1%20%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<blockquote>
<p>CentOS 6.4，机器 node3（10.20.20.203）,node4（10.20.20.204）</p>
</blockquote>
<p>####1. 安装jdk</p>
<p>已安装跳过。</p>
<p>####2. 下载</p>
<p><a href="https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.4.1.tar.gz" title="elasticsearch-1.4.1" target="_blank" rel="external">https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.4.1.tar.gz</a></p>
<p>####3. 解压</p>
<blockquote>
<p>tar -zxf elasticsearch-1.4.1.tar.gz</p>
</blockquote>
<p>####4. 配置</p>
<p>分别修改2台机器配置</p>
<p>node3</p>
<pre><code>cluster.name: elasticsearch
node.name: node3
network.host: 10.20.20.203  
discovery.zen.ping.unicast.hosts: [&quot;10.20.20.203&quot;]
</code></pre><p>node4</p>
<pre><code>cluster.name: elasticsearch
node.name: node4
network.host: 10.20.20.204  
discovery.zen.ping.unicast.hosts: [&quot;10.20.20.204&quot;]
</code></pre><p>####5. 安装插件</p>
<p>#####5.1 下载</p>
<blockquote>
<p>wget <a href="https://github.com/mobz/elasticsearch-head.git" target="_blank" rel="external">https://github.com/mobz/elasticsearch-head.git</a></p>
</blockquote>
<p>#####5.2 安装</p>
<p>将插件elasticsearch-head-master.zip拷贝到plugin,解压缩</p>
<blockquote>
<p>unzip elasticsearch-head-master.zip<br>mv elasticsearch-head-master head</p>
</blockquote>
<p>2台机器执行相同操作</p>
<p>####6. 启动</p>
<blockquote>
<p>./bin/elasticsearch &amp;</p>
</blockquote>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <url>http://bysonline.github.io/about/index.html</url>
      <content type="html"><![CDATA[<p><i class="fa fa-github"> github : <br></i></p>
<p><i class="fa fa-envelope"> 邮箱：xxx@xxx.com<br></i></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>http://bysonline.github.io/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[history]]></title>
      <url>http://bysonline.github.io/history/index.html</url>
      <content type="html"><![CDATA[<ol>
<li><p>aaaaa</p>
</li>
<li><p>bbbbb</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://bysonline.github.io/guitar/index.html</url>
      <content type="html"><![CDATA[<p><img src="http://7xqgix.com1.z0.glb.clouddn.com/Guitar-1600x2560.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://bysonline.github.io/read/index.html</url>
      <content type="html"><![CDATA[<p><img src="http://7xqgix.com1.z0.glb.clouddn.com/09e41a58d5afb10d75e67ec34fa3e0a0.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>http://bysonline.github.io/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
