<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>比不写强</title>
  <subtitle>Java 编程相关</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bysonline.github.io/"/>
  <updated>2016-09-14T10:30:49.736Z</updated>
  <id>http://bysonline.github.io/</id>
  
  <author>
    <name>rolex</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多线程同步</title>
    <link href="http://bysonline.github.io/2016/09/14/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/"/>
    <id>http://bysonline.github.io/2016/09/14/多线程同步/</id>
    <published>2016-09-14T10:25:28.000Z</published>
    <updated>2016-09-14T10:30:49.736Z</updated>
    
    <content type="html">&lt;p&gt;Java 的多线程同步方法有很多，简单整理一下。&lt;/p&gt;
&lt;h3 id=&quot;1-synchronized&quot;&gt;&lt;a href=&quot;#1-synchronized&quot; class=&quot;headerlink&quot; title=&quot;1. synchronized&quot;&gt;&lt;/a&gt;1. synchronized&lt;/h3&gt;&lt;p&gt;最常见使用起来最简单的当属 synchronized 。synchronized 可以作用于方法和代码块。&lt;/p&gt;
&lt;h3 id=&quot;2-ReentrantLock&quot;&gt;&lt;a href=&quot;#2-ReentrantLock&quot; class=&quot;headerlink&quot; title=&quot;2. ReentrantLock&quot;&gt;&lt;/a&gt;2. ReentrantLock&lt;/h3&gt;&lt;p&gt;ReentrantLock 基本用法如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ReentrantLock lock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReentrantLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock.lock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// dosomething&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock.unlock();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ReentrantLock 和 synchronized 类似，但功能上更加丰富。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;可重入&lt;br&gt;ReentrantLock 是重入锁，一个线程可以可以多次获得相同锁，每次或得锁计数器加 1 ，多次获得锁就需要多次释放锁。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;lock.lock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock.lock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// dosomething&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock.unlock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock.unlock();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 类似于 synchronized 嵌套。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;method1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    method2(); &lt;span class=&quot;comment&quot;&gt;// 调用其他的synchronized方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;method2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// dosomething&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可中断&lt;br&gt;普通的 lock.lock() 是不能响应中断的，lock.lockInterruptibly() 能够响应中断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可限时&lt;br&gt;超时不能获得锁，就返回 false ，不会永久等待构成死锁。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lock.tryLock(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, TimeUnit.SECONDS)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// dosomething&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;公平锁&lt;br&gt;公平锁的意思就是，这个锁能保证线程是先来的先得到锁。虽然公平锁不会产生饥饿现象，但是公平锁的性能会比非公平锁差很多。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ReentrantLock fairLock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReentrantLock(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;3-Condition&quot;&gt;&lt;a href=&quot;#3-Condition&quot; class=&quot;headerlink&quot; title=&quot;3. Condition&quot;&gt;&lt;/a&gt;3. Condition&lt;/h3&gt;&lt;p&gt;Codition 的 await() / signal() 和 Object 的 wait() / notify() 类似。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ReentrantLock lock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReentrantLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Condition c = lock.newCondition();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lock.lock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    c.signalAll();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lock.unlock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;condition.await() / signal() 只能在得到锁以后使用。&lt;/p&gt;
&lt;h3 id=&quot;4-Semaphore&quot;&gt;&lt;a href=&quot;#4-Semaphore&quot; class=&quot;headerlink&quot; title=&quot;4. Semaphore&quot;&gt;&lt;/a&gt;4. Semaphore&lt;/h3&gt;&lt;p&gt;Semaphore 允许多个线程同时进入临界区。可以认为它是一个共享锁，但是共享的额度是有限制的，额度用完了，其他没有拿到额度的线程还是要阻塞在临界区外。当额度为 1 时，就相等于 lock 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Semaphore semaphore = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Semaphore(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    semaphore.acquire();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// dosomething 可以有 5 个线程同时到达&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    semaphore.release();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-ReadWriteLock&quot;&gt;&lt;a href=&quot;#5-ReadWriteLock&quot; class=&quot;headerlink&quot; title=&quot;5. ReadWriteLock&quot;&gt;&lt;/a&gt;5. ReadWriteLock&lt;/h3&gt;&lt;p&gt;ReadWriteLock 是区分功能的锁。读和写是两种不同的功能，读-读不互斥，读-写互斥，写-写互斥。优点是并发量提高了，又保证了数据安全。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ReentrantReadWriteLock readWriteLock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReentrantReadWriteLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Lock readLock = readWriteLock.readLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Lock writeLock = readWriteLock.writeLock();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;6-CountDownLatch&quot;&gt;&lt;a href=&quot;#6-CountDownLatch&quot; class=&quot;headerlink&quot; title=&quot;6. CountDownLatch&quot;&gt;&lt;/a&gt;6. CountDownLatch&lt;/h3&gt;&lt;h3 id=&quot;7-CyclicBarrier&quot;&gt;&lt;a href=&quot;#7-CyclicBarrier&quot; class=&quot;headerlink&quot; title=&quot;7. CyclicBarrier&quot;&gt;&lt;/a&gt;7. CyclicBarrier&lt;/h3&gt;&lt;h3 id=&quot;8-LockSupport&quot;&gt;&lt;a href=&quot;#8-LockSupport&quot; class=&quot;headerlink&quot; title=&quot;8. LockSupport&quot;&gt;&lt;/a&gt;8. LockSupport&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Java 的多线程同步方法有很多，简单整理一下。&lt;/p&gt;
&lt;h3 id=&quot;1-synchronized&quot;&gt;&lt;a href=&quot;#1-synchronized&quot; class=&quot;headerlink&quot; title=&quot;1. synchronized&quot;&gt;&lt;/a&gt;1. synchron
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>死锁</title>
    <link href="http://bysonline.github.io/2016/09/14/%E6%AD%BB%E9%94%81/"/>
    <id>http://bysonline.github.io/2016/09/14/死锁/</id>
    <published>2016-09-14T09:37:05.000Z</published>
    <updated>2016-09-14T10:18:33.250Z</updated>
    
    <content type="html">&lt;p&gt;死锁是2个以上的线程由于竞争同一资源形成阻塞。&lt;/p&gt;
&lt;h3 id=&quot;如何写一个死锁&quot;&gt;&lt;a href=&quot;#如何写一个死锁&quot; class=&quot;headerlink&quot; title=&quot;如何写一个死锁&quot;&gt;&lt;/a&gt;如何写一个死锁&lt;/h3&gt;&lt;p&gt;最后一个未阻塞的线程在调用 Condition.signal() / Condition.signalAll() / Object.notify() / notifyAll() 之前调用了 Condition.await() 或 Object.wait() 或调用了 Condition.signal() / Object.notify()，被通知的线程没有达到执行条件，又阻塞了。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DeadLock&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ReentrantLock lock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReentrantLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Condition condition = lock.newCondition();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            lock.lock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            condition.await();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            lock.unlock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        DeadLock deadlock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DeadLock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Thread t1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(deadlock);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Thread t2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(deadlock);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        t1.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        t2.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 jstack 工具查看：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;Thread-1&amp;quot; #13 prio=5 os_prio=0 tid=0x00007f5b4815d000 nid=0x39c5 waiting on condition [0x00007f5b2621b000]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   java.lang.Thread.State: WAITING (parking)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at sun.misc.Unsafe.park(Native Method)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	- parking to wait for  &amp;lt;0x00000000d8093868&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at com.chinadaas.riskbell.tools.DeadLockTest.run(DeadLockTest.java:20)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.lang.Thread.run(Thread.java:745)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;Thread-0&amp;quot; #12 prio=5 os_prio=0 tid=0x00007f5b4815b000 nid=0x39c4 waiting on condition [0x00007f5b2631c000]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   java.lang.Thread.State: WAITING (parking)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at sun.misc.Unsafe.park(Native Method)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	- parking to wait for  &amp;lt;0x00000000d8093868&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at com.chinadaas.riskbell.tools.DeadLockTest.run(DeadLockTest.java:20)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	at java.lang.Thread.run(Thread.java:745)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果线程是可以被打断的，可以使用程序打断死锁。(程序作为示例，执行时未达到效果。)&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DeadlockChecker&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;[] deadlockThreadIds = threadMXBean.findDeadlockedThreads();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (deadlockThreadIds != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    ThreadInfo[] threadInfos = threadMXBean.getThreadInfo(deadlockThreadIds);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Thread t : Thread.getAllStackTraces().keySet()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; threadInfos.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            System.out.println(threadInfos[i].getThreadId());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t.getId() == threadInfos[i].getThreadId()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                t.interrupt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;).start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;死锁是2个以上的线程由于竞争同一资源形成阻塞。&lt;/p&gt;
&lt;h3 id=&quot;如何写一个死锁&quot;&gt;&lt;a href=&quot;#如何写一个死锁&quot; class=&quot;headerlink&quot; title=&quot;如何写一个死锁&quot;&gt;&lt;/a&gt;如何写一个死锁&lt;/h3&gt;&lt;p&gt;最后一个未阻塞的线程在调用 Condi
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux 定时任务 crontab 命令详解</title>
    <link href="http://bysonline.github.io/2016/09/13/Linux-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-crontab-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
    <id>http://bysonline.github.io/2016/09/13/Linux-定时任务-crontab-命令详解/</id>
    <published>2016-09-13T08:03:32.000Z</published>
    <updated>2016-09-13T09:13:23.006Z</updated>
    
    <content type="html">&lt;p&gt;安装&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install crontabs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看当前用户的定时任务&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;crontab -l&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动定时任务&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;5 3 * * * /u01/backup.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;crontab 时间格式&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/crontab.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;举例：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;每分钟执行一次            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*  *  *  *  *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;每隔一小时执行一次        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00  *  *  *  *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;or&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* */1 * * *  (/表示频率)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;每小时的 15 和 45 分各执行一次&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15,45 * * * * （,表示并列）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;在每天上午 8 - 11 时中间每小时 15 ，45分各执行一次&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15,45 8-11 * * * command （-表示范围）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;每个星期一的上午 8 点到 11 点的第 3 和第 15 分钟执行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3,15 8-11 * * 1 command&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3,15 8-11 */2 * * command&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;安装&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Linux" scheme="http://bysonline.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>风铃企业查询api接口</title>
    <link href="http://bysonline.github.io/2016/09/08/%E9%A3%8E%E9%93%83%E4%BC%81%E4%B8%9A%E6%9F%A5%E8%AF%A2api%E6%8E%A5%E5%8F%A3/"/>
    <id>http://bysonline.github.io/2016/09/08/风铃企业查询api接口/</id>
    <published>2016-09-08T09:12:07.000Z</published>
    <updated>2016-09-08T09:32:04.004Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-服务简介&quot;&gt;&lt;a href=&quot;#1-服务简介&quot; class=&quot;headerlink&quot; title=&quot;1 服务简介&quot;&gt;&lt;/a&gt;1 服务简介&lt;/h2&gt;&lt;p&gt;企业基本信息查询api接口是内部服务接口，未做权限检查。&lt;br&gt;此文档为内部交流使用。&lt;/p&gt;
&lt;h2 id=&quot;2-服务器端描述&quot;&gt;&lt;a href=&quot;#2-服务器端描述&quot; class=&quot;headerlink&quot; title=&quot;2 服务器端描述&quot;&gt;&lt;/a&gt;2 服务器端描述&lt;/h2&gt;&lt;h3 id=&quot;2-1-简介&quot;&gt;&lt;a href=&quot;#2-1-简介&quot; class=&quot;headerlink&quot; title=&quot;2.1 简介&quot;&gt;&lt;/a&gt;2.1 简介&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;术语&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;测试地址&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://192.168.11.21:8080/query/entInfo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.11.21:8080/query/entInfo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;2-2-说明&quot;&gt;&lt;a href=&quot;#2-2-说明&quot; class=&quot;headerlink&quot; title=&quot;2.2 说明&quot;&gt;&lt;/a&gt;2.2 说明&lt;/h3&gt;&lt;p&gt;该接口为风铃向阿里提供查询服务的数据查询接口。&lt;br&gt;目前支持查询的数据集包括：企业照面信息，管理人员，股东，股东对外投资，法人对外投资，法人对外任职，股权冻结，股权出质，分支机构，动产抵押，动产抵押物，行政处罚，失信被执行人，被执行人，变更历史，清算，组织机构代码。&lt;br&gt;支持查询个体工商户基本信息。&lt;/p&gt;
&lt;h3 id=&quot;2-3-申明&quot;&gt;&lt;a href=&quot;#2-3-申明&quot; class=&quot;headerlink&quot; title=&quot;2.3 申明&quot;&gt;&lt;/a&gt;2.3 申明&lt;/h3&gt;&lt;p&gt;本文档仅提供给授权开发商设计相关接口服务使用,未经允许不得对外布。 本文档中可能存在技术部分错误或印刷不清晰,我们会定期进行更改并发布新版本,对资料中描述的产品改 进或更改,不在另行通知。&lt;/p&gt;
&lt;h2 id=&quot;3-客户端调用方法描述&quot;&gt;&lt;a href=&quot;#3-客户端调用方法描述&quot; class=&quot;headerlink&quot; title=&quot;3 客户端调用方法描述&quot;&gt;&lt;/a&gt;3 客户端调用方法描述&lt;/h2&gt;&lt;h3 id=&quot;3-1-电信数据核查&quot;&gt;&lt;a href=&quot;#3-1-电信数据核查&quot; class=&quot;headerlink&quot; title=&quot;3.1 电信数据核查&quot;&gt;&lt;/a&gt;3.1 电信数据核查&lt;/h3&gt;&lt;p&gt;####3.1.1  HTTP HEADER设置&lt;br&gt;无&lt;/p&gt;
&lt;h4 id=&quot;3-1-2-请求参数描述&quot;&gt;&lt;a href=&quot;#3-1-2-请求参数描述&quot; class=&quot;headerlink&quot; title=&quot;3.1.2 请求参数描述&quot;&gt;&lt;/a&gt;3.1.2 请求参数描述&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;是否必需&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;entName&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;企业名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mask&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;掩码为任意项组合。basic,shareHolders,priPerson,priPersonInv,priPersonPosition,entInv,sharesFrost, sharesImpawn,filiation,bzxr,xzcf,disSxbzxr,morGuaInfo,morInfo,alter,liquidation,orgCode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entType&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;ent或gt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;3-1-3-请求示例&quot;&gt;&lt;a href=&quot;#3-1-3-请求示例&quot; class=&quot;headerlink&quot; title=&quot;3.1.3 请求示例&quot;&gt;&lt;/a&gt;3.1.3 请求示例&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;GET http://192.168.11.21:8080/query/entInfo?entName=%E5%A4%A7%E9%80%9A%E5%8E%BF%E8%AF%9A%E5%8F%8B%E6%B1%BD%E8%BD%A6%E8%A3%85%E7%92%9C&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;amp;mask=basic%2CshareHolders%2CpriPerson%2CpriPersonInv%2CpriPersonPosition%2CentInv%2CsharesFrost%2C&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; sharesImpawn%2Cfiliation%2Cbzxr%2Cxzcf%2CdisSxbzxr%2CmorGuaInfo%2CmorInfo%2Calter%2Cliquidation&amp;amp;entType=gt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-1-4-返回值参数描述&quot;&gt;&lt;a href=&quot;#3-1-4-返回值参数描述&quot; class=&quot;headerlink&quot; title=&quot;3.1.4 返回值参数描述&quot;&gt;&lt;/a&gt;3.1.4 返回值参数描述&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;basic&lt;/td&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;照面信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shareHolders&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;股东&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priPerson&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;管理人员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priPersonInv&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;法人对外投资&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priPersonPosition&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;法人对外任职&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entInv&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;企业对外任职&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sharesFrost&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;股权冻结&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sharesImpawn&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;股权出质&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filiation&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;分支机构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bzxr&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;被执行人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xzcf&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;行政处罚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disSxbzxr&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;失信被执行人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;morGuaInfo&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;动产抵押物&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;morInfo&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;动产抵押&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alter&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;变更历史&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;liquidation&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;清算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;orgCode&lt;/td&gt;
&lt;td&gt;List&lt;/td&gt;
&lt;td&gt;组织机构代码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;3-1-5-响应示例&quot;&gt;&lt;a href=&quot;#3-1-5-响应示例&quot; class=&quot;headerlink&quot; title=&quot;3.1.5 响应示例&quot;&gt;&lt;/a&gt;3.1.5 响应示例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;basic&amp;quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;entName&amp;quot;:&amp;quot;大通县诚友汽车装璜&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;name&amp;quot;:&amp;quot;张文刚&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;identity&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;regNo&amp;quot;:&amp;quot;6301213010207&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;oriRegNo&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;orgCodes&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;regCap&amp;quot;:&amp;quot;5000&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;recCap&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;regCapCur&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;esDate&amp;quot;:&amp;quot;2006-11-07&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;opFrom&amp;quot;:&amp;quot;2006-11-07&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;opTo&amp;quot;:&amp;quot;2009-12-31&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;entType&amp;quot;:&amp;quot;9999&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;entStatus&amp;quot;:&amp;quot;3&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;changeDate&amp;quot;:&amp;quot;2006-11-07&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;canDate&amp;quot;:&amp;quot;2006-11-07&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;revDate&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;dom&amp;quot;:&amp;quot;大通县桥头镇解放路&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;abuItem&amp;quot;:&amp;quot;汽车装璜 服务***&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;cbuItem&amp;quot;:&amp;quot;汽车装璜 服务***&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;opScope&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;opScoAndForm&amp;quot;:&amp;quot;汽车装璜 服务***&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;regOrgCode&amp;quot;:&amp;quot;630121&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;regOrgProvince&amp;quot;:&amp;quot;630000&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;ancheYear&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;ancheDate&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;industryPhyCode&amp;quot;:&amp;quot;O&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;industryCoCode&amp;quot;:&amp;quot;8011&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;empNum&amp;quot;:&amp;quot;1&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;entNameEng&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;tel&amp;quot;:&amp;quot;2013306&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;creditCode&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;province&amp;quot;:&amp;quot;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;oploc&amp;quot;:&amp;quot;大通县桥头镇解放路&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;domDistrict&amp;quot;:&amp;quot;630121001&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;pripid&amp;quot;:&amp;quot;630000_630121000052006110715045&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;shareHolders&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;priPerson&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;priPersonInv&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;priPersonPosition&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;entInv&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;sharesFrost&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;sharesImpawn&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;filiation&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;bzxr&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;xzcf&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;disSxbzxr&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;morGuaInfo&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;morInfo&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;alter&amp;quot;:[    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;liquidation&amp;quot;:[    ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：数据集会返回全部字段。&lt;br&gt;&lt;strong&gt;1. Basic&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;entName&lt;/td&gt;
&lt;td&gt;企业名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;法定代表人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;identity&lt;/td&gt;
&lt;td&gt;个人识别码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;注册号（新）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;oriRegNo&lt;/td&gt;
&lt;td&gt;原注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;orgCodes&lt;/td&gt;
&lt;td&gt;组织机构代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCap&lt;/td&gt;
&lt;td&gt;注册资本(万元)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;recCap&lt;/td&gt;
&lt;td&gt;实收资本(万元)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCapCur&lt;/td&gt;
&lt;td&gt;注册资本币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;esDate&lt;/td&gt;
&lt;td&gt;开业日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opFrom&lt;/td&gt;
&lt;td&gt;经营期限自&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opTo&lt;/td&gt;
&lt;td&gt;经营期限至&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entType&lt;/td&gt;
&lt;td&gt;企业(机构)类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entStatus&lt;/td&gt;
&lt;td&gt;经营状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;changeDate&lt;/td&gt;
&lt;td&gt;变更日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canDate&lt;/td&gt;
&lt;td&gt;注销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;revDate&lt;/td&gt;
&lt;td&gt;吊销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dom&lt;/td&gt;
&lt;td&gt;住址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;abuItem&lt;/td&gt;
&lt;td&gt;许可经营项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cbuItem&lt;/td&gt;
&lt;td&gt;一般经营项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opScope&lt;/td&gt;
&lt;td&gt;经营(业务)范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opScoAndForm&lt;/td&gt;
&lt;td&gt;经营(业务)范围及方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;注册地址行政区编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgProvince&lt;/td&gt;
&lt;td&gt;所在省份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ancheYear&lt;/td&gt;
&lt;td&gt;最后年检年度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ancheDate&lt;/td&gt;
&lt;td&gt;最后年检日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;industryPhyCode&lt;/td&gt;
&lt;td&gt;行业门类代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;industryCoCode&lt;/td&gt;
&lt;td&gt;国民经济行业代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;empNum&lt;/td&gt;
&lt;td&gt;员工人数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entNameEng&lt;/td&gt;
&lt;td&gt;企业英文名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tel&lt;/td&gt;
&lt;td&gt;电话&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creditCode&lt;/td&gt;
&lt;td&gt;信用代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;province&lt;/td&gt;
&lt;td&gt;省节点编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;oploc&lt;/td&gt;
&lt;td&gt;经营场所&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domDistrict&lt;/td&gt;
&lt;td&gt;住所所在行政区划&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pripid&lt;/td&gt;
&lt;td&gt;pripid&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;2. ShareHolder&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;inv&lt;/td&gt;
&lt;td&gt;股东名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;identity&lt;/td&gt;
&lt;td&gt;个人识别码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;invType&lt;/td&gt;
&lt;td&gt;股东类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subConAm&lt;/td&gt;
&lt;td&gt;认缴出资额(万元)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conDate&lt;/td&gt;
&lt;td&gt;出资日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currency&lt;/td&gt;
&lt;td&gt;币种，CA04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conform&lt;/td&gt;
&lt;td&gt;出资方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conprop&lt;/td&gt;
&lt;td&gt;出资比例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;country&lt;/td&gt;
&lt;td&gt;国别&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;3. PriPerson&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;人员姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;identity&lt;/td&gt;
&lt;td&gt;个人标识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;position&lt;/td&gt;
&lt;td&gt;职务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sex&lt;/td&gt;
&lt;td&gt;性别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;birth&lt;/td&gt;
&lt;td&gt;出生年份&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;4. PriPersonInv&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;法人名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entJgName&lt;/td&gt;
&lt;td&gt;企业机构名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entType&lt;/td&gt;
&lt;td&gt;企业类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCap&lt;/td&gt;
&lt;td&gt;注册资本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCapCur&lt;/td&gt;
&lt;td&gt;注册资本币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entStatus&lt;/td&gt;
&lt;td&gt;企业状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canDate&lt;/td&gt;
&lt;td&gt;注销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;revDate&lt;/td&gt;
&lt;td&gt;吊销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;登记机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subConAm&lt;/td&gt;
&lt;td&gt;认缴出资额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currency&lt;/td&gt;
&lt;td&gt;认缴出资额币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conform&lt;/td&gt;
&lt;td&gt;出资方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conprop&lt;/td&gt;
&lt;td&gt;出资比例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;esDate&lt;/td&gt;
&lt;td&gt;开业日期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;5. PriPersonPosition&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;法人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entJgName&lt;/td&gt;
&lt;td&gt;企业机构名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entType&lt;/td&gt;
&lt;td&gt;企业机构类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCap&lt;/td&gt;
&lt;td&gt;注册资本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCapCur&lt;/td&gt;
&lt;td&gt;注册资本币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entStatus&lt;/td&gt;
&lt;td&gt;企业状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canDate&lt;/td&gt;
&lt;td&gt;注销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;revDate&lt;/td&gt;
&lt;td&gt;吊销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;注册地址行政区编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;position&lt;/td&gt;
&lt;td&gt;职务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lerepSign&lt;/td&gt;
&lt;td&gt;是否法人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;esDate&lt;/td&gt;
&lt;td&gt;开业日期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;6. EntInv&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;entJgName&lt;/td&gt;
&lt;td&gt;企业机构名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entType&lt;/td&gt;
&lt;td&gt;企业类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCap&lt;/td&gt;
&lt;td&gt;注册资本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regCapCur&lt;/td&gt;
&lt;td&gt;注册资本币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entStatus&lt;/td&gt;
&lt;td&gt;企业状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canDate&lt;/td&gt;
&lt;td&gt;注销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;revDate&lt;/td&gt;
&lt;td&gt;吊销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;登记机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subConAm&lt;/td&gt;
&lt;td&gt;认缴出资额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currency&lt;/td&gt;
&lt;td&gt;认缴出资额币种&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conform&lt;/td&gt;
&lt;td&gt;出资方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conprop&lt;/td&gt;
&lt;td&gt;出资比例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;esDate&lt;/td&gt;
&lt;td&gt;开业日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;法人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;7. SharesFrost&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;froDocNo&lt;/td&gt;
&lt;td&gt;冻结文号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;froAuth&lt;/td&gt;
&lt;td&gt;冻结机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;froFrom&lt;/td&gt;
&lt;td&gt;开始日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;froTo&lt;/td&gt;
&lt;td&gt;冻结截止日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;froAm&lt;/td&gt;
&lt;td&gt;冻结金额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thawAuth&lt;/td&gt;
&lt;td&gt;解冻机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thawDocNo&lt;/td&gt;
&lt;td&gt;解冻文号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thawDate&lt;/td&gt;
&lt;td&gt;解冻日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thawComment&lt;/td&gt;
&lt;td&gt;解冻说明&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;8. SharesImpawn&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;impOrg&lt;/td&gt;
&lt;td&gt;质权人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impOrgType&lt;/td&gt;
&lt;td&gt;出质人类别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impAm&lt;/td&gt;
&lt;td&gt;出质金额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impOnRecDate&lt;/td&gt;
&lt;td&gt;出质备案日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impExaeep&lt;/td&gt;
&lt;td&gt;出质审批部门&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impSanDate&lt;/td&gt;
&lt;td&gt;出质批准日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impTo&lt;/td&gt;
&lt;td&gt;出质截至日期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;9.  Bzxr&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;caseNo&lt;/td&gt;
&lt;td&gt;案号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;被执行人姓名/名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;身份证号码/组织机构代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gender&lt;/td&gt;
&lt;td&gt;性别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;td&gt;年龄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;province&lt;/td&gt;
&lt;td&gt;省&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ysfzd&lt;/td&gt;
&lt;td&gt;身份证原始发证地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;courtName&lt;/td&gt;
&lt;td&gt;执行法院&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regDate&lt;/td&gt;
&lt;td&gt;立案时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;money&lt;/td&gt;
&lt;td&gt;执行标的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;focusNum&lt;/td&gt;
&lt;td&gt;关注次数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;10. DisSxbzxr&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; caseNo&lt;/td&gt;
&lt;td&gt;案号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;被执行人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;失信人类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gender&lt;/td&gt;
&lt;td&gt;性别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;td&gt;年龄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;身份证号码/工商注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ysfzd&lt;/td&gt;
&lt;td&gt;身份证原始发证地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;businessEntity&lt;/td&gt;
&lt;td&gt;法定代表人/负责人姓名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regDate&lt;/td&gt;
&lt;td&gt;立案时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;publishDate&lt;/td&gt;
&lt;td&gt;发布时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;courtName&lt;/td&gt;
&lt;td&gt;执行法院&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;province&lt;/td&gt;
&lt;td&gt;省份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gistNo&lt;/td&gt;
&lt;td&gt;执行依据文号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gistUnit&lt;/td&gt;
&lt;td&gt;做出执行依据单位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duty&lt;/td&gt;
&lt;td&gt;生效法律文书确定的义务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disruptTypeName&lt;/td&gt;
&lt;td&gt;失信被执行人行为具体情形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;performance&lt;/td&gt;
&lt;td&gt;被执行人的履行情况&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;performedPart&lt;/td&gt;
&lt;td&gt;已履行(元)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unperformPart&lt;/td&gt;
&lt;td&gt;未履行(元)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;focusNum&lt;/td&gt;
&lt;td&gt;关注次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exitDate&lt;/td&gt;
&lt;td&gt;退出日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caseStatus&lt;/td&gt;
&lt;td&gt;案件状态&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;11. Alter&lt;/strong&gt;&lt;br&gt;字段名|字段說明&lt;br&gt;-|-&lt;br&gt;altDate|变更时间&lt;br&gt;altItem|变更项&lt;br&gt;altBe|变更前&lt;br&gt;altAf|变更后&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12. Filiation&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;brName&lt;/td&gt;
&lt;td&gt;分支机构名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brRegNo&lt;/td&gt;
&lt;td&gt;分支机构企业注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brPrincipal&lt;/td&gt;
&lt;td&gt;分支机构负责人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cbuItem&lt;/td&gt;
&lt;td&gt;一般经营项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brAddr&lt;/td&gt;
&lt;td&gt;分支机构地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;13. Liquidation&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ligEntity&lt;/td&gt;
&lt;td&gt;清算责任人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ligPrincipal&lt;/td&gt;
&lt;td&gt;清算负责人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;liqMen&lt;/td&gt;
&lt;td&gt;清算组成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tel&lt;/td&gt;
&lt;td&gt;联系电话&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ligst&lt;/td&gt;
&lt;td&gt;清算完结情况，CD14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ligEndDate&lt;/td&gt;
&lt;td&gt;清算完结日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;debtTranee&lt;/td&gt;
&lt;td&gt;债务承接人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;claimTranee&lt;/td&gt;
&lt;td&gt;债权承接人&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;14. MorInfo&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;morRegId&lt;/td&gt;
&lt;td&gt;抵押ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;morTgagor&lt;/td&gt;
&lt;td&gt;抵押人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mor&lt;/td&gt;
&lt;td&gt;抵押权人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;登记机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regDate&lt;/td&gt;
&lt;td&gt;登记日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;morType&lt;/td&gt;
&lt;td&gt;状态标识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;morRegNo&lt;/td&gt;
&lt;td&gt;登记证号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;appRegRea&lt;/td&gt;
&lt;td&gt;申请抵押原因/申请抵押物登记原因&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priClasecKind&lt;/td&gt;
&lt;td&gt;被担保的主债权种类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;priClasecAm&lt;/td&gt;
&lt;td&gt;被担保的主债权数额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pefPerFrom&lt;/td&gt;
&lt;td&gt;履约起始日期/履约期限自&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pefPerTo&lt;/td&gt;
&lt;td&gt;履约截止日期/履约期限至&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canDate&lt;/td&gt;
&lt;td&gt;注销日期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;15. MorGuaInfo&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;guaId&lt;/td&gt;
&lt;td&gt;抵押ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;guaName&lt;/td&gt;
&lt;td&gt;抵押物名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;guaNum&lt;/td&gt;
&lt;td&gt;数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;guaVal&lt;/td&gt;
&lt;td&gt;价值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;16. Xzcf&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;caseTime&lt;/td&gt;
&lt;td&gt;案发时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caseReason&lt;/td&gt;
&lt;td&gt;案由&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caseVal&lt;/td&gt;
&lt;td&gt;案值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caseResult&lt;/td&gt;
&lt;td&gt;案件结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caseType&lt;/td&gt;
&lt;td&gt;案件类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exeSort&lt;/td&gt;
&lt;td&gt;执行类别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;illegAct&lt;/td&gt;
&lt;td&gt;主要违法事实&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penBasis&lt;/td&gt;
&lt;td&gt;处罚依据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penType&lt;/td&gt;
&lt;td&gt;处罚种类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penResult&lt;/td&gt;
&lt;td&gt;处罚结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penAm&lt;/td&gt;
&lt;td&gt;处罚金额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penDecissDate&lt;/td&gt;
&lt;td&gt;触犯决定书签发日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penExest&lt;/td&gt;
&lt;td&gt;处罚执行情况&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penAuth&lt;/td&gt;
&lt;td&gt;处罚机关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;penDecNo&lt;/td&gt;
&lt;td&gt;处罚决定文书&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;17. OrgCode&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;字段說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;orgCode&lt;/td&gt;
&lt;td&gt;组织代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;orgName&lt;/td&gt;
&lt;td&gt;组织名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;法定代表人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;manageOrg&lt;/td&gt;
&lt;td&gt;办证机构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regDate&lt;/td&gt;
&lt;td&gt;注册日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;orgType&lt;/td&gt;
&lt;td&gt;机构类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regOrgCode&lt;/td&gt;
&lt;td&gt;行政区划&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;addr&lt;/td&gt;
&lt;td&gt;机构地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;办证日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;invalidDate&lt;/td&gt;
&lt;td&gt;作废日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zybz&lt;/td&gt;
&lt;td&gt;质疑标识：1 正常 2 废置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regNo&lt;/td&gt;
&lt;td&gt;注册号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isEnterprise&lt;/td&gt;
&lt;td&gt;是否企业(1:企业 2:非企业)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-服务简介&quot;&gt;&lt;a href=&quot;#1-服务简介&quot; class=&quot;headerlink&quot; title=&quot;1 服务简介&quot;&gt;&lt;/a&gt;1 服务简介&lt;/h2&gt;&lt;p&gt;企业基本信息查询api接口是内部服务接口，未做权限检查。&lt;br&gt;此文档为内部交流使用。&lt;/p&gt;
&lt;h2 id
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL 备份与还原</title>
    <link href="http://bysonline.github.io/2016/09/08/MySQL-%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%98%E5%8E%9F/"/>
    <id>http://bysonline.github.io/2016/09/08/MySQL-备份与还原/</id>
    <published>2016-09-08T06:34:13.000Z</published>
    <updated>2016-09-13T08:02:24.979Z</updated>
    
    <content type="html">&lt;p&gt;使用 mysqldump 命令&lt;/p&gt;
&lt;p&gt;备份&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysqldump -uroot -p123456 -h 192.168.201.73 meta &amp;gt; meta_dump_`date +%F`.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;压缩备份&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysqldump -uroot -p123456 -h 192.168.201.73 meta | gzip &amp;gt; backupfile.sql.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还原&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql -uroot -p123456 -h192.168.201.74 meta &amp;lt; backupfile.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;顺便贴一下 mysqldump 的帮助文档。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;170&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;171&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;172&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;173&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;174&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;175&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;176&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;177&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;178&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;179&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;180&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;181&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;182&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;183&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;184&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;185&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;186&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;187&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;188&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;189&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;190&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;191&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;193&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;194&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;195&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;196&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;197&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;198&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;199&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;200&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;201&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;202&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;203&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;204&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;205&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;206&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;207&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;208&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;209&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;210&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;211&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;212&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;213&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;214&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;215&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;216&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;217&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;218&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;219&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;220&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;221&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;222&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;223&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;224&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;225&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;226&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;227&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;228&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;229&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;230&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;231&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;232&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;233&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;234&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;235&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;236&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;237&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;238&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;239&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;240&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;241&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;242&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;243&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;245&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;246&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;247&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;248&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;249&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;250&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;251&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;252&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;253&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;254&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;255&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;256&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;257&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;258&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;259&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;260&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;261&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;262&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;263&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;264&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;265&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;266&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;267&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;268&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;269&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;270&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;271&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;272&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;273&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;274&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;275&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;276&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;277&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;278&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;279&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;280&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;281&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;282&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;283&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;284&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;285&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;286&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;287&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;288&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;289&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;290&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;291&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;292&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;293&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;294&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;295&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;296&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;297&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;298&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;299&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;300&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;301&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;302&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;303&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;304&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;305&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;306&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;307&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;308&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;309&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;310&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;311&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;312&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;313&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;314&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;315&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;316&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;317&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;318&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;319&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;320&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;321&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;322&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;323&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;324&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;325&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;326&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;327&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;328&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;329&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;330&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;331&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;332&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;333&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;334&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;335&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;336&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;337&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;338&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;339&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;340&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;341&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;342&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;343&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;344&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;345&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;346&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;347&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;348&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;349&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;350&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;351&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;352&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;353&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;354&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;355&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[ops@d20 ~]$ mysqldump&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Usage: mysqldump [OPTIONS] database [tables]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OR     mysqldump [OPTIONS] --all-databases [OPTIONS]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For more options, use mysqldump --help&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[ops@d20 ~]$ mysqldump --hrlp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mysqldump: unknown option &amp;apos;--hrlp&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[ops@d20 ~]$ mysqldump --help&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mysqldump  Ver 10.13 Distrib 5.6.31, for Linux (x86_64)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Oracle is a registered trademark of Oracle Corporation and/or its&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;affiliates. Other names may be trademarks of their respective&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;owners.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Dumping structure and contents of MySQL databases and tables.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Usage: mysqldump [OPTIONS] database [tables]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OR     mysqldump [OPTIONS] --all-databases [OPTIONS]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Default options are read from the following files in the given order:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The following groups are read: mysqldump client&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The following options may be given as the first argument:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--print-defaults        Print the program argument list and exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--no-defaults           Don&amp;apos;t read default options from any option file,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        except for login file.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--defaults-file=#       Only read default options from the given file #.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--defaults-extra-file=# Read this file after the global files are read.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--defaults-group-suffix=#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        Also read groups with concat(group, suffix)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--login-path=#          Read this path from the login file.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -A, --all-databases Dump all the databases. This will be same as --databases&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      with all databases selected.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -Y, --all-tablespaces&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Dump all the tablespaces.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -y, --no-tablespaces&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Do not dump any tablespace information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --add-drop-database Add a DROP DATABASE before each create.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --add-drop-table    Add a DROP TABLE before each create.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-add-drop-table to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --add-drop-trigger  Add a DROP TRIGGER before each create.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --add-locks         Add locks around INSERT statements.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-add-locks to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --allow-keywords    Allow creation of column names that are keywords.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --apply-slave-statements&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Adds &amp;apos;STOP SLAVE&amp;apos; prior to &amp;apos;CHANGE MASTER&amp;apos; and &amp;apos;START&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      SLAVE&amp;apos; to bottom of dump.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --bind-address=name IP address to bind to.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --character-sets-dir=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Directory for character set files.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -i, --comments      Write additional information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-comments to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --compatible=name   Change the dump to be compatible with a given mode. By&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      default tables are dumped in a format optimized for&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      MySQL. Legal modes are: ansi, mysql323, mysql40,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      postgresql, oracle, mssql, db2, maxdb, no_key_options,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      no_table_options, no_field_options. One can use several&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      modes separated by commas. Note: Requires MySQL server&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      version 4.1.0 or higher. This option is ignored with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      earlier server versions.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --compact           Give less verbose output (useful for debugging). Disables&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      structure comments and header/footer constructs.  Enables&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      options --skip-add-drop-table --skip-add-locks&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --skip-comments --skip-disable-keys --skip-set-charset.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -c, --complete-insert&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Use complete insert statements.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -C, --compress      Use compression in server/client protocol.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -a, --create-options&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Include all MySQL specific create options.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-create-options to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -B, --databases     Dump several databases. Note the difference in usage; in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      this case no tables are given. All name arguments are&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      regarded as database names. &amp;apos;USE db_name;&amp;apos; will be&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      included in the output.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -#, --debug[=#]     This is a non-debug version. Catch this and exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --debug-check       Check memory and open file usage at exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --debug-info        Print some debug info at exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --default-character-set=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Set the default character set.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --delayed-insert    Insert rows with INSERT DELAYED.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --delete-master-logs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Delete logs on master after backup. This automatically&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      enables --master-data.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -K, --disable-keys  &amp;apos;/*!40000 ALTER TABLE tb_name DISABLE KEYS */; and&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      &amp;apos;/*!40000 ALTER TABLE tb_name ENABLE KEYS */; will be put&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      in the output.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-disable-keys to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --dump-slave[=#]    This causes the binary log position and filename of the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      master to be appended to the dumped data output. Setting&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      the value to 1, will printit as a CHANGE MASTER command&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      in the dumped data output; if equal to 2, that command&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      will be prefixed with a comment symbol. This option will&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      turn --lock-all-tables on, unless --single-transaction is&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      specified too (in which case a global read lock is only&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      taken a short time at the beginning of the dump - don&amp;apos;t&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      forget to read about --single-transaction below). In all&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      cases any action on logs will happen at the exact moment&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      of the dump.Option automatically turns --lock-tables off.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -E, --events        Dump events.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -e, --extended-insert&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Use multiple-row INSERT syntax that include several&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      VALUES lists.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-extended-insert to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --fields-terminated-by=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Fields in the output file are terminated by the given&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      string.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --fields-enclosed-by=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Fields in the output file are enclosed by the given&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      character.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --fields-optionally-enclosed-by=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Fields in the output file are optionally enclosed by the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      given character.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --fields-escaped-by=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Fields in the output file are escaped by the given&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      character.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -F, --flush-logs    Flush logs file in server before starting dump. Note that&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      if you dump many databases at once (using the option&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --databases= or --all-databases), the logs will be&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      flushed for each database dumped. The exception is when&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      using --lock-all-tables or --master-data: in this case&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      the logs will be flushed only once, corresponding to the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      moment all tables are locked. So if you want your dump&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      and the log flush to happen at the same exact moment you&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      should use --lock-all-tables or --master-data with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --flush-logs.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --flush-privileges  Emit a FLUSH PRIVILEGES statement after dumping the mysql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      database.  This option should be used any time the dump&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      contains the mysql database and any other database that&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      depends on the data in the mysql database for proper&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      restore.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -f, --force         Continue even if we get an SQL error.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -?, --help          Display this help message and exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --hex-blob          Dump binary strings (BINARY, VARBINARY, BLOB) in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      hexadecimal format.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -h, --host=name     Connect to host.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ignore-table=name Do not dump the specified table. To specify more than one&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      table to ignore, use the directive multiple times, once&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      for each table.  Each table must be specified with both&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      database and table names, e.g.,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --ignore-table=database.table.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --include-master-host-port&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Adds &amp;apos;MASTER_HOST=&amp;lt;host&amp;gt;, MASTER_PORT=&amp;lt;port&amp;gt;&amp;apos; to &amp;apos;CHANGE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      MASTER TO..&amp;apos; in dump produced with --dump-slave.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --insert-ignore     Insert rows with INSERT IGNORE.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --lines-terminated-by=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Lines in the output file are terminated by the given&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      string.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -x, --lock-all-tables&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Locks all tables across all databases. This is achieved&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      by taking a global read lock for the duration of the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      whole dump. Automatically turns --single-transaction and&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --lock-tables off.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -l, --lock-tables   Lock all tables for read.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-lock-tables to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --log-error=name    Append warnings and errors to given file.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --master-data[=#]   This causes the binary log position and filename to be&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      appended to the output. If equal to 1, will print it as a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      CHANGE MASTER command; if equal to 2, that command will&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      be prefixed with a comment symbol. This option will turn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --lock-all-tables on, unless --single-transaction is&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      specified too (in which case a global read lock is only&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      taken a short time at the beginning of the dump; don&amp;apos;t&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      forget to read about --single-transaction below). In all&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      cases, any action on logs will happen at the exact moment&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      of the dump. Option automatically turns --lock-tables&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      off.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --max-allowed-packet=#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      The maximum packet length to send to or receive from&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      server.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --net-buffer-length=#&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      The buffer size for TCP/IP and socket communication.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --no-autocommit     Wrap tables with autocommit/commit statements.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -n, --no-create-db  Suppress the CREATE DATABASE ... IF EXISTS statement that&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      normally is output for each dumped database if&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --all-databases or --databases is given.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -t, --no-create-info&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Don&amp;apos;t write table creation info.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -d, --no-data       No row information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -N, --no-set-names  Same as --skip-set-charset.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --opt               Same as --add-drop-table, --add-locks, --create-options,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --quick, --extended-insert, --lock-tables, --set-charset,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      and --disable-keys. Enabled by default, disable with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --skip-opt.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --order-by-primary  Sorts each table&amp;apos;s rows by primary key, or first unique&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      key, if such a key exists.  Useful when dumping a MyISAM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      table to be loaded into an InnoDB table, but will make&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      the dump itself take considerably longer.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -p, --password[=name]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Password to use when connecting to server. If password is&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      not given it&amp;apos;s solicited on the tty.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -P, --port=#        Port number to use for connection.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --protocol=name     The protocol to use for connection (tcp, socket, pipe,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      memory).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -q, --quick         Don&amp;apos;t buffer query, dump directly to stdout.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-quick to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -Q, --quote-names   Quote table and column names with backticks (`).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-quote-names to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --replace           Use REPLACE INTO instead of INSERT INTO.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -r, --result-file=name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Direct output to a given file. This option should be used&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      in systems (e.g., DOS, Windows) that use carriage-return&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      linefeed pairs (\r\n) to separate text lines. This option&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      ensures that only a single newline is used.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -R, --routines      Dump stored routines (functions and procedures).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --set-charset       Add &amp;apos;SET NAMES default_character_set&amp;apos; to the output.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-set-charset to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --set-gtid-purged[=name]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Add &amp;apos;SET @@GLOBAL.GTID_PURGED&amp;apos; to the output. Possible&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      values for this option are ON, OFF and AUTO. If ON is&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      used and GTIDs are not enabled on the server, an error is&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      generated. If OFF is used, this option does nothing. If&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      AUTO is used and GTIDs are enabled on the server, &amp;apos;SET&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      @@GLOBAL.GTID_PURGED&amp;apos; is added to the output. If GTIDs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      are disabled, AUTO does nothing. If no value is supplied&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      then the default (AUTO) value will be considered.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --single-transaction&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Creates a consistent snapshot by dumping all tables in a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      single transaction. Works ONLY for tables stored in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      storage engines which support multiversioning (currently&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      only InnoDB does); the dump is NOT guaranteed to be&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      consistent for other storage engines. While a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --single-transaction dump is in process, to ensure a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      valid dump file (correct table contents and binary log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      position), no other connection should use the following&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      statements: ALTER TABLE, DROP TABLE, RENAME TABLE,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      TRUNCATE TABLE, as consistent snapshot is not isolated&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      from them. Option automatically turns off --lock-tables.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --dump-date         Put a dump date to the end of the output.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-dump-date to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --skip-opt          Disable --opt. Disables --add-drop-table, --add-locks,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --create-options, --quick, --extended-insert,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --lock-tables, --set-charset, and --disable-keys.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -S, --socket=name   The socket file to use for connection.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --secure-auth       Refuse client connecting to server if it uses old&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (pre-4.1.1) protocol.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-secure-auth to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl               Enable SSL for connection (automatically enabled with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      other flags).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-ca=name       CA file in PEM format (check OpenSSL docs, implies&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-capath=name   CA directory (check OpenSSL docs, implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-cert=name     X509 cert in PEM format (implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-cipher=name   SSL cipher to use (implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-key=name      X509 key in PEM format (implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-crl=name      Certificate revocation list (implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-crlpath=name  Certificate revocation list path (implies --ssl).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-verify-server-cert&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Verify server&amp;apos;s &amp;quot;Common Name&amp;quot; in its cert against&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      hostname used when connecting. This option is disabled by&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      default.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --ssl-mode=name     SSL connection mode.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -T, --tab=name      Create tab-separated textfile for each table to given&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      path. (Create .sql and .txt files.) NOTE: This only works&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      if mysqldump is run on the same machine as the mysqld&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      server.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --tables            Overrides option --databases (-B).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --triggers          Dump triggers for each dumped table.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-triggers to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --tz-utc            SET TIME_ZONE=&amp;apos;+00:00&amp;apos; at top of dump to allow dumping of&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      TIMESTAMP data when a server has data in different time&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      zones or data is being moved between servers with&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      different time zones.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      (Defaults to on; use --skip-tz-utc to disable.)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -u, --user=name     User for login if not current user.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -v, --verbose       Print info about the various stages.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -V, --version       Output version information and exit.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -w, --where=name    Dump only selected records. Quotes are mandatory.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -X, --xml           Dump a database as well formed XML.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --plugin-dir=name   Directory for client-side plugins.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --default-auth=name Default authentication client-side plugin to use.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --enable-cleartext-plugin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      Enable/disable the clear text authentication plugin.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Variables (--variable-name=value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;and boolean options &amp;#123;FALSE|TRUE&amp;#125;  Value (after reading options)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--------------------------------- ----------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;all-databases                     FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;all-tablespaces                   FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;no-tablespaces                    FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add-drop-database                 FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add-drop-table                    TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add-drop-trigger                  FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add-locks                         TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;allow-keywords                    FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apply-slave-statements            FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bind-address                      (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;character-sets-dir                (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;comments                          TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;compatible                        (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;compact                           FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;complete-insert                   FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;compress                          FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;create-options                    TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;databases                         FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;debug-check                       FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;debug-info                        FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default-character-set             utf8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delayed-insert                    FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delete-master-logs                FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;disable-keys                      TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dump-slave                        0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;events                            FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;extended-insert                   TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fields-terminated-by              (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fields-enclosed-by                (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fields-optionally-enclosed-by     (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fields-escaped-by                 (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;flush-logs                        FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;flush-privileges                  FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;force                             FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hex-blob                          FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;host                              (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;include-master-host-port          FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;insert-ignore                     FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lines-terminated-by               (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock-all-tables                   FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lock-tables                       TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;log-error                         (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;master-data                       0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max-allowed-packet                25165824&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;net-buffer-length                 1046528&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;no-autocommit                     FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;no-create-db                      FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;no-create-info                    FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;no-data                           FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;order-by-primary                  FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port                              0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;quick                             TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;quote-names                       TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;replace                           FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;routines                          FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;set-charset                       TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;single-transaction                FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dump-date                         TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;socket                            (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;secure-auth                       TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl                               FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-ca                            (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-capath                        (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-cert                          (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-cipher                        (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-key                           (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-crl                           (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-crlpath                       (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssl-verify-server-cert            FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tab                               (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;triggers                          TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tz-utc                            TRUE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;user                              (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;verbose                           FALSE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;where                             (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;plugin-dir                        (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default-auth                      (No default value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;enable-cleartext-plugin           FALSE&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用 mysqldump 命令&lt;/p&gt;
&lt;p&gt;备份&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td c
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="MySQL" scheme="http://bysonline.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter 使用入门</title>
    <link href="http://bysonline.github.io/2016/09/07/Jmeter-%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>http://bysonline.github.io/2016/09/07/Jmeter-使用入门/</id>
    <published>2016-09-07T02:54:11.000Z</published>
    <updated>2016-09-07T06:12:39.657Z</updated>
    
    <content type="html">&lt;p&gt;Jmeter 是一款开源的压力测试工具，虽功能不及 Loadrunner 强大，但是对于一些简单的如接口api的测试完全够用。&lt;/p&gt;
&lt;h3 id=&quot;基本使用方法&quot;&gt;&lt;a href=&quot;#基本使用方法&quot; class=&quot;headerlink&quot; title=&quot;基本使用方法&quot;&gt;&lt;/a&gt;基本使用方法&lt;/h3&gt;&lt;p&gt;通常使用 Jmeter 通常需要以下几步。以 http api 接口测试为例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加线程组&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/%E7%BA%BF%E7%A8%8B%E7%BB%84.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;添加 Sampler，这里选择 Http请求&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/HTTP%E8%AF%B7%E6%B1%82.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;添加 listener&lt;br&gt;Jmeter 提供了不同的 Listener 可以按需求添加。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;点击启动，将按照计划开始执行测试，完成后可看到报告。&lt;/p&gt;
&lt;h3 id=&quot;如何使用变量&quot;&gt;&lt;a href=&quot;#如何使用变量&quot; class=&quot;headerlink&quot; title=&quot;如何使用变量&quot;&gt;&lt;/a&gt;如何使用变量&lt;/h3&gt;&lt;p&gt;如果一个测试计划内容很多，有一些参数如 IP 等会出现多次，我们可以将这样的信息设置成用户定义变量。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/%E7%94%A8%E6%88%B7%E5%AE%9A%E4%B9%89%E7%9A%84%E5%8F%98%E9%87%8F.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;定义之后，可以在其他地方通过 ${} 进行引用。&lt;/p&gt;
&lt;h3 id=&quot;如何使用函数&quot;&gt;&lt;a href=&quot;#如何使用函数&quot; class=&quot;headerlink&quot; title=&quot;如何使用函数&quot;&gt;&lt;/a&gt;如何使用函数&lt;/h3&gt;&lt;p&gt;Jmeter 提供了一些内置函数，点击 函数助手对话框 可查看内置函数的说明。&lt;br&gt;举个例子，如果我们在发送 http 请求时想使用更多的测试数据，而不是在参数栏将一组测试数据写死，可以将多组测试数据放在 csv 文件中，然后通过 __CSVRead() 函数来调用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 HTTP请求中加入配置元件 CSV Data Set Config ，并在 fileName 中指定文件的全路径。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/%E4%BC%81%E4%B8%9A%E5%90%8D%E5%8D%95.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;在 Http 参数列表中的 value 位置使用 ${__CSVRead(${entNameFile},0)} 。第一个参数是需要读取的 CSV 文件，第二个参数是每组数据的位置，CSV 文件中的测试数据默认使用 ‘,’ 分割，0 表示第一列数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;OutOfMemoryError&quot;&gt;&lt;a href=&quot;#OutOfMemoryError&quot; class=&quot;headerlink&quot; title=&quot;OutOfMemoryError&quot;&gt;&lt;/a&gt;OutOfMemoryError&lt;/h3&gt;&lt;p&gt;在执行测试过程中，执行一段时间后出现 Java.lang.OutOfMemoryError: Java heap space 。解决方法参考如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改启动参数。&lt;br&gt;在 bin/jmeter 最后加入启动参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;java $ARGS $JVM_ARGS -Xms1G -Xmx5G -XX:MaxPermSize=512m -Dapple.laf.useScreenMenuBar=true $JMETER_OPTS -jar &amp;quot;$PRGDIR/ApacheJMeter.jar&amp;quot; &amp;quot;$@&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果在计划中加入了察看结果树的 Listener ，将会有大量数据写入。通常在计划调试阶段使用，正式测试时应去掉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Jmeter 是一款开源的压力测试工具，虽功能不及 Loadrunner 强大，但是对于一些简单的如接口api的测试完全够用。&lt;/p&gt;
&lt;h3 id=&quot;基本使用方法&quot;&gt;&lt;a href=&quot;#基本使用方法&quot; class=&quot;headerlink&quot; title=&quot;基本使用方法&quot;&gt;&lt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Jmeter" scheme="http://bysonline.github.io/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Scala 学习资料汇总</title>
    <link href="http://bysonline.github.io/2016/09/05/Scala-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/"/>
    <id>http://bysonline.github.io/2016/09/05/Scala-学习资料汇总/</id>
    <published>2016-09-05T14:39:19.000Z</published>
    <updated>2016-09-08T07:10:21.892Z</updated>
    
    <content type="html">&lt;p&gt;收集了一些，准备。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://learnyouahaskell.com/chapters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://learnyouahaskell.com/chapters&lt;/a&gt;&lt;br&gt;介绍 Haskell 的，了解函数式编程可以看。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://twitter.github.io/scala_school/zh_cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scala 课堂&lt;/a&gt;&lt;br&gt;twitter 的教程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://hongjiang.info/scala/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hongjiang.info/scala/&lt;/a&gt;&lt;br&gt;别人的博客。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.shiyanlou.com/courses/?course_type=all&amp;amp;tag=Scala&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.shiyanlou.com/courses/?course_type=all&amp;amp;tag=Scala&lt;/a&gt;&lt;br&gt;动手做项目能更好的理解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;看书是必须的。&lt;img src=&quot;http://new.51cto.com/files/uploadimg/20090526/0950191.jpg&quot; alt=&quot;programming in scala&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;收集了一些，准备。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://learnyouahaskell.com/chapters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://learnyouahaskell.com/chapt
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Scala" scheme="http://bysonline.github.io/tags/Scala/"/>
    
  </entry>
  
  <entry>
    <title>Java Stream 详解</title>
    <link href="http://bysonline.github.io/2016/08/19/Java-Stream-%E8%AF%A6%E8%A7%A3/"/>
    <id>http://bysonline.github.io/2016/08/19/Java-Stream-详解/</id>
    <published>2016-08-19T07:20:47.000Z</published>
    <updated>2016-09-14T05:43:52.538Z</updated>
    
    <content type="html">&lt;p&gt;Java Stream 是 jdk 1.8 加入的新 API ，目的是用来支持函数式编程，位于 java.util.stream 包下。&lt;/p&gt;
&lt;p&gt;Stream 并不是集合，只是提供了针对于集合的函数式操作，如 Map-Rudeuce 转换。Stream 和集合的区别主要体现在一下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不存储数据&lt;br&gt;Stream 不是一个存储数据的数据结构，相反，它是通过一个计算操作的管道从源（数据结构，数组，I/O管道等）传输数据。&lt;/li&gt;
&lt;li&gt;操作并不改变源&lt;/li&gt;
&lt;li&gt;延迟处理&lt;br&gt;多数 Stream 操作，比如过滤、转换等都不是立即执行的，而是在最佳时机执行。例如，查找第一个有三个连续元音的字符串，Stream 操作分为 &lt;em&gt;中间操作&lt;/em&gt; 和 &lt;em&gt;最终操作&lt;/em&gt; , 中间操作始终是延迟处理的。&lt;/li&gt;
&lt;li&gt;无限的&lt;br&gt;集合的 size 是有限的，Stream 是无限的。limit(n) 或 findFirst() 等短路操作可以让无限的 Stream 在有限的时间内完成计算。&lt;/li&gt;
&lt;li&gt;可消耗的&lt;br&gt;像 Iterator 一样，Stream 中的元素在其生命周期内只能访问一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Stream-操作和管道&quot;&gt;&lt;a href=&quot;#Stream-操作和管道&quot; class=&quot;headerlink&quot; title=&quot;Stream 操作和管道&quot;&gt;&lt;/a&gt;Stream 操作和管道&lt;/h3&gt;&lt;p&gt;Stream 操作分为中间操作和最终操作，通过管道的被组合起来。一个 Stream 管道包含一个源，0 个或多个中间操作和一个最终操作。&lt;br&gt;中间操作会返回一个新的 Stream , 但并不是立即执行的。比如 filter() 方法不会执行过滤，而是在最终操作执行遍历时才创建一个由符合条件元素构成的新 Stream 。&lt;br&gt;最终操作会产生结果。最终操作被执行后，Stream 管道可以被消耗，并不能再被使用。如果你需要再次遍历相同的数据源，只能获取新的 Stream 。通常最终操作会在返回前完成遍历和计算，除了 iterator() 和 spliterator() 。these are provided as an “escape hatch” to enable arbitrary client-controlled pipeline traversals in the event that the existing operations are not sufficient to the task.&lt;br&gt;中间操作又分为有状态和无状态。无状态操作处理的元素之间彼此是相互独立的，如 filter 和 map 。有状态操作处理新元素则需要用到之前处理的元素的结果，如 distinct 和 sorted 。有状态操作需要针对全部元素处理得到结果，比如排序。所以在并行计算中，管道包含的中间操作需要多次传递和缓存数据。不论顺序还是并行处理，如果管道只包含无状态操作，则可以使用最少的数据缓存单次完成处理。&lt;br&gt;对于无限的 stream ，短路操作是必须的。如果中间操作是短路操作，将会返回一个有限 stream 作为结果，如果最终操作是短路操作，将会在有限时间内结束。&lt;/p&gt;
&lt;h3 id=&quot;并行化&quot;&gt;&lt;a href=&quot;#并行化&quot; class=&quot;headerlink&quot; title=&quot;并行化&quot;&gt;&lt;/a&gt;并行化&lt;/h3&gt;&lt;p&gt;所有的 stream 都可以串行或并行执行，jdk 默认使用串行处理 stream ，如果需要并行，可以指定使用并行方式处理，如 Collection.parallelStream() 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sumOfWeights = widgets.parallelStream()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          .filter(b -&amp;gt; b.getColor() == RED)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          .mapToInt(b -&amp;gt; b.getWeight())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          .sum();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上边代码中，串行和并行的唯一区别就是使用 parallelStream() 代替 stream() 。&lt;/p&gt;
&lt;h3 id=&quot;Non-interference&quot;&gt;&lt;a href=&quot;#Non-interference&quot; class=&quot;headerlink&quot; title=&quot;Non-interference&quot;&gt;&lt;/a&gt;Non-interference&lt;/h3&gt;&lt;p&gt;大多数情况下，stream 操作接受的参数大多是 lambda 表达式，用来描述用户指定的行为。为了保证行为正确，这些参数必须是非干扰和无状态的。&lt;/p&gt;
&lt;h3 id=&quot;Stream-语法&quot;&gt;&lt;a href=&quot;#Stream-语法&quot; class=&quot;headerlink&quot; title=&quot;Stream 语法&quot;&gt;&lt;/a&gt;Stream 语法&lt;/h3&gt;&lt;p&gt;Stream 语法由源，中间操作和最终操作组成。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/stream.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;从上图（图片来自&lt;a href=&quot;http://ifeve.com/stream/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ifeve.com/stream/&lt;/a&gt;）可以看出，使用 Stream 的基本步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建 Stream&lt;br&gt;红色框中语句生成的是一个包含所有 nums 变量的 Stream 。&lt;/li&gt;
&lt;li&gt;转换 Stream&lt;br&gt;绿色框中语句把一个 Stream 转换成另外一个 Stream ，原 Stream 不变。&lt;/li&gt;
&lt;li&gt;对 Stream 进行聚合（Reduce）操作&lt;br&gt;蓝色框中语句把 Stream 的里面包含的内容按照某种算法来汇聚成一个值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创建&lt;/strong&gt;&lt;br&gt;获得 stream 的方法有如下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 Collection 的 parallelStream() 和 stream() 方法；&lt;/li&gt;
&lt;li&gt;通过 Arrays.stream(Object[]) 方法；&lt;/li&gt;
&lt;li&gt;通过 Stream 的静态工厂方法，如：Stream.of(Object[]), IntStream.range(int, int) or Stream.iterate(Object, UnaryOperator);&lt;/li&gt;
&lt;li&gt;通过 BufferedReader.lines();&lt;/li&gt;
&lt;li&gt;Stream&lt;path&gt;&lt;/path&gt; 可通过 File 类中的方法获得，如：list(Path dir) 或 lines(Path path) 等；&lt;/li&gt;
&lt;li&gt;Random.ints() 可获得 IntStream ；&lt;/li&gt;
&lt;li&gt;其他一下生成 stream 的方法，如：BitSet.stream(), Pattern.splitAsStream(java.lang.CharSequence), and JarFile.stream() 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;转换&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;distinct:&lt;br&gt;对于 Stream 中包含的元素进行去重操作（去重逻辑依赖元素的 equals 方法），新生成的 Stream 中没有重复的元素。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/distinct.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;filter:&lt;br&gt;对于 Stream 中包含的元素使用给定的过滤函数进行过滤操作，新生成的 Stream 只包含符合条件的元素。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/filter.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;map:&lt;br&gt;对于 Stream 中包含的元素使用给定的转换函数进行转换操作，新生成的 Stream 只包含转换生成的元素。这个方法有三个对于原始类型的变种方法，分别是：mapToInt，mapToLong 和mapToDouble 。这三个方法也比较好理解，比如 mapToInt 就是把原始 Stream 转换成一个新的 Stream ，这个新生成的 Stream 中的元素都是 int 类型。之所以会有这样三个变种方法，可以免除自动装箱/拆箱的额外消耗。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/map.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flatMap:&lt;br&gt;和 map 类似，不同的是其每个元素转换得到的是 Stream 对象，会把子 Stream 中的元素压缩到父集合中。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/flatMap.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;光从文字描述，感觉 flatMap 还是很难理解，通过程序帮助理解。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Stream&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; nums = Stream.of(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nums.flatMap(e -&amp;gt; e.stream()).collect(Collectors.toList()).forEach(e -&amp;gt; System.out.print(e + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果为&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出 flatMap 的作用是将源 Stream 中的 List 结构去掉，用 List 中的元素构成新的 List 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;peek:&lt;br&gt;生成一个包含原 Stream 的所有元素的新 Stream ，同时会提供一个消费函数（ Consumer 实例）。新 Stream 每个元素被消费的时候都会执行给定的消费函数。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/peek.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 文字描述还是没有程序直观&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Stream&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; nums = Stream.of(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.asList(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nums.peek(e -&amp;gt; System.out.println(e.size())) &lt;span class=&quot;comment&quot;&gt;// 查看每个元素(list)的 size&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .map(e -&amp;gt; e.get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .collect(Collectors.toList())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .forEach(System.out::print);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; peek 字面意思是窥视，通常也多用在 debug 中查看 Stream 的元素内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;limit:&lt;br&gt;对一个 Stream 进行截断操作，获取其前 N 个元素，如果原 Stream 中包含的元素个数小于 N ，那就获取其所有的元素。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/limit.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;skip:&lt;br&gt;返回一个丢弃原 Stream 的前 N 个元素后剩下元素组成的新 Stream ，如果原 Stream 中包含的元素个数小于 N ，那么返回空 Stream。&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/skip.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;聚合&lt;/strong&gt;&lt;br&gt;聚合也叫 fold ，是通过重复的组合操作将一个元素序列合并成单独的结果，比如求 sum 或找到一个数字集合的最大值。Stream 类有多种形式的通用聚合操作，如 reduce() 和 collect() ，还有很多特殊的聚合操作，如 sum() 和 count() ，这些只有 IntStream 、DoubleStream 和 LongSteam 类才有。&lt;br&gt;在 jdk 1.8 以前，要计算 sum 通常使用 for 循环：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x : numbers) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   sum += x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 Stream 可以这样写：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = numbers.stream().reduce(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, (x,y) -&amp;gt; x + y);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/reduce.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = numbers.stream().reduce(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, Integer::sum);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可变聚合&lt;br&gt;可变聚合操作是将输入元素聚合到一个可变的结果容器中，如 Collection 或 StringBuilder 。&lt;br&gt;如果想将 Stream 中的字符串连接成一个长字符串，通常的做法是：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String concatenated = strings.reduce(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, String::concat)；&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;collect() 的一般形式是：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;R&amp;gt; &lt;span class=&quot;function&quot;&gt;R &lt;span class=&quot;title&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Supplier&amp;lt;R&amp;gt; supplier,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               BiConsumer&amp;lt;R, ? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; T&amp;gt; accumulator,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               BiConsumer&amp;lt;R, R&amp;gt; combiner);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该操作需要 3 个函数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Supplier 创建一个新的结果容器的实例；&lt;/li&gt;
&lt;li&gt;accumulator 将输入参数组织到结果容器中；&lt;/li&gt;
&lt;li&gt;combiner 将结果容器中的内容合并生成另一个结果容器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将集合中的字符串全转成大写：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list = Lists.newArrayList(&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list1 = list.stream().collect(() -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(), (c, e) -&amp;gt; c.add(e.toUpperCase()), (c1, c2) -&amp;gt; c1.addAll(c2));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用标准 Collector 重写：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list2 = list.stream().map(String::toUpperCase).collect(ArrayList::&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;, ArrayList::add, ArrayList::addAll);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有更简化的写法，利用 collect() 的重载方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;R, A&amp;gt; &lt;span class=&quot;function&quot;&gt;R &lt;span class=&quot;title&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Collector&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; T, A, R&amp;gt; collector)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list3 = list.stream().map(String::toUpperCase).collect(Collectors.toList());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Java Stream 是 jdk 1.8 加入的新 API ，目的是用来支持函数式编程，位于 java.util.stream 包下。&lt;/p&gt;
&lt;p&gt;Stream 并不是集合，只是提供了针对于集合的函数式操作，如 Map-Rudeuce 转换。Stream 和集合的区别主
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 反射</title>
    <link href="http://bysonline.github.io/2016/08/19/Java-%E5%8F%8D%E5%B0%84/"/>
    <id>http://bysonline.github.io/2016/08/19/Java-反射/</id>
    <published>2016-08-19T07:20:47.000Z</published>
    <updated>2016-08-22T02:54:51.732Z</updated>
    
    <content type="html">&lt;p&gt;Java 反射是 jdk 1.5 加入新特性。Java 反射机制可以让我们在编译期 (Compile Time) 之外的运行期 (Runtime) 检查类，接口，变量以及方法的信息。反射还可以让我们在运行期实例化对象，调用方法，通过调用 get/set 方法获取变量的值。&lt;/p&gt;
&lt;p&gt;如果我们要将一个对象 User 实例 A 的值赋给实例 B ，通常这样&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//getter/setter&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User A = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.setName(&lt;span class=&quot;string&quot;&gt;&quot;tom&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.setAge(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User B = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;B.setName(A.getName());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;B.setAge(A.getAge());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样写非常简单，但是如果对象 User 的属性很多，那么写起来就比较麻烦了。于是可以利用反射来实现：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class clazz = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;a.b.c.User&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Constructor constructor = clazz.getDeclaredConstructor();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Object B = constructor.newInstance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Field[] fields = clazz.getDeclaredFields();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Field field : fields) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String fieldName = field.getName();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String setMethodName = &lt;span class=&quot;string&quot;&gt;&quot;set&quot;&lt;/span&gt; + fieldName.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toUpperCase() + fieldName.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String getMethodName = &lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt; + fieldName.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toUpperCase() + fieldName.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Method setMethod = clazz.getDeclaredMethod(setMethodName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Class[]&amp;#123;field.getType()&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Method getMethod = clazz.getDeclaredMethod(getMethodName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Class[]&amp;#123;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    setMethod.invoke(B, getMethod.invoke(A, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[]&amp;#123;&amp;#125;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用反射实现，代码多了，但是好处是灵活性提高。不过并不建议这样使用，原因有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码不够精简&lt;/li&gt;
&lt;li&gt;性能不高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以通常我们会借助第三方类库来实现。第三方类库有很多，以 commons.BeanUtils 为例：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;BeanUtils.setProperty(B, field, BeanUtils.getProperty(user, field));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，代码精简了许多。&lt;/p&gt;
&lt;h3 id=&quot;高性能反射库-ReflectASM&quot;&gt;&lt;a href=&quot;#高性能反射库-ReflectASM&quot; class=&quot;headerlink&quot; title=&quot;高性能反射库 ReflectASM&quot;&gt;&lt;/a&gt;高性能反射库 ReflectASM&lt;/h3&gt;&lt;p&gt;关于反射，除了诸多优点，还有一个被人诟病的问题就是性能。不能否认，使用反射性能的确要慢一些，但是随着 Java 的不断优化，反射的速度也在不断提升。另外还是有一些反射库能帮助提升程序性能，比如 ReflectASM 。&lt;/p&gt;
&lt;p&gt;ReflectASM 是通过字节码方式实现反射机制的反射库，写法比较简单，而且比 Java 自己的反射包和 commons.BeanUtils 等要快很多。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;groupId&amp;gt;com.esotericsoftware.reflectasm&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;artifactId&amp;gt;reflectasm&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;version&amp;gt;1.09&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MethodAccess access = MethodAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;access.invoke(B, &lt;span class=&quot;string&quot;&gt;&quot;setName&quot;&lt;/span&gt;, access.invoke(A, &lt;span class=&quot;string&quot;&gt;&quot;getName&quot;&lt;/span&gt;));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然 RefectASM 速度快很多，但是在多次使用到相同的对象还是应该利用缓存才能进一步提升性能。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MethodAccess access = map.get(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (access == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    access = MethodAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    map.put(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, access);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反射是一项非常有用的特性，能够在编程时解决很多特殊的问题，而性能会越来越快，所以应该合理大胆的使用反射。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;补充：关于使用 ReflectASM 的问题&lt;br&gt;使用 ReflectASM 创建类的实例&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ConstructorAccess access = ConstructorAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;access.newInstance();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是想调用带参数的构造器时，却没有找到方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Java 反射是 jdk 1.5 加入新特性。Java 反射机制可以让我们在编译期 (Compile Time) 之外的运行期 (Runtime) 检查类，接口，变量以及方法的信息。反射还可以让我们在运行期实例化对象，调用方法，通过调用 get/set 方法获取变量的值。&lt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>多线程拾遗</title>
    <link href="http://bysonline.github.io/2016/08/16/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8B%BE%E9%81%97/"/>
    <id>http://bysonline.github.io/2016/08/16/多线程拾遗/</id>
    <published>2016-08-16T08:16:05.000Z</published>
    <updated>2016-09-14T10:28:19.735Z</updated>
    
    <content type="html">&lt;p&gt;多线程知识点和问题汇总。&lt;/p&gt;
&lt;h3 id=&quot;如何创建多线程&quot;&gt;&lt;a href=&quot;#如何创建多线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建多线程&quot;&gt;&lt;/a&gt;如何创建多线程&lt;/h3&gt;&lt;p&gt;这是一个简单的文件，可以继承 Thread 类或是实现接口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;继承 Thread 类，重写父类的 run() 方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; A().start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现 Runnable 接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B()).start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继承 Thread 类和实现 Runnable 接口是最常用的两种创建多线程的方法，从 jdk 1.5 开始加入了 Callable&lt;t&gt; 接口。 Callable 接口和 Runnable 类似，但是可以有返回值，可使用 FutureTask 或线程池启动线程。&lt;/t&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Callable&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FutureTask futureTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FutureTask(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(futureTask).start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;继承-Thread-和-实现-Runnable-的区别&quot;&gt;&lt;a href=&quot;#继承-Thread-和-实现-Runnable-的区别&quot; class=&quot;headerlink&quot; title=&quot;继承 Thread 和 实现 Runnable 的区别&quot;&gt;&lt;/a&gt;继承 Thread 和 实现 Runnable 的区别&lt;/h3&gt;&lt;p&gt;主要区别有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于 Java 单继承的特点，继承 Thread 类无法再继承其他类相对接口方式有些限制。&lt;/li&gt;
&lt;li&gt;实现 Runnable 接口方式能够实现资源共享。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，实际中更多的是使用 Runnable 接口来创建多线程。&lt;/p&gt;
&lt;h3 id=&quot;Runnable-和-Callable-的区别&quot;&gt;&lt;a href=&quot;#Runnable-和-Callable-的区别&quot; class=&quot;headerlink&quot; title=&quot;Runnable 和 Callable 的区别&quot;&gt;&lt;/a&gt;Runnable 和 Callable 的区别&lt;/h3&gt;&lt;p&gt;Runnable 接口的 run() 方法返回值。&lt;br&gt;Callable 接口是 jdk 1.5 以后加入的，call() 返回一个泛型类型的返回值，除了带返回值外和 Runnable 基本没有区别。Callable 通常 Future/FutureTask 一起使用。除了使用 FutureTask 外，还可以使用线程池。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ExecutorService executor = Executors.newFixedThreadPool(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Future future = executor.submit(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;多线程同步&quot;&gt;&lt;a href=&quot;#多线程同步&quot; class=&quot;headerlink&quot; title=&quot;多线程同步&quot;&gt;&lt;/a&gt;多线程同步&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/09/14/多线程同步/&quot;&gt;多线程同步&lt;/a&gt; 。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;多线程知识点和问题汇总。&lt;/p&gt;
&lt;h3 id=&quot;如何创建多线程&quot;&gt;&lt;a href=&quot;#如何创建多线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建多线程&quot;&gt;&lt;/a&gt;如何创建多线程&lt;/h3&gt;&lt;p&gt;这是一个简单的文件，可以继承 Thread 类或是实现接口。
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>HashMap 的工作原理</title>
    <link href="http://bysonline.github.io/2016/08/09/HashMap-%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://bysonline.github.io/2016/08/09/HashMap-的工作原理/</id>
    <published>2016-08-09T03:37:57.000Z</published>
    <updated>2016-09-08T04:00:31.951Z</updated>
    
    <content type="html">&lt;p&gt;HashMap 是最常用的集合类之一，在面试中也出镜率颇高。&lt;/p&gt;
&lt;h3 id=&quot;HashMap-和-Hashtable&quot;&gt;&lt;a href=&quot;#HashMap-和-Hashtable&quot; class=&quot;headerlink&quot; title=&quot;HashMap 和 Hashtable&quot;&gt;&lt;/a&gt;HashMap 和 Hashtable&lt;/h3&gt;&lt;p&gt;经常会问 &lt;strong&gt;HashMap 的特点&lt;/strong&gt; 及 &lt;strong&gt;HashMap 和 Hashtable 的区别&lt;/strong&gt; 等等。那么就先做一下简单总结。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;HashMap&lt;/th&gt;
&lt;th&gt;Hashtable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;所在位置&lt;/td&gt;
&lt;td&gt;实现 Map 接口，JDK 1.2 加入到 Java Collections Framework&lt;/td&gt;
&lt;td&gt;Hashtable 集成自 Dictionary ，JDK 1.2 实现了 Map 接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持 null key 或 null value&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;线程安全&lt;/td&gt;
&lt;td&gt;不安全&lt;/td&gt;
&lt;td&gt;安全&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上是3点是我们耳熟能详的二者之间的区别，Hashtable 不是我们此篇的重点，暂且放在一旁。&lt;/p&gt;
&lt;h3 id=&quot;碰撞&quot;&gt;&lt;a href=&quot;#碰撞&quot; class=&quot;headerlink&quot; title=&quot;碰撞&quot;&gt;&lt;/a&gt;碰撞&lt;/h3&gt;&lt;p&gt;上边这个面试题是通常只是开胃菜，每个熟悉 Java 的人都能知晓。上题热身之后，经常会有这样的问题提出： &lt;strong&gt;HashMap 是如何存储数据的?&lt;/strong&gt;&lt;br&gt;看过源码就能知道 HashMap 底层是使用 &lt;strong&gt;Array&lt;/strong&gt; 和 &lt;strong&gt;Linked Table&lt;/strong&gt; 来存储数据的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jdk 1.8.0_74&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; V &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(K key, V value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; putVal(hash(key), key, value, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;HashMap 在 put 一个 key-value 对时，首先对 key 做 hash 操作，然后将 key 分配到 table[i] 的位置。如果两个 key 的 hash(key) 结果相同，那么这两个 key 就都会分配到 table[i] 的位置，这两个 key 就会在 table[i] 的位置以链表的形式存储，这种现象称为 &lt;strong&gt;碰撞&lt;/strong&gt;。&lt;br&gt;可以用一张图来说明，我们假设将取模作为 &lt;code&gt;hash(key)&lt;/code&gt; 的话，put 如下一组数据：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;7&lt;/th&gt;
&lt;th&gt;17&lt;/th&gt;
&lt;th&gt;23&lt;/th&gt;
&lt;th&gt;33&lt;/th&gt;
&lt;th&gt;39&lt;/th&gt;
&lt;th&gt;49&lt;/th&gt;
&lt;th&gt;55&lt;/th&gt;
&lt;th&gt;73&lt;/th&gt;
&lt;th&gt;87&lt;/th&gt;
&lt;th&gt;103&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;将形成下图的结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到对 hash(key) 操作后，数据通过链表的形式分别存储在索引1和7的位置， 17,33,49 都存储在位置1，就是上文提到的碰撞。如果要从 HashMap 中取到33的值，首先需要定位到位置1，再遍历链表。理想情况下，如果在一个 HashMap 中数据都分散在数组中，没有出现碰撞，那么 get 的速度最快，时间复杂度为 O(1) , 如果出现碰撞，get 的性能将有所下降。极端情况下，如果所有数据都存储在相同位置，那 HashMap 就变成了 Linked Table ，时间复杂度为 O(n) 。&lt;br&gt;针对这样的情况，JDK 1.8 对 HashMap 的实现方式进行了优化，如果链表的长度大于阀值，就将链表改成红黑树，get 的时间复杂度为 O(logn) , 如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好了，说了这么多，简单总结一下吧。通常情况下，如果两个对象的 key 的 hashCode() 相同，那么他们 bucket 的位置相同而发生碰撞，Map.Entry 对象存储在链表中。当 get 时，通过 hashCode() 找到 bucket 的位置，然后遍历链表，通过 key.equals() 找到指定的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么使用 String 作为 key 是一个不错选择？&lt;/strong&gt;&lt;br&gt;其实，答案可以从上边获得。因为，String 是 final 的，并且有固定的 hashCode() 和 equals() 方法，所以能有效减少碰撞的发生，同时由于不可变，可以缓存 key 的 hashcode ，提高 get 对象的速度。同理，如果自定义对象作为 key ，应保证对象是不可变的，即保证 equals() 和 hashCode() 方法正确重写。&lt;/p&gt;
&lt;h3 id=&quot;rehashing-问题&quot;&gt;&lt;a href=&quot;#rehashing-问题&quot; class=&quot;headerlink&quot; title=&quot;rehashing 问题&quot;&gt;&lt;/a&gt;rehashing 问题&lt;/h3&gt;&lt;p&gt;HashMap 还有一个知识点会作为问题提出： HashMap 的容量是固定的么？ 如何扩容？ 会有什么问题？…等等。诸如此类的一系列问题，了解了 HashMap 的 resize 之后都可以轻松回答。&lt;br&gt;HashMap 有两个重要的参数，DEFAULT_INITIAL_CAPACITY 和 DEFAULT_LOAD_FACTOR 。在初始化时默认容量为16，当 bucket 的使用数量超过 DEFAULT_INITIAL_CAPACITY 和 DEFAULT_LOAD_FACTOR 的乘积时，HashMap 会将容量扩充为原来的两倍（就是将上图中的数组大小变成原来的两倍），同时重新按照 hash(key) 来存放对象到新的数组中，这个过程叫做 rehashing 。&lt;br&gt;在 JDK 1.8 之前，每次 resize 需要从新计算 hash(key) 的值，在 JDK 1.8 中对这里也做了优化。1.8 的 resize 使用的是2次幂扩展，所以在 resize 的过程中，元素要么在原索引位置，要么在2倍索引位置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看一下源码会更清楚&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jdk 1.8.0_74&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; loHead = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, loTail = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; hiHead = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, hiTail = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;do &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    next = e.next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((e.hash &amp;amp; oldCap) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loTail == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            loHead = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            loTail.next = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        loTail = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hiTail == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hiHead = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hiTail.next = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        hiTail = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((e = next) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loTail != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loTail.next = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    newTab[j] = loHead;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hiTail != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    hiTail.next = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    newTab[j + oldCap] = hiHead;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;先遍历链表算出 hiTail 和 loTail ，然后根据 hiTail 和 loTail 得到元素在新数组中的位置。说简单点，由于扩容是向左移一位，那么不用每次都重新计算 hash(key) ，只要看左边新扩展的一位是0还是1, 0就留在原位置，1就将原位置索引加上原容量得到新位置的索引。计算结果参考下图：&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后 rehashing 有没有问题呢？ 在多线程环境下，rehashing 会出现条件竞争，导致程序死循环。这也是为什么要在多线程环境中对 HashMap 进行线程安全处理的原因了。&lt;/p&gt;
&lt;h3 id=&quot;concurrentHashMap-和-Hashtable-的区别&quot;&gt;&lt;a href=&quot;#concurrentHashMap-和-Hashtable-的区别&quot; class=&quot;headerlink&quot; title=&quot;concurrentHashMap 和 Hashtable 的区别&quot;&gt;&lt;/a&gt;concurrentHashMap 和 Hashtable 的区别&lt;/h3&gt;&lt;p&gt;HashMap 是线程不安全的，所以为了保证线程安全，我们有多种替代方案： Hashtable 、 Collections.sychroniziedMap() 和 concurrentHashMap 等。我们可以简单的将 Hashtable 理解为 HashMap 的线程安全版本，但是 Hashtable （包括 Collections.sychroniziedMap() ）的性能却不尽如人意，实际使用更多的是 concurrentHashMap 。&lt;br&gt;Hashtable 和 concurrentHashMap 的性能差异的关键是写锁的数量。Hashtable 简单粗暴的使用了整个 Map 范围的锁，插入、删除及检索，甚至遍历等操作都要保持锁，所以极大的限制了并发。&lt;br&gt;concurrentHashMap 则是将锁分散到每个 bucket 。bucket 的锁的数量是 32 ，也就意味着可以有 32 个线程同时操作 Map ，其性能自然比 Hashtable 要好很多。&lt;/p&gt;
&lt;h3 id=&quot;如何优化-HashMap-的性能&quot;&gt;&lt;a href=&quot;#如何优化-HashMap-的性能&quot; class=&quot;headerlink&quot; title=&quot;如何优化 HashMap 的性能&quot;&gt;&lt;/a&gt;如何优化 HashMap 的性能&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;初始化容量&lt;/strong&gt;&lt;br&gt;通常情况下 HashMap 的性能还是比较稳定的，算是在 ArrayList 和 LinkedList 之间取了平衡。&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;获取&lt;/th&gt;
&lt;th&gt;查找&lt;/th&gt;
&lt;th&gt;添加/删除&lt;/th&gt;
&lt;th&gt;空间     &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ArrayList&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LinkedList&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HashMap&lt;/td&gt;
&lt;td&gt;O(N/Bucket_size)&lt;/td&gt;
&lt;td&gt;O(N/Bucket_size)&lt;/td&gt;
&lt;td&gt;O(N/Bucket_size)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;N 为元素的个数，Bucket_size 是桶的数量，在碰撞很少的情况下，复杂度趋近于 O(1) 。如果想进一步提高 HashMap 的性能，则需要在设计时有更多考虑。HashMap 的初始容量为 16 ，容量超过 75% 就会 resizing 。虽然 HashMap 的 resizing 性能再不断提升，但是如果能预估 HashMap 的大小，就能够避免不必要的 resizing 。&lt;br&gt;如果有 1000 个元素， 下面的写法必定会触发 resizing 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Map map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Map map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不考虑空间因素，2 倍 size 是最简单的方法。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Map map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但这样并不是太好，因为 HashMap 本身就不省空间。所以靠谱的做法还是自己算一个 init size 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; size = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;0.75f&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Map map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap(size);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Map map = Maps.newHashMapWithExpectedSize(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Key 的设计建议&lt;/strong&gt;&lt;br&gt;我们知道 Map 获取元素是通过 Key 来比较的，Integer 的数值型的 Key 可以使用 == 来比较，而 String 需要用 equals ，一个一个字符比较还是比较慢的，好在 String 是 final 的，hashcode 可以缓存，但还是建议在只能使用 equals 的情况下，将 Key 设计的短一些。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用替代数据结构&lt;/strong&gt;&lt;br&gt;在极端情况下，如果 HashMap 的可以使用支持 int 、 long 等原生类型作为 Key 的数据结构来代替。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;HashMap 是最常用的集合类之一，在面试中也出镜率颇高。&lt;/p&gt;
&lt;h3 id=&quot;HashMap-和-Hashtable&quot;&gt;&lt;a href=&quot;#HashMap-和-Hashtable&quot; class=&quot;headerlink&quot; title=&quot;HashMap 和 Hashta
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 中的回调函数</title>
    <link href="http://bysonline.github.io/2016/08/08/Java-%E4%B8%AD%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"/>
    <id>http://bysonline.github.io/2016/08/08/Java-中的回调函数/</id>
    <published>2016-08-08T09:23:33.000Z</published>
    <updated>2016-08-20T07:04:17.276Z</updated>
    
    <content type="html">&lt;p&gt;在 Spring 和 Hibernate 中有很多回调函数的用法，感觉使用起来非常方便，那么回调函数是如何实现的呢？&lt;/p&gt;
&lt;p&gt;首先需要定义一个回调接口，比如：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueryCallback&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;List&amp;lt;T&amp;gt; &lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Session session)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在定义的方法是调用接口方法。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;queryForList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String sql, Callback callback)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Session session = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Session();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; callback.query(session);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调用的时候就可以使用回调了。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String sql = &lt;span class=&quot;string&quot;&gt;&quot;select * from user&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryDB().queryForList(sql, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List &lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Session session)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;String&amp;gt; list = session.query(sql);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 Spring 和 Hibernate 中有很多回调函数的用法，感觉使用起来非常方便，那么回调函数是如何实现的呢？&lt;/p&gt;
&lt;p&gt;首先需要定义一个回调接口，比如：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 关键字 volatile 详解</title>
    <link href="http://bysonline.github.io/2016/08/08/Java-%E5%85%B3%E9%94%AE%E5%AD%97-volatile-%E8%AF%A6%E8%A7%A3/"/>
    <id>http://bysonline.github.io/2016/08/08/Java-关键字-volatile-详解/</id>
    <published>2016-08-08T03:39:01.000Z</published>
    <updated>2016-09-08T06:42:10.338Z</updated>
    
    <content type="html">&lt;p&gt;volatile 是 Java 语言的关键字，用来修饰变量。Java 的每个线程都拥有自己的内存，在某个时间点，多个线程中间的同一个变量的值可能是不同的，volatile 的作用就是让变量对所有线程都是一致的，每次获得的都是该变量的最新值。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;volatile 在特殊情况下（变量之间或前后没有约束）是能够保证线程安全的，反之，是不能保证线程安全的，比如，不能使用 volatile 来实现线程安全的计数器。 因为 volatile 不是原子性的，而 &lt;code&gt;i+1&lt;/code&gt; 或 &lt;code&gt;i++&lt;/code&gt; 操作实际是三个原子操作（read，赋值，write）的组合，所以不能保证线程安全。&lt;/p&gt;
&lt;p&gt;volatile 不能像 synchronized 一样广泛的用于线程安全，虽然 volatile 的用法要和某些情况下的性能要比 synchronized 和锁简单和高效，但误用将导致程序出现错误。如果能在正确的场景使用 volatile ，还是能使程序更加简单。比如程序需要有一个标识来指示一个一次性操作，像资源初始化，那么使用 volatile 是非常方便的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isInit；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  isINit = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(isInit)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;volatile 变量比使用 synchronized 代码要简单一些，在这种只有一种状态转换的情况使用 volatile 是合适的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;volatile 和 synchronized 简单比较&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;volatile&lt;/th&gt;
&lt;th&gt;synchronized&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;作用位置&lt;/td&gt;
&lt;td&gt;变量&lt;/td&gt;
&lt;td&gt;方法，代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;同步对象&lt;/td&gt;
&lt;td&gt;主内存和线程内存之间某个变量的值&lt;/td&gt;
&lt;td&gt;主内存和线程内存之间所有变量的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;消耗资源&lt;/td&gt;
&lt;td&gt;少&lt;/td&gt;
&lt;td&gt;多&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;volatile 是 Java 语言的关键字，用来修饰变量。Java 的每个线程都拥有自己的内存，在某个时间点，多个线程中间的同一个变量的值可能是不同的，volatile 的作用就是让变量对所有线程都是一致的，每次获得的都是该变量的最新值。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>枚举单例读取配置文件</title>
    <link href="http://bysonline.github.io/2016/08/02/%E6%9E%9A%E4%B8%BE%E5%8D%95%E4%BE%8B%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://bysonline.github.io/2016/08/02/枚举单例读取配置文件/</id>
    <published>2016-08-02T15:29:14.000Z</published>
    <updated>2016-08-08T08:53:43.049Z</updated>
    
    <content type="html">&lt;p&gt;枚举实现单例在《Effective in java》中提到过，好处是简洁，同时不会有序列化和反序列化的问题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;下面一个 enum 单例的实际示例，用来读取配置文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.properties&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;host=htt:&lt;span class=&quot;comment&quot;&gt;//localhost&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port=&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AppContext.java&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ResourceBundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;  AppContext &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ResourceBundle rb = ResourceBundle.getBundle(&lt;span class=&quot;string&quot;&gt;&quot;config&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rb.getString(key);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;``&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;**client**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```java&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Client&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String host = AppContext.INSTANCE.getValue(&lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;枚举实现单例在《Effective in java》中提到过，好处是简洁，同时不会有序列化和反序列化的问题。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://bysonline.github.io/2016/08/02/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://bysonline.github.io/2016/08/02/单例模式/</id>
    <published>2016-08-01T16:00:47.000Z</published>
    <updated>2016-09-07T02:47:50.463Z</updated>
    
    <content type="html">&lt;p&gt;单例模式是最简单的设计模式之一，用于保证系统中只有一个类的实例的场景。&lt;/p&gt;
&lt;p&gt;单例模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有一个实例&lt;/li&gt;
&lt;li&gt;只能自己创建自己的实例&lt;/li&gt;
&lt;li&gt;能够对外提供自己创建的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-程序示例&quot;&gt;&lt;a href=&quot;#1-程序示例&quot; class=&quot;headerlink&quot; title=&quot;1. 程序示例&quot;&gt;&lt;/a&gt;1. 程序示例&lt;/h3&gt;&lt;h4 id=&quot;1-1-懒汉式&quot;&gt;&lt;a href=&quot;#1-1-懒汉式&quot; class=&quot;headerlink&quot; title=&quot;1.1 懒汉式&quot;&gt;&lt;/a&gt;1.1 懒汉式&lt;/h4&gt;&lt;p&gt;在 Gof 的设计模式中介绍单例模式使用的说明代码叫做懒汉式，java 版代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton instance = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是最简单的代码实现，但是这个代码存在问题，即在多线程的程序中，不能保证一定是单例的。原因也很简单，代码被编译成字节码被执行，有可能在刚进入 if 判断后时间分片就用完了，另一个线程也进入 if 判断，从而创建多个实例。一种简单的处理方法是将方法同步。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-饿汉式&quot;&gt;&lt;a href=&quot;#1-2-饿汉式&quot; class=&quot;headerlink&quot; title=&quot;1.2 饿汉式&quot;&gt;&lt;/a&gt;1.2 饿汉式&lt;/h4&gt;&lt;p&gt;另外还有一种比较常见的叫做饿汉式，这种方式更符合 java 的风格。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Singleton INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-3-静态内部类&quot;&gt;&lt;a href=&quot;#1-3-静态内部类&quot; class=&quot;headerlink&quot; title=&quot;1.3 静态内部类&quot;&gt;&lt;/a&gt;1.3 静态内部类&lt;/h4&gt;&lt;p&gt;通常情况下，直接使用恶汉式是最安逸的，况且内存越来越不是瓶颈了。但是如果还对装载类时初始化耿耿于怀，可以使用这种方式。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonHolder&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Singleton INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SingletonHolder.INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用静态内部类的好处是不会在装载 Singleton 的时候就实例化，而是在调用 getInstance() 方法时才创建实例。&lt;/p&gt;
&lt;h4 id=&quot;1-4-枚举&quot;&gt;&lt;a href=&quot;#1-4-枚举&quot; class=&quot;headerlink&quot; title=&quot;1.4 枚举&quot;&gt;&lt;/a&gt;1.4 枚举&lt;/h4&gt;&lt;p&gt;在 jdk1.5 以后加入了枚举，也可以使用枚举来实现单例。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; Singleton &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whateverMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 enum 方式创建单例的好处是简单，简单到让人看不懂。怎么使用可参考一个例子 &lt;a href=&quot;../../../../2016/08/02/枚举单例读取配置文件/&quot;&gt;枚举单例读取配置文件&lt;/a&gt; 。&lt;/p&gt;
&lt;h4 id=&quot;1-5-双重校验锁&quot;&gt;&lt;a href=&quot;#1-5-双重校验锁&quot; class=&quot;headerlink&quot; title=&quot;1.5 双重校验锁&quot;&gt;&lt;/a&gt;1.5 双重校验锁&lt;/h4&gt;&lt;p&gt;网上很多单例的文章中都提到了双重校验锁的方式。这种方式出现的目的是对懒汉式进行优化。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (Singleton.class) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在《java 与模式》一书中针对这种方式也做了分析，这种方式并不能真正达到效果，所以还是安心使用饿汉吧。&lt;/p&gt;
&lt;p&gt;2016-08-08 补充：&lt;br&gt;网上一些资料中提到，自 JDK 1.5 以后，修复了 volatile 关键字的 bug ，所以，JDK 1.5 以后双重校验锁可以正常工作了。关于 volatile 关键字更多知识点，参考 &lt;a href=&quot;../../../../2016/08/08/Java 关键字 volatile/&quot;&gt;Java 关键字 volatile&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-类图&quot;&gt;&lt;a href=&quot;#2-类图&quot; class=&quot;headerlink&quot; title=&quot;2. 类图&quot;&gt;&lt;/a&gt;2. 类图&lt;/h3&gt;&lt;p&gt;如果要画出常用设计模式的类图，单例无疑是最简单的了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/singleton.png&quot; alt=&quot;单例模式&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;单例模式是最简单的设计模式之一，用于保证系统中只有一个类的实例的场景。&lt;/p&gt;
&lt;p&gt;单例模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有一个实例&lt;/li&gt;
&lt;li&gt;只能自己创建自己的实例&lt;/li&gt;
&lt;li&gt;能够对外提供自己创建的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="设计模式" scheme="http://bysonline.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>计算时间间隔</title>
    <link href="http://bysonline.github.io/2016/07/29/%E8%AE%A1%E7%AE%97%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94/"/>
    <id>http://bysonline.github.io/2016/07/29/计算时间间隔/</id>
    <published>2016-07-29T03:58:13.000Z</published>
    <updated>2016-07-29T06:12:56.674Z</updated>
    
    <content type="html">&lt;p&gt;在计算日期或是计算程序执行时间时，经常会需要计算两个时间或日期的间隔，通常可以通过一下几种方法实现。&lt;/p&gt;
&lt;h3 id=&quot;1-使用-Java-日期-api&quot;&gt;&lt;a href=&quot;#1-使用-Java-日期-api&quot; class=&quot;headerlink&quot; title=&quot;1. 使用 Java 日期 api&quot;&gt;&lt;/a&gt;1. 使用 Java 日期 api&lt;/h3&gt;&lt;p&gt;先计算出相差的毫秒值，再转化成天，小时，分，秒。&lt;br&gt;按时间进制自己算，代码略。&lt;/p&gt;
&lt;h3 id=&quot;2-使用-Joda-库&quot;&gt;&lt;a href=&quot;#2-使用-Joda-库&quot; class=&quot;headerlink&quot; title=&quot;2. 使用 Joda 库&quot;&gt;&lt;/a&gt;2. 使用 Joda 库&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DateTime dt1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DateTime(d1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DateTime dt2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DateTime(d2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; days = Days.daysBetween(dt1, dt2).getDays();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = Hours.hoursBetween(dt1, dt2).getHours() % &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = Minutes.minutesBetween(dt1, dt2).getMinutes() % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = Seconds.secondsBetween(dt1, dt2).getSeconds() % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;br&gt;计算出两个时间的毫秒数&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Interval interval = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Interval(start, end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Period p = interval.toPeriod();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; days = p.getDays();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = p.getHours();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = p.getMinutes();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = p.getSeconds();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-使用-TimeUnit&quot;&gt;&lt;a href=&quot;#3-使用-TimeUnit&quot; class=&quot;headerlink&quot; title=&quot;3. 使用 TimeUnit&quot;&gt;&lt;/a&gt;3. 使用 TimeUnit&lt;/h3&gt;&lt;p&gt;计算出两个时间的毫秒数，使用 java.util.concurrent 包下的 TimeUint 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; diff = t2 - t1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; days = TimeUnit.MILLISECONDS.toDays(diff);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; hours = TimeUnit.MILLISECONDS.toHours(diff) % &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; minutes = TimeUnit.MILLISECONDS.toMinutes(diff) % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; seconds = TimeUnit.MILLISECONDS.toSeconds(diff) % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在计算日期或是计算程序执行时间时，经常会需要计算两个时间或日期的间隔，通常可以通过一下几种方法实现。&lt;/p&gt;
&lt;h3 id=&quot;1-使用-Java-日期-api&quot;&gt;&lt;a href=&quot;#1-使用-Java-日期-api&quot; class=&quot;headerlink&quot; title=&quot;1.
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>线程的状态</title>
    <link href="http://bysonline.github.io/2016/07/24/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81/"/>
    <id>http://bysonline.github.io/2016/07/24/线程的状态/</id>
    <published>2016-07-24T13:50:03.000Z</published>
    <updated>2016-07-27T11:05:00.949Z</updated>
    
    <content type="html">&lt;p&gt;参考 jdk 源码 java.lant.Thread.State 。Java 的线程有以下几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NEW&lt;br&gt;线程未启动。&lt;/li&gt;
&lt;li&gt;RUNNABLE&lt;br&gt;线程在 JVM 中运行，也可能在等待其他资源。&lt;/li&gt;
&lt;li&gt;BLOCKED&lt;br&gt;线程阻塞并等待锁，在调用 wait() 方法后进入或重新进入同步方法。&lt;/li&gt;
&lt;li&gt;WAITTING&lt;br&gt;线程在执行特定的方法如： Object.wait(), Thread.join(), LockSupport.park() 后等待另一个线程执行特定的方法，如：Object.notify()/Object.notifyAll() 。&lt;/li&gt;
&lt;li&gt;TIMED_WAITTING&lt;br&gt;线程在执行特定方法后进入执行时间的等待状态，如： Thread.sleep(), Object.wait(), Thread.join(), LockSupport.parkNanos, LockSupport.parkUntil&lt;/li&gt;
&lt;li&gt;TERMINATED&lt;br&gt;线程执行完成。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;参考 jdk 源码 java.lant.Thread.State 。Java 的线程有以下几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NEW&lt;br&gt;线程未启动。&lt;/li&gt;
&lt;li&gt;RUNNABLE&lt;br&gt;线程在 JVM 中运行，也可能在等待其他资源。&lt;/li&gt;
&lt;li&gt;BLOCK
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Thread" scheme="http://bysonline.github.io/tags/Thread/"/>
    
      <category term="Javase" scheme="http://bysonline.github.io/tags/Javase/"/>
    
  </entry>
  
  <entry>
    <title>面试题汇总</title>
    <link href="http://bysonline.github.io/2016/07/24/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://bysonline.github.io/2016/07/24/面试题汇总/</id>
    <published>2016-07-24T08:03:23.000Z</published>
    <updated>2016-09-07T13:24:05.611Z</updated>
    
    <content type="html">&lt;p&gt;把自己遇到和网上看到的一写面试题汇总了一下，帮助梳理和学习一些知识点。&lt;/p&gt;
&lt;h1 id=&quot;一-算法&quot;&gt;&lt;a href=&quot;#一-算法&quot; class=&quot;headerlink&quot; title=&quot;一. 算法&quot;&gt;&lt;/a&gt;一. 算法&lt;/h1&gt;&lt;h2 id=&quot;1-1-排序&quot;&gt;&lt;a href=&quot;#1-1-排序&quot; class=&quot;headerlink&quot; title=&quot;1.1 排序&quot;&gt;&lt;/a&gt;1.1 排序&lt;/h2&gt;&lt;h3 id=&quot;1）-时间复杂度&quot;&gt;&lt;a href=&quot;#1）-时间复杂度&quot; class=&quot;headerlink&quot; title=&quot;1） 时间复杂度&quot;&gt;&lt;/a&gt;1） 时间复杂度&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/排序算法/&quot;&gt;算法排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-快速排序&quot;&gt;&lt;a href=&quot;#2）-快速排序&quot; class=&quot;headerlink&quot; title=&quot;2） 快速排序&quot;&gt;&lt;/a&gt;2） 快速排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/快速排序/&quot;&gt;快速排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;3）-冒泡排序&quot;&gt;&lt;a href=&quot;#3）-冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;3） 冒泡排序&quot;&gt;&lt;/a&gt;3） 冒泡排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/冒泡排序/&quot;&gt;冒泡排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;4）-选择排序&quot;&gt;&lt;a href=&quot;#4）-选择排序&quot; class=&quot;headerlink&quot; title=&quot;4） 选择排序&quot;&gt;&lt;/a&gt;4） 选择排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/选择排序/&quot;&gt;选择排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;1-2-查找&quot;&gt;&lt;a href=&quot;#1-2-查找&quot; class=&quot;headerlink&quot; title=&quot;1.2 查找&quot;&gt;&lt;/a&gt;1.2 查找&lt;/h2&gt;&lt;h3 id=&quot;1）-二分查找&quot;&gt;&lt;a href=&quot;#1）-二分查找&quot; class=&quot;headerlink&quot; title=&quot;1） 二分查找&quot;&gt;&lt;/a&gt;1） 二分查找&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/二分查找/&quot;&gt;二分查找&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;1-3-树&quot;&gt;&lt;a href=&quot;#1-3-树&quot; class=&quot;headerlink&quot; title=&quot;1.3 树&quot;&gt;&lt;/a&gt;1.3 树&lt;/h2&gt;&lt;h3 id=&quot;1）-二叉树&quot;&gt;&lt;a href=&quot;#1）-二叉树&quot; class=&quot;headerlink&quot; title=&quot;1） 二叉树&quot;&gt;&lt;/a&gt;1） 二叉树&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/二叉树/&quot;&gt;二叉树&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-红黑树&quot;&gt;&lt;a href=&quot;#2）-红黑树&quot; class=&quot;headerlink&quot; title=&quot;2） 红黑树&quot;&gt;&lt;/a&gt;2） 红黑树&lt;/h3&gt;&lt;h1 id=&quot;二-Java-基础&quot;&gt;&lt;a href=&quot;#二-Java-基础&quot; class=&quot;headerlink&quot; title=&quot;二. Java 基础&quot;&gt;&lt;/a&gt;二. Java 基础&lt;/h1&gt;&lt;h2 id=&quot;2-1-nio&quot;&gt;&lt;a href=&quot;#2-1-nio&quot; class=&quot;headerlink&quot; title=&quot;2.1 nio&quot;&gt;&lt;/a&gt;2.1 nio&lt;/h2&gt;&lt;h2 id=&quot;2-2-线程&quot;&gt;&lt;a href=&quot;#2-2-线程&quot; class=&quot;headerlink&quot; title=&quot;2.2 线程&quot;&gt;&lt;/a&gt;2.2 线程&lt;/h2&gt;&lt;h3 id=&quot;1）-线程有几种状态？&quot;&gt;&lt;a href=&quot;#1）-线程有几种状态？&quot; class=&quot;headerlink&quot; title=&quot;1） 线程有几种状态？&quot;&gt;&lt;/a&gt;1） 线程有几种状态？&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/24/线程的状态/&quot;&gt;线程的状态&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-线程的优先级&quot;&gt;&lt;a href=&quot;#2）-线程的优先级&quot; class=&quot;headerlink&quot; title=&quot;2） 线程的优先级&quot;&gt;&lt;/a&gt;2） 线程的优先级&lt;/h3&gt;&lt;p&gt;Java 线程的优先级有10种，从1到10，默认为5。Java 线程的优先级具有继承性。&lt;/p&gt;
&lt;h2 id=&quot;2-3-JVM&quot;&gt;&lt;a href=&quot;#2-3-JVM&quot; class=&quot;headerlink&quot; title=&quot;2.3 JVM&quot;&gt;&lt;/a&gt;2.3 JVM&lt;/h2&gt;&lt;h2 id=&quot;2-4-集合&quot;&gt;&lt;a href=&quot;#2-4-集合&quot; class=&quot;headerlink&quot; title=&quot;2.4 集合&quot;&gt;&lt;/a&gt;2.4 集合&lt;/h2&gt;&lt;h3 id=&quot;1）-HashMap-工作原理&quot;&gt;&lt;a href=&quot;#1）-HashMap-工作原理&quot; class=&quot;headerlink&quot; title=&quot;1） HashMap 工作原理&quot;&gt;&lt;/a&gt;1） HashMap 工作原理&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/08/09/HashMap 的工作原理/&quot;&gt;HashMap 的工作原理&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2）-ConcurrentHashMap原理&quot;&gt;&lt;a href=&quot;#2）-ConcurrentHashMap原理&quot; class=&quot;headerlink&quot; title=&quot;2） ConcurrentHashMap原理&quot;&gt;&lt;/a&gt;2） ConcurrentHashMap原理&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/08/09/HashMap 的工作原理/#concurrentHashMap-和-Hashtable-的区别&quot;&gt;HashMap 的工作原理&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;3）-某公司正在做一个寻找走失儿童的公益项目，现在有一个函数，可以输入两个图片，并返回这个儿童是否重复。请你设计一个系统，帮助他们寻找儿童。&quot;&gt;&lt;a href=&quot;#3）-某公司正在做一个寻找走失儿童的公益项目，现在有一个函数，可以输入两个图片，并返回这个儿童是否重复。请你设计一个系统，帮助他们寻找儿童。&quot; class=&quot;headerlink&quot; title=&quot;3） 某公司正在做一个寻找走失儿童的公益项目，现在有一个函数，可以输入两个图片，并返回这个儿童是否重复。请你设计一个系统，帮助他们寻找儿童。&quot;&gt;&lt;/a&gt;3） 某公司正在做一个寻找走失儿童的公益项目，现在有一个函数，可以输入两个图片，并返回这个儿童是否重复。请你设计一个系统，帮助他们寻找儿童。&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;网友可以同时上传一批图片
系统能够把所有图片分类并归为一组
网友上传图片后，网页要尽快返回该照片所在的组。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A：假设你现在有一个机器，请写出你的数据结构与处理流程，设计的思路。&lt;br&gt;B：如果你有多台机器，如果缩短请求的时间？&lt;/p&gt;
&lt;h1 id=&quot;三-设计模式&quot;&gt;&lt;a href=&quot;#三-设计模式&quot; class=&quot;headerlink&quot; title=&quot;三. 设计模式&quot;&gt;&lt;/a&gt;三. 设计模式&lt;/h1&gt;&lt;h2 id=&quot;1）-单例模式&quot;&gt;&lt;a href=&quot;#1）-单例模式&quot; class=&quot;headerlink&quot; title=&quot;1） 单例模式&quot;&gt;&lt;/a&gt;1） 单例模式&lt;/h2&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/08/02/单例模式/&quot;&gt;单例模式&lt;/a&gt; 。&lt;/p&gt;
&lt;h1 id=&quot;四-大数据&quot;&gt;&lt;a href=&quot;#四-大数据&quot; class=&quot;headerlink&quot; title=&quot;四. 大数据&quot;&gt;&lt;/a&gt;四. 大数据&lt;/h1&gt;&lt;h1 id=&quot;五-Linux&quot;&gt;&lt;a href=&quot;#五-Linux&quot; class=&quot;headerlink&quot; title=&quot;五. Linux&quot;&gt;&lt;/a&gt;五. Linux&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;把自己遇到和网上看到的一写面试题汇总了一下，帮助梳理和学习一些知识点。&lt;/p&gt;
&lt;h1 id=&quot;一-算法&quot;&gt;&lt;a href=&quot;#一-算法&quot; class=&quot;headerlink&quot; title=&quot;一. 算法&quot;&gt;&lt;/a&gt;一. 算法&lt;/h1&gt;&lt;h2 id=&quot;1-1-排序&quot;&gt;&lt;a h
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="面试" scheme="http://bysonline.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>gulp 环境安装</title>
    <link href="http://bysonline.github.io/2016/07/20/Gulp-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>http://bysonline.github.io/2016/07/20/Gulp-环境安装/</id>
    <published>2016-07-20T03:13:51.000Z</published>
    <updated>2016-09-08T06:52:08.765Z</updated>
    
    <content type="html">&lt;p&gt;gulp是一个前端代码构建工具。安装gulp需要node.js环境，node.js环境安装参考 &lt;a href=&quot;../../../../2016/07/16/node.js 环境安装/&quot;&gt;node.js 环境安装&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;全局安装gulp命令行工具&quot;&gt;&lt;a href=&quot;#全局安装gulp命令行工具&quot; class=&quot;headerlink&quot; title=&quot;全局安装gulp命令行工具&quot;&gt;&lt;/a&gt;全局安装gulp命令行工具&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g gulp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;or&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install --global gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装开发环境&quot;&gt;&lt;a href=&quot;#安装开发环境&quot; class=&quot;headerlink&quot; title=&quot;安装开发环境&quot;&gt;&lt;/a&gt;安装开发环境&lt;/h3&gt;&lt;p&gt;切换到项目目录安装开发环境。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install -save-dev gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果网速慢，可以使用淘宝镜像。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo cnpm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建gulp文件&quot;&gt;&lt;a href=&quot;#创建gulp文件&quot; class=&quot;headerlink&quot; title=&quot;创建gulp文件&quot;&gt;&lt;/a&gt;创建gulp文件&lt;/h3&gt;&lt;p&gt;在项目根目录下创建gulpfile.js&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var gulp = require(&amp;apos;gulp&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&amp;apos;default&amp;apos;, function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 将你的默认的任务代码放在这&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h3&gt;&lt;p&gt;安装完成执行命令启动gulp。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;gulp是一个前端代码构建工具。安装gulp需要node.js环境，node.js环境安装参考 &lt;a href=&quot;../../../../2016/07/16/node.js 环境安装/&quot;&gt;node.js 环境安装&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;全局安装gulp命令行
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="gulp" scheme="http://bysonline.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>我的 hexo 我做主</title>
    <link href="http://bysonline.github.io/2016/07/19/%E6%88%91%E7%9A%84-hexo-%E6%88%91%E5%81%9A%E4%B8%BB/"/>
    <id>http://bysonline.github.io/2016/07/19/我的-hexo-我做主/</id>
    <published>2016-07-19T06:27:28.000Z</published>
    <updated>2016-09-13T10:06:41.439Z</updated>
    
    <content type="html">&lt;p&gt;Maupassant 主题有一些细节对于强迫症晚期患者来说，不改实在是浑身难受，遂记录一下修改项和修改方案。&lt;/p&gt;
&lt;h3 id=&quot;1-修改-toc-的位置&quot;&gt;&lt;a href=&quot;#1-修改-toc-的位置&quot; class=&quot;headerlink&quot; title=&quot;1. 修改 toc 的位置&quot;&gt;&lt;/a&gt;1. 修改 toc 的位置&lt;/h3&gt;&lt;p&gt;toc 在正文的右上，占了正文的空间，在 toc 较长的情况下，正文不能很好的显示，所以将 toc 改为在文章开头显示。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.toc-article &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  border: 1px solid #bbb;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  border-radius: 7px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  margin: 1.1em 0 0 2em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  padding: 0.7em 0.7em 0 0.7em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  max-width: 40%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  float: right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: 0.5em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主要是去掉浮动和边框，在调整一下周围位置。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.toc-article &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  padding: 40px 0 0 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 20px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-去掉-toc-中的序号&quot;&gt;&lt;a href=&quot;#2-去掉-toc-中的序号&quot; class=&quot;headerlink&quot; title=&quot;2. 去掉 toc 中的序号&quot;&gt;&lt;/a&gt;2. 去掉 toc 中的序号&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 20px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      a &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .toc-number &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          display: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc-child &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin-left: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-left: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-修改代码区样式&quot;&gt;&lt;a href=&quot;#3-修改代码区样式&quot; class=&quot;headerlink&quot; title=&quot;3. 修改代码区样式&quot;&gt;&lt;/a&gt;3. 修改代码区样式&lt;/h3&gt;&lt;p&gt;在将语言改成 zh_CN 后，代码区行高需要调整,去掉 &lt;code&gt;.codeblock&lt;/code&gt; 的 line-height 属性,修改 &lt;code&gt;.codeblock.line&lt;/code&gt; 的 height 属性。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;figure.highlight,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.codeblock &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:     #f7f8f8;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin:         10px 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /* line-height:    1.2em; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    color:          #333;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-top:    15px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    overflow:       hidden;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border: 1px solid #e5e5e5; /* 代码块加边框 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // All lines in gutter and code container&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .line &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        height:    2.1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        font-size: 13px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-去掉文章结尾-tags&quot;&gt;&lt;a href=&quot;#4-去掉文章结尾-tags&quot; class=&quot;headerlink&quot; title=&quot;4. 去掉文章结尾 tags&quot;&gt;&lt;/a&gt;4. 去掉文章结尾 tags&lt;/h3&gt;&lt;p&gt;tags 改成在文章开始位置显示，结尾的 tags 就没必要显示了，干脆隐藏掉。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.post &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .tags&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-bottom: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height: 30px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        display: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        margin-right: .5em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;amp;:before &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            font-family: &quot;FontAwesome&quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            content: &quot;\f0c6&quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            padding-right: 0.3em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调整分享按钮的位置&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.article-share-link&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-调整文章列表显示&quot;&gt;&lt;a href=&quot;#5-调整文章列表显示&quot; class=&quot;headerlink&quot; title=&quot;5. 调整文章列表显示&quot;&gt;&lt;/a&gt;5. 调整文章列表显示&lt;/h3&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.post-content&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-修改-table-样式&quot;&gt;&lt;a href=&quot;#6-修改-table-样式&quot; class=&quot;headerlink&quot; title=&quot;6. 修改 table 样式&quot;&gt;&lt;/a&gt;6. 修改 table 样式&lt;/h3&gt;&lt;p&gt;给 table 加上边框，将原有框线调细&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;table &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    th &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        font-weight: bold;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        padding: 5px 10px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        border: 1px solid #909ba2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    td &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        padding: 5px 10px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        border: 1px solid #909ba2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;7-列表去掉文章内容显示&quot;&gt;&lt;a href=&quot;#7-列表去掉文章内容显示&quot; class=&quot;headerlink&quot; title=&quot;7. 列表去掉文章内容显示&quot;&gt;&lt;/a&gt;7. 列表去掉文章内容显示&lt;/h3&gt;&lt;p&gt;去掉 index.jade 中引用 content 。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;for post in page.posts.toArray()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .post&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .post-title&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      include _partial/helpers&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      a(href=url_for(post.path))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        +title(post)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        span.post-meta=post.date.format(config.date_format)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Maupassant 主题有一些细节对于强迫症晚期患者来说，不改实在是浑身难受，遂记录一下修改项和修改方案。&lt;/p&gt;
&lt;h3 id=&quot;1-修改-toc-的位置&quot;&gt;&lt;a href=&quot;#1-修改-toc-的位置&quot; class=&quot;headerlink&quot; title=&quot;1. 修改 
    
    </summary>
    
      <category term="hexo" scheme="http://bysonline.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bysonline.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
