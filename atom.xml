<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bsyonline&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bysonline.github.io/"/>
  <updated>2016-08-20T07:08:20.420Z</updated>
  <id>http://bysonline.github.io/</id>
  
  <author>
    <name>rolex</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 反射</title>
    <link href="http://bysonline.github.io/2016/08/19/Java%20%E5%8F%8D%E5%B0%84/"/>
    <id>http://bysonline.github.io/2016/08/19/Java 反射/</id>
    <published>2016-08-19T07:20:47.000Z</published>
    <updated>2016-08-20T07:08:20.420Z</updated>
    
    <content type="html">&lt;p&gt;Java 反射是 jdk 1.5 加入新特性。Java 反射机制可以让我们在编译期 (Compile Time) 之外的运行期 (Runtime) 检查类，接口，变量以及方法的信息。反射还可以让我们在运行期实例化对象，调用方法，通过调用 get/set 方法获取变量的值。&lt;/p&gt;
&lt;p&gt;如果我们要将一个对象 User 实例 A 的值赋给实例 B ，通常这样&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//getter/setter&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User A = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.setName(&lt;span class=&quot;string&quot;&gt;&quot;tom&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.setAge(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User B = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;B.setName(A.getName());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;B.setAge(A.getAge());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样写非常简单，但是如果对象 User 的属性很多，那么写起来就比较麻烦了。于是可以利用反射来实现：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class clazz = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;a.b.c.User&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Constructor constructor = clazz.getDeclaredConstructor();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Object B = constructor.newInstance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Field[] fields = clazz.getDeclaredFields();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Field field : fields) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String fieldName = field.getName();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String setMethodName = &lt;span class=&quot;string&quot;&gt;&quot;set&quot;&lt;/span&gt; + fieldName.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toUpperCase() + fieldName.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String getMethodName = &lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt; + fieldName.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toUpperCase() + fieldName.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Method setMethod = clazz.getDeclaredMethod(setMethodName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Class[]&amp;#123;field.getType()&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Method getMethod = clazz.getDeclaredMethod(getMethodName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Class[]&amp;#123;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    setMethod.invoke(B, getMethod.invoke(A, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[]&amp;#123;&amp;#125;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用反射实现，代码多了，但是好处是灵活性提高。不过并不建议这样使用，原因有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码不够精简&lt;/li&gt;
&lt;li&gt;性能不高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以通常我们会借助第三方类库来实现。第三方类库有很多，以 commons.BeanUtils 为例：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;BeanUtils.setProperty(B, field, BeanUtils.getProperty(user, field));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，代码精简了许多。&lt;/p&gt;
&lt;h3 id=&quot;高性能反射库-ReflectASM&quot;&gt;&lt;a href=&quot;#高性能反射库-ReflectASM&quot; class=&quot;headerlink&quot; title=&quot;高性能反射库 ReflectASM&quot;&gt;&lt;/a&gt;高性能反射库 ReflectASM&lt;/h3&gt;&lt;p&gt;关于反射，除了诸多优点，还有一个被人诟病的问题就是性能。不能否认，使用反射性能的确要慢一些，但是随着 Java 的不断优化，反射的速度也在不断提升。另外还是有一些反射库能帮助提升程序性能，比如 ReflectASM 。&lt;/p&gt;
&lt;p&gt;ReflectASM 是通过字节码方式实现反射机制的反射库，写法比较简单，而且比 Java 自己的反射包和 commons.BeanUtils 等要快很多。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;groupId&amp;gt;com.esotericsoftware.reflectasm&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;artifactId&amp;gt;reflectasm&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;version&amp;gt;1.09&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MethodAccess access = MethodAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;access.invoke(B, &lt;span class=&quot;string&quot;&gt;&quot;setName&quot;&lt;/span&gt;, access.invoke(A, &lt;span class=&quot;string&quot;&gt;&quot;getName&quot;&lt;/span&gt;));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然 RefectASM 速度快很多，但是在多次使用到相同的对象还是应该利用缓存才能进一步提升性能。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MethodAccess access = map.get(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (access == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    access = MethodAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    map.put(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, access);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反射是一项非常有用的特性，能够在编程时解决很多特殊的问题，而性能会越来越快，所以应该合理大胆的使用反射。&lt;/p&gt;
&lt;p&gt;补充：关于使用 ReflectASM 的问题&lt;br&gt;使用 ReflectASM 创建类的实例&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ConstructorAccess access = ConstructorAccess.get(User.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;access.newInstance();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是想调用带参数的构造器时，却没有找到方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Java 反射是 jdk 1.5 加入新特性。Java 反射机制可以让我们在编译期 (Compile Time) 之外的运行期 (Runtime) 检查类，接口，变量以及方法的信息。反射还可以让我们在运行期实例化对象，调用方法，通过调用 get/set 方法获取变量的值。&lt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>多线程拾遗</title>
    <link href="http://bysonline.github.io/2016/08/16/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8B%BE%E9%81%97/"/>
    <id>http://bysonline.github.io/2016/08/16/多线程拾遗/</id>
    <published>2016-08-16T08:16:05.000Z</published>
    <updated>2016-08-20T07:13:03.268Z</updated>
    
    <content type="html">&lt;h3 id=&quot;如何创建多线程&quot;&gt;&lt;a href=&quot;#如何创建多线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建多线程&quot;&gt;&lt;/a&gt;如何创建多线程&lt;/h3&gt;&lt;p&gt;这是一个简单的文件，可以继承 Thread 类或是实现接口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;继承 Thread 类，重写父类的 run() 方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; A().start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现 Runnable 接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B()).start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继承 Thread 类和实现 Runnable 接口是最常用的两种创建多线程的方法，从 jdk 1.5 开始加入了 Callable&lt;t&gt; 接口。 Callable 接口和 Runnable 类似，但是可以有返回值，可使用 FutureTask 或线程池启动线程。&lt;/t&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Callable&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FutureTask futureTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FutureTask(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(futureTask).start();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;继承-Thread-和-实现-Runnable-的区别&quot;&gt;&lt;a href=&quot;#继承-Thread-和-实现-Runnable-的区别&quot; class=&quot;headerlink&quot; title=&quot;继承 Thread 和 实现 Runnable 的区别&quot;&gt;&lt;/a&gt;继承 Thread 和 实现 Runnable 的区别&lt;/h3&gt;&lt;p&gt;主要区别有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于 Java 单继承的特点，继承 Thread 类无法再继承其他类相对接口方式有些限制。&lt;/li&gt;
&lt;li&gt;实现 Runnable 接口方式能够实现资源共享。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，实际中更多的是使用 Runnable 接口来创建多线程。&lt;/p&gt;
&lt;h3 id=&quot;Runnable-和-Callable-的区别&quot;&gt;&lt;a href=&quot;#Runnable-和-Callable-的区别&quot; class=&quot;headerlink&quot; title=&quot;Runnable 和 Callable 的区别&quot;&gt;&lt;/a&gt;Runnable 和 Callable 的区别&lt;/h3&gt;&lt;p&gt;Runnable 接口的 run() 方法返回值。&lt;br&gt;Callable 接口是 jdk 1.5 以后加入的，call() 返回一个泛型类型的返回值，除了带返回值外和 Runnable 基本没有区别。Callable 通常 Future/FutureTask 一起使用。除了使用 FutureTask 外，还可以使用线程池。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ExecutorService executor = Executors.newFixedThreadPool(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Future future = executor.submit(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;多线程同步&quot;&gt;&lt;a href=&quot;#多线程同步&quot; class=&quot;headerlink&quot; title=&quot;多线程同步&quot;&gt;&lt;/a&gt;多线程同步&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;如何创建多线程&quot;&gt;&lt;a href=&quot;#如何创建多线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建多线程&quot;&gt;&lt;/a&gt;如何创建多线程&lt;/h3&gt;&lt;p&gt;这是一个简单的文件，可以继承 Thread 类或是实现接口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;继承 
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>HashMap 的工作原理</title>
    <link href="http://bysonline.github.io/2016/08/09/HashMap%20%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://bysonline.github.io/2016/08/09/HashMap 的工作原理/</id>
    <published>2016-08-09T03:37:57.000Z</published>
    <updated>2016-08-10T07:41:28.406Z</updated>
    
    <content type="html">&lt;p&gt;HashMap 是最常用的集合类之一，在面试中也出境颇高。经常会问 &lt;strong&gt;HashMap 的特点&lt;/strong&gt; 及 &lt;strong&gt;HashMap 和 Hashtable 的区别&lt;/strong&gt; 等等。那么就先做一下简单总结。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;HashMap&lt;/th&gt;
&lt;th&gt;Hashtable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;所在位置&lt;/td&gt;
&lt;td&gt;实现 Map 接口，JDK 1.2 加入到 Java Collections Framework&lt;/td&gt;
&lt;td&gt;Hashtable 集成自 Dictionary ，JDK 1.2 实现了 Map 接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持 null key 或 null value&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;线程安全&lt;/td&gt;
&lt;td&gt;不安全&lt;/td&gt;
&lt;td&gt;安全&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上是3点是我们耳熟能详的二者之间的区别，Hashtable 不是我们此篇的重点，暂且放在一旁。&lt;/p&gt;
&lt;h3 id=&quot;碰撞&quot;&gt;&lt;a href=&quot;#碰撞&quot; class=&quot;headerlink&quot; title=&quot;碰撞&quot;&gt;&lt;/a&gt;碰撞&lt;/h3&gt;&lt;p&gt;上边这个面试题是通常只是开胃菜，每个熟悉 Java 的人都能知晓。上题热身之后，经常会有这样的问题提出： &lt;strong&gt;HashMap 是如何存储数据的?&lt;/strong&gt;&lt;br&gt;看过源码就能知道 HashMap 底层是使用 &lt;strong&gt;Array&lt;/strong&gt; 和 &lt;strong&gt;Linked Table&lt;/strong&gt; 来存储数据的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jdk 1.8.0_74&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; V &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(K key, V value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; putVal(hash(key), key, value, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;HashMap 在 put 一个 key-value 对时，首先对 key 做 hash 操作，然后将 key 分配到 table[i] 的位置。如果两个 key 的 hash(key) 结果相同，那么这两个 key 就都会分配到 table[i] 的位置，这两个 key 就会在 table[i] 的位置以链表的形式存储，这种现象称为 &lt;strong&gt;碰撞&lt;/strong&gt;。&lt;br&gt;可以用一张图来说明，我们假设将取模作为 &lt;code&gt;hash(key)&lt;/code&gt; 的话，put 如下一组数据：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;7&lt;/th&gt;
&lt;th&gt;17&lt;/th&gt;
&lt;th&gt;23&lt;/th&gt;
&lt;th&gt;33&lt;/th&gt;
&lt;th&gt;39&lt;/th&gt;
&lt;th&gt;49&lt;/th&gt;
&lt;th&gt;55&lt;/th&gt;
&lt;th&gt;73&lt;/th&gt;
&lt;th&gt;87&lt;/th&gt;
&lt;th&gt;103&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;将形成下图的结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到对 hash(key) 操作后，数据通过链表的形式分别存储在索引1和7的位置， 17,33,49 都存储在位置1，就是上文提到的碰撞。如果要从 HashMap 中取到33的值，首先需要定位到位置1，再遍历链表。理想情况下，如果在一个 HashMap 中数据都分散在数组中，没有出现碰撞，那么 get 的速度最快，时间复杂度为 O(1) , 如果出现碰撞，get 的性能将有所下降。极端情况下，如果所有数据都存储在相同位置，那 HashMap 就变成了 Linked Table ，时间复杂度为 O(n) 。&lt;br&gt;针对这样的情况，JDK 1.8 对 HashMap 的实现方式进行了优化，如果链表的长度大于阀值，就将链表改成红黑树，get 的时间复杂度为 O(logn) , 如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好了，说了这么多，简单总结一下吧。通常情况下，如果两个对象的 key 的 hashCode() 相同，那么他们 bucket 的位置相同而发生碰撞，Map.Entry 对象存储在链表中。当 get 时，通过 hashCode() 找到 bucket 的位置，然后遍历链表，通过 key.equals() 找到指定的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么使用 String 作为 key 是一个不错选择？&lt;/strong&gt;&lt;br&gt;其实，答案可以从上边获得。因为，String 是 final 的，并且有固定的 hashCode() 和 equals() 方法，所以能有效减少碰撞的发生，同时由于不可变，可以缓存 key 的 hashcode ，提高 get 对象的速度。同理，如果自定义对象作为 key ，应保证对象是不可变的，即保证 equals() 和 hashCode() 方法正确重写。&lt;/p&gt;
&lt;h3 id=&quot;rehashing-问题&quot;&gt;&lt;a href=&quot;#rehashing-问题&quot; class=&quot;headerlink&quot; title=&quot;rehashing 问题&quot;&gt;&lt;/a&gt;rehashing 问题&lt;/h3&gt;&lt;p&gt;HashMap 还有一个知识点会作为问题提出： HashMap 的容量是固定的么？ 如何扩容？ 会有什么问题？…等等。诸如此类的一系列问题，了解了 HashMap 的 resize 之后都可以轻松回答。&lt;br&gt;HashMap 有两个重要的参数，DEFAULT_INITIAL_CAPACITY 和 DEFAULT_LOAD_FACTOR 。在初始化时默认容量为16，当 bucket 的使用数量超过 DEFAULT_INITIAL_CAPACITY 和 DEFAULT_LOAD_FACTOR 的乘积时，HashMap 会将容量扩充为原来的两倍（就是将上图中的数组大小变成原来的两倍），同时重新按照 hash(key) 来存放对象到新的数组中，这个过程叫做 rehashing 。&lt;br&gt;在 JDK 1.8 之前，每次 resize 需要从新计算 hash(key) 的值，在 JDK 1.8 中对这里也做了优化。1.8 的 resize 使用的是2次幂扩展，所以在 resize 的过程中，元素要么在原索引位置，要么在2倍索引位置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看一下源码会更清楚&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jdk 1.8.0_74&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; loHead = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, loTail = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; hiHead = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, hiTail = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node&amp;lt;K,V&amp;gt; next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;do &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    next = e.next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((e.hash &amp;amp; oldCap) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loTail == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            loHead = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            loTail.next = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        loTail = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hiTail == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hiHead = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hiTail.next = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        hiTail = e;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((e = next) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loTail != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loTail.next = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    newTab[j] = loHead;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hiTail != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    hiTail.next = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    newTab[j + oldCap] = hiHead;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;先遍历链表算出 hiTail 和 loTail ，然后根据 hiTail 和 loTail 得到元素在新数组中的位置。说简单点，由于扩容是向左移一位，那么不用每次都重新计算 hash(key) ，只要看左边新扩展的一位是0还是1, 0就留在原位置，1就将原位置索引加上原容量得到新位置的索引。计算结果参考下图：&lt;br&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/hashmap_04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后 rehashing 有没有问题呢？ 在多线程环境下，rehashing 会出现条件竞争，导致程序死循环。这也是为什么要在多线程环境中对 HashMap 进行线程安全处理的原因了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;HashMap 是最常用的集合类之一，在面试中也出境颇高。经常会问 &lt;strong&gt;HashMap 的特点&lt;/strong&gt; 及 &lt;strong&gt;HashMap 和 Hashtable 的区别&lt;/strong&gt; 等等。那么就先做一下简单总结。&lt;/p&gt;
&lt;table&gt;
&lt;th
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 中的回调函数</title>
    <link href="http://bysonline.github.io/2016/08/08/Java%20%E4%B8%AD%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"/>
    <id>http://bysonline.github.io/2016/08/08/Java 中的回调函数/</id>
    <published>2016-08-08T09:23:33.000Z</published>
    <updated>2016-08-20T07:04:17.276Z</updated>
    
    <content type="html">&lt;p&gt;在 Spring 和 Hibernate 中有很多回调函数的用法，感觉使用起来非常方便，那么回调函数是如何实现的呢？&lt;/p&gt;
&lt;p&gt;首先需要定义一个回调接口，比如：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueryCallback&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;List&amp;lt;T&amp;gt; &lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Session session)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在定义的方法是调用接口方法。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;queryForList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String sql, Callback callback)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Session session = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Session();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; callback.query(session);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调用的时候就可以使用回调了。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String sql = &lt;span class=&quot;string&quot;&gt;&quot;select * from user&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryDB().queryForList(sql, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List &lt;span class=&quot;title&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Session session)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;String&amp;gt; list = session.query(sql);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 Spring 和 Hibernate 中有很多回调函数的用法，感觉使用起来非常方便，那么回调函数是如何实现的呢？&lt;/p&gt;
&lt;p&gt;首先需要定义一个回调接口，比如：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 关键字 volatile</title>
    <link href="http://bysonline.github.io/2016/08/08/Java%20%E5%85%B3%E9%94%AE%E5%AD%97%20volatile/"/>
    <id>http://bysonline.github.io/2016/08/08/Java 关键字 volatile/</id>
    <published>2016-08-08T03:39:01.000Z</published>
    <updated>2016-08-08T07:29:54.975Z</updated>
    
    <content type="html">&lt;p&gt;volatile 是 Java 语言的关键字，用来修饰变量。Java 的每个线程都拥有自己的内存，在某个时间点，多个线程中间的同一个变量的值可能是不同的，volatile 的作用就是让变量对所有线程都是一致的，每次获得的都是该变量的最新值。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;volatile 在特殊情况下（变量之间或前后没有约束）是能够保证线程安全的，反之，是不能保证线程安全的，比如，不能使用 volatile 来实现线程安全的计数器。 因为 volatile 不是原子性的，而 &lt;code&gt;i+1&lt;/code&gt; 或 &lt;code&gt;i++&lt;/code&gt; 操作实际是三个原子操作（read，赋值，write）的组合，所以不能保证线程安全。&lt;/p&gt;
&lt;p&gt;volatile 不能像 synchronized 一样广泛的用于线程安全，虽然 volatile 的用法要和某些情况下的性能要比 synchronized 和锁简单和高效，但误用将导致程序出现错误。如果能在正确的场景使用 volatile ，还是能使程序更加简单。比如程序需要有一个标识来指示一个一次性操作，像资源初始化，那么使用 volatile 是非常方便的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isInit；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  isINit = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(isInit)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;volatile 变量比使用 synchronized 代码要简单一些，在这种只有一种状态转换的情况使用 volatile 是合适的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;volatile 和 synchronized 简单比较&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;volatile&lt;/th&gt;
&lt;th&gt;synchronized&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;作用位置&lt;/td&gt;
&lt;td&gt;变量&lt;/td&gt;
&lt;td&gt;方法，代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;同步对象&lt;/td&gt;
&lt;td&gt;主内存和线程内存之间某个变量的值&lt;/td&gt;
&lt;td&gt;主内存和线程内存之间所有变量的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;消耗资源&lt;/td&gt;
&lt;td&gt;少&lt;/td&gt;
&lt;td&gt;多&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;volatile 是 Java 语言的关键字，用来修饰变量。Java 的每个线程都拥有自己的内存，在某个时间点，多个线程中间的同一个变量的值可能是不同的，volatile 的作用就是让变量对所有线程都是一致的，每次获得的都是该变量的最新值。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>枚举单例读取配置文件</title>
    <link href="http://bysonline.github.io/2016/08/02/%E6%9E%9A%E4%B8%BE%E5%8D%95%E4%BE%8B%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://bysonline.github.io/2016/08/02/枚举单例读取配置文件/</id>
    <published>2016-08-02T15:29:14.000Z</published>
    <updated>2016-08-08T08:53:43.049Z</updated>
    
    <content type="html">&lt;p&gt;枚举实现单例在《Effective in java》中提到过，好处是简洁，同时不会有序列化和反序列化的问题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;下面一个 enum 单例的实际示例，用来读取配置文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.properties&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;host=htt:&lt;span class=&quot;comment&quot;&gt;//localhost&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port=&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AppContext.java&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ResourceBundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;  AppContext &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ResourceBundle rb = ResourceBundle.getBundle(&lt;span class=&quot;string&quot;&gt;&quot;config&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rb.getString(key);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;``&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;**client**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```java&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Client&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String host = AppContext.INSTANCE.getValue(&lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;枚举实现单例在《Effective in java》中提到过，好处是简洁，同时不会有序列化和反序列化的问题。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://bysonline.github.io/2016/08/02/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://bysonline.github.io/2016/08/02/单例模式/</id>
    <published>2016-08-01T16:00:47.000Z</published>
    <updated>2016-08-20T07:04:17.276Z</updated>
    
    <content type="html">&lt;p&gt;单例模式是最简单的设计模式之一，用于保证系统中只有一个类的实例的场景。&lt;/p&gt;
&lt;p&gt;单例模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有一个实例&lt;/li&gt;
&lt;li&gt;只能自己创建自己的实例&lt;/li&gt;
&lt;li&gt;能够对外提供自己创建的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-程序示例&quot;&gt;&lt;a href=&quot;#1-程序示例&quot; class=&quot;headerlink&quot; title=&quot;1. 程序示例&quot;&gt;&lt;/a&gt;1. 程序示例&lt;/h3&gt;&lt;h4 id=&quot;1-1-懒汉式&quot;&gt;&lt;a href=&quot;#1-1-懒汉式&quot; class=&quot;headerlink&quot; title=&quot;1.1 懒汉式&quot;&gt;&lt;/a&gt;1.1 懒汉式&lt;/h4&gt;&lt;p&gt;在 Gof 的设计模式中介绍单例模式使用的说明代码叫做懒汉式，java 版代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton instance = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是最简单的代码实现，但是这个代码存在问题，即在多线程的程序中，不能保证一定是单例的。原因也很简单，代码被编译成字节码被执行，有可能在刚进入 if 判断后时间分片就用完了，另一个线程也进入 if 判断，从而创建多个实例。一种简单的处理方法是将方法同步。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-饿汉式&quot;&gt;&lt;a href=&quot;#1-2-饿汉式&quot; class=&quot;headerlink&quot; title=&quot;1.2 饿汉式&quot;&gt;&lt;/a&gt;1.2 饿汉式&lt;/h4&gt;&lt;p&gt;另外还有一种比较常见的叫做饿汉式，这种方式更符合 java 的风格。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Singleton INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-3-静态内部类&quot;&gt;&lt;a href=&quot;#1-3-静态内部类&quot; class=&quot;headerlink&quot; title=&quot;1.3 静态内部类&quot;&gt;&lt;/a&gt;1.3 静态内部类&lt;/h4&gt;&lt;p&gt;通常情况下，直接使用恶汉式是最安逸的，况且内存越来越不是瓶颈了。但是如果还对装载类时初始化耿耿于怀，可以使用这种方式。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonHolder&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Singleton INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SingletonHolder.INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用静态内部类的好处是不会在装载 Singleton 的时候就实例化，而是在调用 getInstance() 方法时才创建实例。&lt;/p&gt;
&lt;h4 id=&quot;1-4-枚举&quot;&gt;&lt;a href=&quot;#1-4-枚举&quot; class=&quot;headerlink&quot; title=&quot;1.4 枚举&quot;&gt;&lt;/a&gt;1.4 枚举&lt;/h4&gt;&lt;p&gt;在 jdk1.5 以后加入了枚举，也可以使用枚举来实现单例。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; Singleton &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INSTANCE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whateverMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 enum 方式创建单例的好处是简单，简单到让人看不懂。怎么使用可参考一个例子 &lt;a href=&quot;../../../../2016/08/02/枚举单例读取配置文件/&quot;&gt;枚举单例读取配置文件&lt;/a&gt; 。&lt;/p&gt;
&lt;h4 id=&quot;1-5-双重校验锁&quot;&gt;&lt;a href=&quot;#1-5-双重校验锁&quot; class=&quot;headerlink&quot; title=&quot;1.5 双重校验锁&quot;&gt;&lt;/a&gt;1.5 双重校验锁&lt;/h4&gt;&lt;p&gt;网上很多单例的文章中都提到了双重校验锁的方式。这种方式出现的目的是对懒汉式进行优化。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Singleton &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (Singleton.class) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (instance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在《java 与模式》一书中针对这种方式也做了分析，这种方式并不能真正达到效果，所以还是安心使用饿汉吧。&lt;/p&gt;
&lt;p&gt;2016-08-08 补充：&lt;br&gt;网上一些资料中提到，自 JDK 1.5 以后，修复了 volatile 关键字的 bug ，所以，JDK 1.5 以后双重校验锁可以正常工作了。关于 volatile 关键字更多知识点，参考 &lt;a href=&quot;../../../../2016/08/08/Java 关键字 volatile/&quot;&gt;Java 关键字 volatile&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-类图&quot;&gt;&lt;a href=&quot;#2-类图&quot; class=&quot;headerlink&quot; title=&quot;2. 类图&quot;&gt;&lt;/a&gt;2. 类图&lt;/h3&gt;&lt;p&gt;如果要画出常用设计模式的类图，单例无疑是最简单的了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqgix.com1.z0.glb.clouddn.com/singleton.png&quot; alt=&quot;单例模式&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;单例模式是最简单的设计模式之一，用于保证系统中只有一个类的实例的场景。&lt;/p&gt;
&lt;p&gt;单例模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有一个实例&lt;/li&gt;
&lt;li&gt;只能自己创建自己的实例&lt;/li&gt;
&lt;li&gt;能够对外提供自己创建的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="设计模式" scheme="http://bysonline.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>计算时间间隔</title>
    <link href="http://bysonline.github.io/2016/07/29/%E8%AE%A1%E7%AE%97%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94/"/>
    <id>http://bysonline.github.io/2016/07/29/计算时间间隔/</id>
    <published>2016-07-29T03:58:13.000Z</published>
    <updated>2016-07-29T06:12:56.674Z</updated>
    
    <content type="html">&lt;p&gt;在计算日期或是计算程序执行时间时，经常会需要计算两个时间或日期的间隔，通常可以通过一下几种方法实现。&lt;/p&gt;
&lt;h3 id=&quot;1-使用-Java-日期-api&quot;&gt;&lt;a href=&quot;#1-使用-Java-日期-api&quot; class=&quot;headerlink&quot; title=&quot;1. 使用 Java 日期 api&quot;&gt;&lt;/a&gt;1. 使用 Java 日期 api&lt;/h3&gt;&lt;p&gt;先计算出相差的毫秒值，再转化成天，小时，分，秒。&lt;br&gt;按时间进制自己算，代码略。&lt;/p&gt;
&lt;h3 id=&quot;2-使用-Joda-库&quot;&gt;&lt;a href=&quot;#2-使用-Joda-库&quot; class=&quot;headerlink&quot; title=&quot;2. 使用 Joda 库&quot;&gt;&lt;/a&gt;2. 使用 Joda 库&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DateTime dt1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DateTime(d1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DateTime dt2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DateTime(d2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; days = Days.daysBetween(dt1, dt2).getDays();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = Hours.hoursBetween(dt1, dt2).getHours() % &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = Minutes.minutesBetween(dt1, dt2).getMinutes() % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = Seconds.secondsBetween(dt1, dt2).getSeconds() % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;br&gt;计算出两个时间的毫秒数&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Interval interval = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Interval(start, end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Period p = interval.toPeriod();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; days = p.getDays();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hours = p.getHours();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minutes = p.getMinutes();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seconds = p.getSeconds();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-使用-TimeUnit&quot;&gt;&lt;a href=&quot;#3-使用-TimeUnit&quot; class=&quot;headerlink&quot; title=&quot;3. 使用 TimeUnit&quot;&gt;&lt;/a&gt;3. 使用 TimeUnit&lt;/h3&gt;&lt;p&gt;计算出两个时间的毫秒数，使用 java.util.concurrent 包下的 TimeUint 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; diff = t2 - t1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; days = TimeUnit.MILLISECONDS.toDays(diff);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; hours = TimeUnit.MILLISECONDS.toHours(diff) % &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; minutes = TimeUnit.MILLISECONDS.toMinutes(diff) % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; seconds = TimeUnit.MILLISECONDS.toSeconds(diff) % &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在计算日期或是计算程序执行时间时，经常会需要计算两个时间或日期的间隔，通常可以通过一下几种方法实现。&lt;/p&gt;
&lt;h3 id=&quot;1-使用-Java-日期-api&quot;&gt;&lt;a href=&quot;#1-使用-Java-日期-api&quot; class=&quot;headerlink&quot; title=&quot;1.
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://bysonline.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>线程的状态</title>
    <link href="http://bysonline.github.io/2016/07/24/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81/"/>
    <id>http://bysonline.github.io/2016/07/24/线程的状态/</id>
    <published>2016-07-24T13:50:03.000Z</published>
    <updated>2016-07-27T11:05:00.949Z</updated>
    
    <content type="html">&lt;p&gt;参考 jdk 源码 java.lant.Thread.State 。Java 的线程有以下几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NEW&lt;br&gt;线程未启动。&lt;/li&gt;
&lt;li&gt;RUNNABLE&lt;br&gt;线程在 JVM 中运行，也可能在等待其他资源。&lt;/li&gt;
&lt;li&gt;BLOCKED&lt;br&gt;线程阻塞并等待锁，在调用 wait() 方法后进入或重新进入同步方法。&lt;/li&gt;
&lt;li&gt;WAITTING&lt;br&gt;线程在执行特定的方法如： Object.wait(), Thread.join(), LockSupport.park() 后等待另一个线程执行特定的方法，如：Object.notify()/Object.notifyAll() 。&lt;/li&gt;
&lt;li&gt;TIMED_WAITTING&lt;br&gt;线程在执行特定方法后进入执行时间的等待状态，如： Thread.sleep(), Object.wait(), Thread.join(), LockSupport.parkNanos, LockSupport.parkUntil&lt;/li&gt;
&lt;li&gt;TERMINATED&lt;br&gt;线程执行完成。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;参考 jdk 源码 java.lant.Thread.State 。Java 的线程有以下几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NEW&lt;br&gt;线程未启动。&lt;/li&gt;
&lt;li&gt;RUNNABLE&lt;br&gt;线程在 JVM 中运行，也可能在等待其他资源。&lt;/li&gt;
&lt;li&gt;BLOCK
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Thread" scheme="http://bysonline.github.io/tags/Thread/"/>
    
      <category term="Javase" scheme="http://bysonline.github.io/tags/Javase/"/>
    
  </entry>
  
  <entry>
    <title>面试题汇总</title>
    <link href="http://bysonline.github.io/2016/07/24/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://bysonline.github.io/2016/07/24/面试题汇总/</id>
    <published>2016-07-24T08:03:23.000Z</published>
    <updated>2016-08-20T07:04:17.276Z</updated>
    
    <content type="html">&lt;p&gt;把自己遇到和网上看到的一写面试题汇总了一下，帮助梳理和学习一些知识点。&lt;/p&gt;
&lt;h1 id=&quot;一-算法&quot;&gt;&lt;a href=&quot;#一-算法&quot; class=&quot;headerlink&quot; title=&quot;一. 算法&quot;&gt;&lt;/a&gt;一. 算法&lt;/h1&gt;&lt;h2 id=&quot;1-1-排序&quot;&gt;&lt;a href=&quot;#1-1-排序&quot; class=&quot;headerlink&quot; title=&quot;1.1 排序&quot;&gt;&lt;/a&gt;1.1 排序&lt;/h2&gt;&lt;h3 id=&quot;1）-时间复杂度&quot;&gt;&lt;a href=&quot;#1）-时间复杂度&quot; class=&quot;headerlink&quot; title=&quot;1） 时间复杂度&quot;&gt;&lt;/a&gt;1） 时间复杂度&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/排序算法/&quot;&gt;算法排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-快速排序&quot;&gt;&lt;a href=&quot;#2）-快速排序&quot; class=&quot;headerlink&quot; title=&quot;2） 快速排序&quot;&gt;&lt;/a&gt;2） 快速排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/快速排序/&quot;&gt;快速排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;3）-冒泡排序&quot;&gt;&lt;a href=&quot;#3）-冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;3） 冒泡排序&quot;&gt;&lt;/a&gt;3） 冒泡排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/冒泡排序/&quot;&gt;冒泡排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;4）-选择排序&quot;&gt;&lt;a href=&quot;#4）-选择排序&quot; class=&quot;headerlink&quot; title=&quot;4） 选择排序&quot;&gt;&lt;/a&gt;4） 选择排序&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/选择排序/&quot;&gt;选择排序&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;1-2-查找&quot;&gt;&lt;a href=&quot;#1-2-查找&quot; class=&quot;headerlink&quot; title=&quot;1.2 查找&quot;&gt;&lt;/a&gt;1.2 查找&lt;/h2&gt;&lt;h3 id=&quot;1）-二分查找&quot;&gt;&lt;a href=&quot;#1）-二分查找&quot; class=&quot;headerlink&quot; title=&quot;1） 二分查找&quot;&gt;&lt;/a&gt;1） 二分查找&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/二分查找/&quot;&gt;二分查找&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-红黑树&quot;&gt;&lt;a href=&quot;#2）-红黑树&quot; class=&quot;headerlink&quot; title=&quot;2） 红黑树&quot;&gt;&lt;/a&gt;2） 红黑树&lt;/h3&gt;&lt;h2 id=&quot;1-3-树&quot;&gt;&lt;a href=&quot;#1-3-树&quot; class=&quot;headerlink&quot; title=&quot;1.3 树&quot;&gt;&lt;/a&gt;1.3 树&lt;/h2&gt;&lt;h3 id=&quot;1）-二叉树&quot;&gt;&lt;a href=&quot;#1）-二叉树&quot; class=&quot;headerlink&quot; title=&quot;1） 二叉树&quot;&gt;&lt;/a&gt;1） 二叉树&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/16/二叉树/&quot;&gt;二叉树&lt;/a&gt; 。&lt;/p&gt;
&lt;h1 id=&quot;二-Java-基础&quot;&gt;&lt;a href=&quot;#二-Java-基础&quot; class=&quot;headerlink&quot; title=&quot;二. Java 基础&quot;&gt;&lt;/a&gt;二. Java 基础&lt;/h1&gt;&lt;h2 id=&quot;2-1-nio&quot;&gt;&lt;a href=&quot;#2-1-nio&quot; class=&quot;headerlink&quot; title=&quot;2.1 nio&quot;&gt;&lt;/a&gt;2.1 nio&lt;/h2&gt;&lt;h2 id=&quot;2-2-线程&quot;&gt;&lt;a href=&quot;#2-2-线程&quot; class=&quot;headerlink&quot; title=&quot;2.2 线程&quot;&gt;&lt;/a&gt;2.2 线程&lt;/h2&gt;&lt;h3 id=&quot;1）-线程有几种状态？&quot;&gt;&lt;a href=&quot;#1）-线程有几种状态？&quot; class=&quot;headerlink&quot; title=&quot;1） 线程有几种状态？&quot;&gt;&lt;/a&gt;1） 线程有几种状态？&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/07/24/线程的状态/&quot;&gt;线程的状态&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;2）-线程的优先级&quot;&gt;&lt;a href=&quot;#2）-线程的优先级&quot; class=&quot;headerlink&quot; title=&quot;2） 线程的优先级&quot;&gt;&lt;/a&gt;2） 线程的优先级&lt;/h3&gt;&lt;p&gt;Java 线程的优先级有10种，从1到10，默认为5。Java 线程的优先级具有继承性。&lt;/p&gt;
&lt;h2 id=&quot;2-3-JVM&quot;&gt;&lt;a href=&quot;#2-3-JVM&quot; class=&quot;headerlink&quot; title=&quot;2.3 JVM&quot;&gt;&lt;/a&gt;2.3 JVM&lt;/h2&gt;&lt;h2 id=&quot;2-4-集合&quot;&gt;&lt;a href=&quot;#2-4-集合&quot; class=&quot;headerlink&quot; title=&quot;2.4 集合&quot;&gt;&lt;/a&gt;2.4 集合&lt;/h2&gt;&lt;h3 id=&quot;1）-HashMap-工作原理&quot;&gt;&lt;a href=&quot;#1）-HashMap-工作原理&quot; class=&quot;headerlink&quot; title=&quot;1） HashMap 工作原理&quot;&gt;&lt;/a&gt;1） HashMap 工作原理&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/08/09/HashMap 的工作原理/&quot;&gt;HashMap 的工作原理&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2）-ConcurrentHashMap原理&quot;&gt;&lt;a href=&quot;#2）-ConcurrentHashMap原理&quot; class=&quot;headerlink&quot; title=&quot;2） ConcurrentHashMap原理&quot;&gt;&lt;/a&gt;2） ConcurrentHashMap原理&lt;/h3&gt;&lt;h1 id=&quot;三-设计模式&quot;&gt;&lt;a href=&quot;#三-设计模式&quot; class=&quot;headerlink&quot; title=&quot;三. 设计模式&quot;&gt;&lt;/a&gt;三. 设计模式&lt;/h1&gt;&lt;h2 id=&quot;1）-单例模式&quot;&gt;&lt;a href=&quot;#1）-单例模式&quot; class=&quot;headerlink&quot; title=&quot;1） 单例模式&quot;&gt;&lt;/a&gt;1） 单例模式&lt;/h2&gt;&lt;p&gt;参考 &lt;a href=&quot;../../../../2016/08/02/单例模式/&quot;&gt;单例模式&lt;/a&gt; 。&lt;/p&gt;
&lt;h1 id=&quot;四-大数据&quot;&gt;&lt;a href=&quot;#四-大数据&quot; class=&quot;headerlink&quot; title=&quot;四. 大数据&quot;&gt;&lt;/a&gt;四. 大数据&lt;/h1&gt;&lt;h1 id=&quot;五-Linux&quot;&gt;&lt;a href=&quot;#五-Linux&quot; class=&quot;headerlink&quot; title=&quot;五. Linux&quot;&gt;&lt;/a&gt;五. Linux&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;把自己遇到和网上看到的一写面试题汇总了一下，帮助梳理和学习一些知识点。&lt;/p&gt;
&lt;h1 id=&quot;一-算法&quot;&gt;&lt;a href=&quot;#一-算法&quot; class=&quot;headerlink&quot; title=&quot;一. 算法&quot;&gt;&lt;/a&gt;一. 算法&lt;/h1&gt;&lt;h2 id=&quot;1-1-排序&quot;&gt;&lt;a h
    
    </summary>
    
      <category term="编程" scheme="http://bysonline.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="面试" scheme="http://bysonline.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>gulp 环境安装</title>
    <link href="http://bysonline.github.io/2016/07/20/Gulp%20%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>http://bysonline.github.io/2016/07/20/Gulp 环境安装/</id>
    <published>2016-07-20T03:13:51.000Z</published>
    <updated>2016-07-24T14:05:51.635Z</updated>
    
    <content type="html">&lt;p&gt;gulp是一个前端代码构建工具。安装gulp需要node.js环境，node.js环境安装参考 &lt;a href=&quot;../../../../2016/07/16/node.js 环境安装/&quot;&gt;node.js 环境安装&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;全局安装gulp命令行工具&quot;&gt;&lt;a href=&quot;#全局安装gulp命令行工具&quot; class=&quot;headerlink&quot; title=&quot;全局安装gulp命令行工具&quot;&gt;&lt;/a&gt;全局安装gulp命令行工具&lt;/h3&gt;&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt; install -g gulp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt; install --&lt;span class=&quot;built_in&quot;&gt;global&lt;/span&gt; gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装开发环境&quot;&gt;&lt;a href=&quot;#安装开发环境&quot; class=&quot;headerlink&quot; title=&quot;安装开发环境&quot;&gt;&lt;/a&gt;安装开发环境&lt;/h3&gt;&lt;p&gt;切换到项目目录安装开发环境。&lt;br&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install -&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果网速慢，可以使用淘宝镜像。&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -g cnpm &lt;span class=&quot;comment&quot;&gt;--registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo cnpm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建gulp文件&quot;&gt;&lt;a href=&quot;#创建gulp文件&quot; class=&quot;headerlink&quot; title=&quot;创建gulp文件&quot;&gt;&lt;/a&gt;创建gulp文件&lt;/h3&gt;&lt;p&gt;在项目根目录下创建gulpfile.js&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 将你的默认的任务代码放在这&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h3&gt;&lt;p&gt;安装完成执行命令启动gulp。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;gulp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;gulp是一个前端代码构建工具。安装gulp需要node.js环境，node.js环境安装参考 &lt;a href=&quot;../../../../2016/07/16/node.js 环境安装/&quot;&gt;node.js 环境安装&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;全局安装gulp命令行
    
    </summary>
    
      <category term="前端" scheme="http://bysonline.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="gulp" scheme="http://bysonline.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>我的 hexo 我做主</title>
    <link href="http://bysonline.github.io/2016/07/19/%E6%88%91%E7%9A%84%20hexo%20%E6%88%91%E5%81%9A%E4%B8%BB/"/>
    <id>http://bysonline.github.io/2016/07/19/我的 hexo 我做主/</id>
    <published>2016-07-19T06:27:28.000Z</published>
    <updated>2016-08-05T15:37:24.449Z</updated>
    
    <content type="html">&lt;p&gt;Maupassant 主题有一些细节对于强迫症晚期患者来说，不改实在是浑身难受，遂记录一下修改项和修改方案。&lt;/p&gt;
&lt;h3 id=&quot;1-修改-toc-的位置&quot;&gt;&lt;a href=&quot;#1-修改-toc-的位置&quot; class=&quot;headerlink&quot; title=&quot;1. 修改 toc 的位置&quot;&gt;&lt;/a&gt;1. 修改 toc 的位置&lt;/h3&gt;&lt;p&gt;toc 在正文的右上，占了正文的空间，在 toc 较长的情况下，正文不能很好的显示，所以将 toc 改为在文章开头显示。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.toc-article &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  border: 1px solid #bbb;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  border-radius: 7px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  margin: 1.1em 0 0 2em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  padding: 0.7em 0.7em 0 0.7em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  max-width: 40%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  float: right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: 0.5em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主要是去掉浮动和边框，在调整一下周围位置。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.toc-article &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  padding: 40px 0 0 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 20px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-去掉-toc-中的序号&quot;&gt;&lt;a href=&quot;#2-去掉-toc-中的序号&quot; class=&quot;headerlink&quot; title=&quot;2. 去掉 toc 中的序号&quot;&gt;&lt;/a&gt;2. 去掉 toc 中的序号&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line-height: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 20px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    line-height: 1.8em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    li &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      list-style-type: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      a &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        .toc-number &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          display: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .toc-child &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin-left: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-left: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-修改代码区样式&quot;&gt;&lt;a href=&quot;#3-修改代码区样式&quot; class=&quot;headerlink&quot; title=&quot;3. 修改代码区样式&quot;&gt;&lt;/a&gt;3. 修改代码区样式&lt;/h3&gt;&lt;p&gt;在将语言改成 zh_CN 后，代码区行高需要调整,去掉 &lt;code&gt;.codeblock&lt;/code&gt; 的 line-height 属性,修改 &lt;code&gt;.codeblock.line&lt;/code&gt; 的 height 属性。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;figure.highlight,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.codeblock &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:     #f7f8f8;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin:         10px 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /* line-height:    1.2em; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    color:          #333;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-top:    15px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    overflow:       hidden;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // All lines in gutter and code container&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .line &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        height:    2.1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        font-size: 13px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-去掉文章结尾-tags&quot;&gt;&lt;a href=&quot;#4-去掉文章结尾-tags&quot; class=&quot;headerlink&quot; title=&quot;4. 去掉文章结尾 tags&quot;&gt;&lt;/a&gt;4. 去掉文章结尾 tags&lt;/h3&gt;&lt;p&gt;tags 改成在文章开始位置显示，结尾的 tags 就没必要显示了，干脆隐藏掉。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.post &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .tags&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-bottom: 1em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height: 30px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        display: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        margin-right: .5em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;amp;:before &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            font-family: &quot;FontAwesome&quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            content: &quot;\f0c6&quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            padding-right: 0.3em;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调整分享按钮的位置&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.article-share-link&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-调整文章列表显示&quot;&gt;&lt;a href=&quot;#5-调整文章列表显示&quot; class=&quot;headerlink&quot; title=&quot;5. 调整文章列表显示&quot;&gt;&lt;/a&gt;5. 调整文章列表显示&lt;/h3&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.post-content&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-修改-table-样式&quot;&gt;&lt;a href=&quot;#6-修改-table-样式&quot; class=&quot;headerlink&quot; title=&quot;6. 修改 table 样式&quot;&gt;&lt;/a&gt;6. 修改 table 样式&lt;/h3&gt;&lt;p&gt;给 table 加上边框，将原有框线调细&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;table &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    th &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        font-weight: bold;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        padding: 5px 10px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        border: 1px solid #909ba2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    td &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        padding: 5px 10px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        border: 1px solid #909ba2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Maupassant 主题有一些细节对于强迫症晚期患者来说，不改实在是浑身难受，遂记录一下修改项和修改方案。&lt;/p&gt;
&lt;h3 id=&quot;1-修改-toc-的位置&quot;&gt;&lt;a href=&quot;#1-修改-toc-的位置&quot; class=&quot;headerlink&quot; title=&quot;1. 修改 
    
    </summary>
    
      <category term="hexo" scheme="http://bysonline.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bysonline.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Jade 语法实践</title>
    <link href="http://bysonline.github.io/2016/07/18/Jade%20%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/"/>
    <id>http://bysonline.github.io/2016/07/18/Jade 语法实践/</id>
    <published>2016-07-18T06:29:39.000Z</published>
    <updated>2016-08-05T15:00:10.518Z</updated>
    
    <content type="html">&lt;p&gt;jade 是一个模板引擎，可以通过 node.js 来使用。本来对前端技术了解不多，接触 jade 源于搭建 hexo 博客系统。maupassant 主题模板是基于 jade 的，所以想按自己的想法来定制 maupassant 主题简单了解了一下 jade 。&lt;/p&gt;
&lt;p&gt;hexo 的 maupassant 主题是一个极简主题模板，安装也很简单，用起来不错，但是有些小地方还是想按照自己的想法改一改：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认只有归档，没有 tags 和 categories ，而且添加了 tags 和 categories 后不能显示 tags 和 categories 的列表；&lt;/li&gt;
&lt;li&gt;每篇文章 tags 标签在文章末尾，希望 categories 一样在文章开头显示；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;增加-tags-列表&quot;&gt;&lt;a href=&quot;#增加-tags-列表&quot; class=&quot;headerlink&quot; title=&quot;增加 tags 列表&quot;&gt;&lt;/a&gt;增加 tags 列表&lt;/h3&gt;&lt;p&gt;安装 hexo 和 maupassant 主题后在 themes/maupassant/_ config.yml 中添加 tags 和 categories 两个 menu，重启服务界面能看到 tags 和 categories 的菜单导航。但是点击会报找不到页面错误，所以还需要生成 tags/index和categories/index 。执行&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page &lt;span class=&quot;keyword&quot;&gt;tags&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page categories&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会生成 tags/index.md 和 categories/index.md 文件，重启后不会再报找不到页面的错误。&lt;br&gt;但 index.md 默认是空白页面，内容需要自己写，所以想参考 archive 来写一些内容。想显示的内容也很简单，首先就是列出所有 tags 或 categories ，然后能显示每个 tag 或category 下的文章数量。&lt;br&gt;网站的 tags 和 categories 不是固定的，所以在 index.md 中写死是不行的，需要利用模板来实现。看了看 maupassant 主题的 layout 结构，首先先参考 archive.jade 创建了一个 tags.jade 文件,只保留大的结构。&lt;br&gt;&lt;figure class=&quot;highlight xl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;extends base&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;title&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;title&lt;/span&gt;= &lt;span class=&quot;built_in&quot;&gt;page&lt;/span&gt;.tag + &lt;span class=&quot;string&quot;&gt;&#39; | &#39;&lt;/span&gt; + config.&lt;span class=&quot;built_in&quot;&gt;title&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt; content&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  include _partial/paginator.jade&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考 archive.jade 代码，对网站所有 tag 进行分组，然后遍历显示。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;each tags &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _.groupBy(site&lt;span class=&quot;selector-class&quot;&gt;.tags&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.toArray&lt;/span&gt;(), function(p)&amp;#123;return page.tag&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.listing&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; tag &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          a(href=url_for(tag.path))= _.split(tag&lt;span class=&quot;selector-class&quot;&gt;.path&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;\/&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后一行代码等号后边是 tag 的名字，原本以为 tag.name 就可以了，但是重建之后发现不能正常显示。不明白原因，查看了 hexo 的文档，在 hexo 的变量声明中 tag 的名字是page.tag，猜测是在 post 页面中才能引用 tag 属性。查了文档也没找到正确的打开方式，忽然发现 tag.path 可以正常显示 tag 的路径，所以是否可以在 path 中将 tag 的 name 提取出来呢？于是查了一下&lt;a href=&quot;https://lodash.com/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://lodash.com/docs&lt;/a&gt;( archive.jade 里注释中有让看的，就看看喽)，还真有 spilt 的函数。改完重新生成，显示正常了(别忘了把 tag/index.md 的 layout 改成 tags 哈)。&lt;/p&gt;
&lt;h3 id=&quot;改变文章中-tags-的显示位置&quot;&gt;&lt;a href=&quot;#改变文章中-tags-的显示位置&quot; class=&quot;headerlink&quot; title=&quot;改变文章中 tags 的显示位置&quot;&gt;&lt;/a&gt;改变文章中 tags 的显示位置&lt;/h3&gt;&lt;p&gt;默认界面 tags 在文章结束坐下位置，但我期望在界面文章开始位置增加 tags 的显示，即在点击量统计的后边再增加显示 tags 内容。结合模板代码和界面的显示效果，可以大致定位到具体代码位置。文章正文默认使用的 post 模板，位于 themes/maupassant/layout/post.jade 。在文件15-19行是点击量统计的代码，所以在后面可添加 tags 显示代码。&lt;br&gt;&lt;figure class=&quot;highlight xl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;page&lt;/span&gt;.tags.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  span= &lt;span class=&quot;string&quot;&gt;&#39; | &#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  span.tag&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; tag &lt;span class=&quot;built_in&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;page&lt;/span&gt;.tags.toArray()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      i(class=[&lt;span class=&quot;string&quot;&gt;&#39;fa&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;fa-paperclip&#39;&lt;/span&gt;]) &amp;amp;nbsp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      a(href=url_for(tag.&lt;span class=&quot;built_in&quot;&gt;path&lt;/span&gt;))= tag.&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jade 模板的语法有严格缩进要求，所以和上边的代码位置一致即可。&lt;br&gt;代码看起来很简单，但是改的时候还是费了一些周折。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;page&lt;span class=&quot;selector-class&quot;&gt;.tags&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.toArray&lt;/span&gt;()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;的写法参考上文&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;page&lt;span class=&quot;selector-class&quot;&gt;.categories&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.toArray&lt;/span&gt;()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;很容易写出来。&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;i(&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=[&lt;span class=&quot;string&quot;&gt;&#39;fa&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;fa-paperclip&#39;&lt;/span&gt;]) &amp;amp;nbsp;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是一个 i 标签，用于显示图标，渲染成 html 是&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;i &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fa fa-paperclip&quot;&lt;/span&gt;&amp;gt;&amp;amp;nbsp;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果不看 jade 的语法，只根据 post.jade 文件中的代码可以大致推测 jade 的语法规则比如&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;.category&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;渲染成 html 后是&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;span &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;category&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是单 class 属性图标无法正常显示，也试过&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.fa&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.fa-paperclip&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;或&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.fa&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;.fa-paperclip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等等写法，均不能达到效果，只好去看 jade 的文档。在&lt;a href=&quot;http://jade-lang.com/reference/attributes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jade-lang.com/reference/attributes/&lt;/a&gt;中 &lt;strong&gt;Class Attributes&lt;/strong&gt; 找到了多个 class 的语法说明，问题至此得以解决。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;jade 是一个模板引擎，可以通过 node.js 来使用。本来对前端技术了解不多，接触 jade 源于搭建 hexo 博客系统。maupassant 主题模板是基于 jade 的，所以想按自己的想法来定制 maupassant 主题简单了解了一下 jade 。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="前端" scheme="http://bysonline.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Jade" scheme="http://bysonline.github.io/tags/Jade/"/>
    
  </entry>
  
  <entry>
    <title>Client SDK (Java 版)</title>
    <link href="http://bysonline.github.io/2016/07/16/Client%20SDK%20(Java%20%E7%89%88%EF%BC%89/"/>
    <id>http://bysonline.github.io/2016/07/16/Client SDK (Java 版）/</id>
    <published>2016-07-16T08:00:45.000Z</published>
    <updated>2016-08-05T15:00:10.662Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ChinadaasClient client = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ChinadaasClient(url, clientId, appId, &lt;span class=&quot;built_in&quot;&gt;token&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PersonCheckRequest request1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PersonCheckRequest(name, identity, &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; result = client.get(request1);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div 
    
    </summary>
    
      <category term="chinadaas" scheme="http://bysonline.github.io/categories/chinadaas/"/>
    
    
      <category term="chinadaas" scheme="http://bysonline.github.io/tags/chinadaas/"/>
    
  </entry>
  
  <entry>
    <title>电信数据核验接口</title>
    <link href="http://bysonline.github.io/2016/07/16/%E7%94%B5%E4%BF%A1%E6%95%B0%E6%8D%AE%E6%A0%B8%E9%AA%8C%E6%8E%A5%E5%8F%A3/"/>
    <id>http://bysonline.github.io/2016/07/16/电信数据核验接口/</id>
    <published>2016-07-16T08:00:43.000Z</published>
    <updated>2016-07-20T07:54:44.416Z</updated>
    
    <content type="html">&lt;p&gt;信息核查是一系列查询api接口，以REST服务方式提供。用户按照指定规则开发接口程序或引入SDK后，可通过程序调用接口。使用前请先申请客户账号和令牌。令牌由客户保存，用于生成签名。为使该服务的使用者详细了解服务接口调用方法和规范，特编制此接口使用说明文档。&lt;/p&gt;
&lt;h3 id=&quot;公共参数&quot;&gt;&lt;a href=&quot;#公共参数&quot; class=&quot;headerlink&quot; title=&quot;公共参数&quot;&gt;&lt;/a&gt;公共参数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;是否必需&lt;/th&gt;
&lt;th&gt;示例值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;clientId&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;guest&lt;/td&gt;
&lt;td&gt;用户唯一标识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;signatrue&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;用户请求的数据签名，由用户令牌，timestamp，nonce加密获得&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;2016-07-05 13:42:10&lt;/td&gt;
&lt;td&gt;时间戳，服务器允许最大10分钟误差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nonce&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;-1200534598&lt;/td&gt;
&lt;td&gt;随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;可选&lt;/td&gt;
&lt;td&gt;xml&lt;/td&gt;
&lt;td&gt;默认为json&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;1-电信数据身份核验&quot;&gt;&lt;a href=&quot;#1-电信数据身份核验&quot; class=&quot;headerlink&quot; title=&quot;1. 电信数据身份核验&quot;&gt;&lt;/a&gt;1. 电信数据身份核验&lt;/h3&gt;&lt;p&gt;根据提供的手机号，姓名，身份证号，由系统针对信息的一致性进行核查，并返回结果。&lt;/p&gt;
&lt;h4 id=&quot;1-1-URL&quot;&gt;&lt;a href=&quot;#1-1-URL&quot; class=&quot;headerlink&quot; title=&quot;1.1 URL&quot;&gt;&lt;/a&gt;1.1 URL&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://ip:port/drink/greenTea&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ip:port/drink/greenTea&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-请求参数&quot;&gt;&lt;a href=&quot;#1-2-请求参数&quot; class=&quot;headerlink&quot; title=&quot;1.2 请求参数&quot;&gt;&lt;/a&gt;1.2 请求参数&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;是否必需&lt;/th&gt;
&lt;th&gt;示例值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;人员姓名&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;phone&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;18610011001&lt;/td&gt;
&lt;td&gt;手机号码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;identity&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;必须&lt;/td&gt;
&lt;td&gt;210219197101011246&lt;/td&gt;
&lt;td&gt;身份证&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;1-3-响应参数&quot;&gt;&lt;a href=&quot;#1-3-响应参数&quot; class=&quot;headerlink&quot; title=&quot;1.3 响应参数&quot;&gt;&lt;/a&gt;1.3 响应参数&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;类&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;返回消息数据结构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;├ errorCode&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;错误码，0表示成功&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;└ result&lt;/td&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;核验结果数据结构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;├ code&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;消息码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;├ message&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;消息说明&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;1-4-响应示例&quot;&gt;&lt;a href=&quot;#1-4-响应示例&quot; class=&quot;headerlink&quot; title=&quot;1.4 响应示例&quot;&gt;&lt;/a&gt;1.4 响应示例&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;xml&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; standalone=&lt;span class=&quot;string&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;errorCode&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;errorCode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;message&lt;/span&gt;&amp;gt;&lt;/span&gt;核验不一致&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;message&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;json&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;errorCode&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;result&quot;&lt;/span&gt;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;code&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;message&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;核验不一致&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-5-异常&quot;&gt;&lt;a href=&quot;#1-5-异常&quot; class=&quot;headerlink&quot; title=&quot;1.5 异常&quot;&gt;&lt;/a&gt;1.5 异常&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;xml&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; standalone=&lt;span class=&quot;string&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;errorCode&lt;/span&gt;&amp;gt;&lt;/span&gt;9995&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;errorCode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;json&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;errorCode&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;9995&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-6-消息码描述&quot;&gt;&lt;a href=&quot;#1-6-消息码描述&quot; class=&quot;headerlink&quot; title=&quot;1.6 消息码描述&quot;&gt;&lt;/a&gt;1.6 消息码描述&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;代码值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;一致&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;不一致&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;返回消息代码解释&quot;&gt;&lt;a href=&quot;#返回消息代码解释&quot; class=&quot;headerlink&quot; title=&quot;返回消息代码解释&quot;&gt;&lt;/a&gt;返回消息代码解释&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;代码值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;errorCode&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;成功&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9999&lt;/td&gt;
&lt;td&gt;用户身份信息错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9998&lt;/td&gt;
&lt;td&gt;账户状态异常&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9997&lt;/td&gt;
&lt;td&gt;账户类型异常&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9996&lt;/td&gt;
&lt;td&gt;没有订购该产品&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9995&lt;/td&gt;
&lt;td&gt;没有查询权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9994&lt;/td&gt;
&lt;td&gt;请求参数格式不正确&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9993&lt;/td&gt;
&lt;td&gt;系统内部错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;9992&lt;/td&gt;
&lt;td&gt;请求过期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;信息核查是一系列查询api接口，以REST服务方式提供。用户按照指定规则开发接口程序或引入SDK后，可通过程序调用接口。使用前请先申请客户账号和令牌。令牌由客户保存，用于生成签名。为使该服务的使用者详细了解服务接口调用方法和规范，特编制此接口使用说明文档。&lt;/p&gt;
&lt;h3 
    
    </summary>
    
      <category term="chinadaas" scheme="http://bysonline.github.io/categories/chinadaas/"/>
    
    
      <category term="chinadaas" scheme="http://bysonline.github.io/tags/chinadaas/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper-3.4.6 安装</title>
    <link href="http://bysonline.github.io/2016/07/16/Zookeeper-3.4.6%20%E5%AE%89%E8%A3%85/"/>
    <id>http://bysonline.github.io/2016/07/16/Zookeeper-3.4.6 安装/</id>
    <published>2016-07-16T08:00:38.000Z</published>
    <updated>2016-08-05T15:00:10.562Z</updated>
    
    <content type="html">&lt;p&gt;zookeeper 是分布式的开源协调服务程序，官方网站 &lt;a href=&quot;http://zookeeper.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zookeeper.apache.org/&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;1-环境变量&quot;&gt;&lt;a href=&quot;#1-环境变量&quot; class=&quot;headerlink&quot; title=&quot;1. 环境变量&quot;&gt;&lt;/a&gt;1. 环境变量&lt;/h3&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.6&quot;&lt;/span&gt;&amp;gt;/etc/&lt;span class=&quot;keyword&quot;&gt;profile&lt;/span&gt;.d/zookeeper.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PATH=\$PATH :$ZOOKEEPER_HOME/bin&#39;&lt;/span&gt;&amp;gt;&amp;gt;/etc/&lt;span class=&quot;keyword&quot;&gt;profile&lt;/span&gt;.d/zookeeper.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;. /etc/&lt;span class=&quot;keyword&quot;&gt;profile&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-配置文件&quot;&gt;&lt;a href=&quot;#2-配置文件&quot; class=&quot;headerlink&quot; title=&quot;2. 配置文件&quot;&gt;&lt;/a&gt;2. 配置文件&lt;/h3&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cp &lt;span class=&quot;regexp&quot;&gt;/usr/&lt;/span&gt;zookeeper&lt;span class=&quot;regexp&quot;&gt;/zookeeper-3.4.6/&lt;/span&gt;conf&lt;span class=&quot;regexp&quot;&gt;/zoo_sample.cfd /u&lt;/span&gt;sr&lt;span class=&quot;regexp&quot;&gt;/zookeeper/&lt;/span&gt;zookeeper-&lt;span class=&quot;number&quot;&gt;3.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/conf/&lt;/span&gt;zoo.cfd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-启动&quot;&gt;&lt;a href=&quot;#3-启动&quot; class=&quot;headerlink&quot; title=&quot;3. 启动&quot;&gt;&lt;/a&gt;3. 启动&lt;/h3&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;zookeeper/zookeeper&lt;span class=&quot;number&quot;&gt;-3.4&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/bin/&lt;/span&gt;zkServer.sh start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;zookeeper 是分布式的开源协调服务程序，官方网站 &lt;a href=&quot;http://zookeeper.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zookeeper.apache.org/&lt;/a&gt; 。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://bysonline.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Zookeeper" scheme="http://bysonline.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>jQuery常用操作操作</title>
    <link href="http://bysonline.github.io/2016/07/16/jQuery%20%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%93%8D%E4%BD%9C/"/>
    <id>http://bysonline.github.io/2016/07/16/jQuery 常用操作操作/</id>
    <published>2016-07-16T08:00:33.000Z</published>
    <updated>2016-08-05T15:00:10.562Z</updated>
    
    <content type="html">&lt;p&gt;jQuery 的常用操作整理一下，备忘。&lt;/p&gt;
&lt;h3 id=&quot;1-遍历json-map&quot;&gt;&lt;a href=&quot;#1-遍历json-map&quot; class=&quot;headerlink&quot; title=&quot;1. 遍历json map&quot;&gt;&lt;/a&gt;1. 遍历json map&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$.each(map,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;key,values&lt;/span&gt;)&lt;/span&gt;&amp;#123;     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(key);     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(values).each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;/t&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;jQuery 的常用操作整理一下，备忘。&lt;/p&gt;
&lt;h3 id=&quot;1-遍历json-map&quot;&gt;&lt;a href=&quot;#1-遍历json-map&quot; class=&quot;headerlink&quot; title=&quot;1. 遍历json map&quot;&gt;&lt;/a&gt;1. 遍历json map&lt;/h3&gt;&lt;fi
    
    </summary>
    
      <category term="前端" scheme="http://bysonline.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="http://bysonline.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Sqlplus 执行文件</title>
    <link href="http://bysonline.github.io/2016/07/16/Sqlplus%20%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/"/>
    <id>http://bysonline.github.io/2016/07/16/Sqlplus 执行文件/</id>
    <published>2016-07-16T08:00:30.000Z</published>
    <updated>2016-08-05T15:00:10.562Z</updated>
    
    <content type="html">&lt;p&gt;使用客户端工具导入数据量大时会卡死，所以改用命令行执行。&lt;/p&gt;
&lt;h3 id=&quot;1-连接数据库&quot;&gt;&lt;a href=&quot;#1-连接数据库&quot; class=&quot;headerlink&quot; title=&quot;1. 连接数据库&quot;&gt;&lt;/a&gt;1. 连接数据库&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;sqlplus&lt;/span&gt; user/password@&lt;span class=&quot;number&quot;&gt;192.168.11.15:1521&lt;/span&gt;/orcl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-执行文件&quot;&gt;&lt;a href=&quot;#2-执行文件&quot; class=&quot;headerlink&quot; title=&quot;2. 执行文件&quot;&gt;&lt;/a&gt;2. 执行文件&lt;/h3&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;SQL&amp;gt; @D:&lt;span class=&quot;string&quot;&gt;\a.sql&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用客户端工具导入数据量大时会卡死，所以改用命令行执行。&lt;/p&gt;
&lt;h3 id=&quot;1-连接数据库&quot;&gt;&lt;a href=&quot;#1-连接数据库&quot; class=&quot;headerlink&quot; title=&quot;1. 连接数据库&quot;&gt;&lt;/a&gt;1. 连接数据库&lt;/h3&gt;&lt;figure class=&quot;
    
    </summary>
    
      <category term="数据库" scheme="http://bysonline.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://bysonline.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>spring boot 使用</title>
    <link href="http://bysonline.github.io/2016/07/16/Spring%20boot%20%E4%BD%BF%E7%94%A8/"/>
    <id>http://bysonline.github.io/2016/07/16/Spring boot 使用/</id>
    <published>2016-07-16T08:00:27.000Z</published>
    <updated>2016-07-16T15:10:24.922Z</updated>
    
    <content type="html">&lt;p&gt;spring boot可使用Main运行一个web程序，对于简单的web应用还是比较方便的。&lt;/p&gt;
&lt;h3 id=&quot;1-工程目录&quot;&gt;&lt;a href=&quot;#1-工程目录&quot; class=&quot;headerlink&quot; title=&quot;1. 工程目录&quot;&gt;&lt;/a&gt;1. 工程目录&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;project
    src/main/assembly/assembly.xml
    src/main/java/com/rolex/samples/
        bean/
        controller/
        dao/
        service/
        util/
        Main.java
    src/main/resources/
        static/  (相当于webcontent)
            css/
            html/
            js/
            index.html
        application.properties    
    test/
    target/
    pom.xml
    README.md
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2-程序主要文件&quot;&gt;&lt;a href=&quot;#2-程序主要文件&quot; class=&quot;headerlink&quot; title=&quot;2. 程序主要文件&quot;&gt;&lt;/a&gt;2. 程序主要文件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Main.java&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&lt;span class=&quot;meta-keyword&quot;&gt;import&lt;/span&gt; org.springframework.boot.SpringApplication;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&lt;span class=&quot;meta-keyword&quot;&gt;import&lt;/span&gt; org.springframework.boot.autoconfigure.SpringBootApplication;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Created with IntelliJ IDEA.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * User: rolex&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Date: 2016/05/06&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Version: 1.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@SpringBootApplication&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(String[] args) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        SpringApplication.run(Main.class, args);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Main是程序的入口类，程序启动时会扫描Main所在目录子目录的所有文件进行spring注入（对声明了spring注解的类有效）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;pom.xml&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.4.0.BUILD-SNAPSHOT&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-devtools&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;optional&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;optional&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-jdbc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;repository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-snapshots&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;Spring Snapshots&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;https://repo.spring.io/libs-snapshot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;repository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-启动&quot;&gt;&lt;a href=&quot;#2-启动&quot; class=&quot;headerlink&quot; title=&quot;2. 启动&quot;&gt;&lt;/a&gt;2. 启动&lt;/h3&gt;&lt;p&gt;执行命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java -jar app.jar –spring.config.name=app&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;spring boot可使用Main运行一个web程序，对于简单的web应用还是比较方便的。&lt;/p&gt;
&lt;h3 id=&quot;1-工程目录&quot;&gt;&lt;a href=&quot;#1-工程目录&quot; class=&quot;headerlink&quot; title=&quot;1. 工程目录&quot;&gt;&lt;/a&gt;1. 工程目录&lt;/h3&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring boot cache （redis）使用</title>
    <link href="http://bysonline.github.io/2016/07/16/Spring%20boot%20cache%20%E4%BD%BF%E7%94%A8/"/>
    <id>http://bysonline.github.io/2016/07/16/Spring boot cache 使用/</id>
    <published>2016-07-16T08:00:24.000Z</published>
    <updated>2016-07-16T14:06:53.697Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-pom-xml&quot;&gt;&lt;a href=&quot;#1-pom-xml&quot; class=&quot;headerlink&quot; title=&quot;1. pom.xml&quot;&gt;&lt;/a&gt;1. pom.xml&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-cachemanager&quot;&gt;&lt;a href=&quot;#2-cachemanager&quot; class=&quot;headerlink&quot; title=&quot;2. cachemanager&quot;&gt;&lt;/a&gt;2. cachemanager&lt;/h3&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.cache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.CacheManager&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.cache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.annotation&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.EnableCaching&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.cache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.interceptor&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.KeyGenerator&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.context&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.annotation&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Bean&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.context&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.annotation&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Configuration&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.data&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.cache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.RedisCacheManager&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import org&lt;span class=&quot;selector-class&quot;&gt;.springframework&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.data&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.core&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.RedisTemplate&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import java&lt;span class=&quot;selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.reflect&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Method&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@Configuration&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@EnableCaching&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class RedisCache &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Bean&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public CacheManager cacheManager(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;variable&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;rawtypes&quot;&lt;/span&gt;) RedisTemplate redisTemplate) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return new RedisCacheManager(redisTemplate);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * 自定义key的生成策略&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     * @return&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@Bean&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public KeyGenerator myKeyGenerator()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;KeyGenerator&lt;/span&gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;variable&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            public Object generate(Object target, Method method, Object... params) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                StringBuilder sb = new StringBuilder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; (Object &lt;span class=&quot;attribute&quot;&gt;obj &lt;/span&gt;: params) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    sb&lt;span class=&quot;selector-class&quot;&gt;.append&lt;/span&gt;(obj.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                return sb.toString();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-方法上添加注解&quot;&gt;&lt;a href=&quot;#3-方法上添加注解&quot; class=&quot;headerlink&quot; title=&quot;3. 方法上添加注解&quot;&gt;&lt;/a&gt;3. 方法上添加注解&lt;/h3&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@Cacheable&lt;/span&gt;(value = &lt;span class=&quot;string&quot;&gt;&quot;entInfo&quot;&lt;/span&gt;, keyGenerator = &lt;span class=&quot;string&quot;&gt;&quot;myKeyGenerator&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public EntMultipleInfo findEntInfo(String entName) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    looger&lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;no cache&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;在调用方法前会先去查询是否有缓存。&lt;br&gt;对象需要能够序列化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;4-application-properties&quot;&gt;&lt;a href=&quot;#4-application-properties&quot; class=&quot;headerlink&quot; title=&quot;4. application.properties&quot;&gt;&lt;/a&gt;4. application.properties&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.database&lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.host&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;11.21&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.port&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pool&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.max-idle&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pool&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.min-idle&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pool&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.max-active&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;spring&lt;span class=&quot;selector-class&quot;&gt;.redis&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pool&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.max-wait&lt;/span&gt;=-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-pom-xml&quot;&gt;&lt;a href=&quot;#1-pom-xml&quot; class=&quot;headerlink&quot; title=&quot;1. pom.xml&quot;&gt;&lt;/a&gt;1. pom.xml&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="technology" scheme="http://bysonline.github.io/categories/technology/"/>
    
    
      <category term="spring-boot" scheme="http://bysonline.github.io/tags/spring-boot/"/>
    
  </entry>
  
</feed>
